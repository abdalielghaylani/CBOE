define({"0":{i:0.0188025161853161,u:"../Content/DataLoader/Data Loader Introduction.htm",a:"Welcome to the Data Loader chapter. Several ChemBioOffice Enterprise applications let you submit records to an Oracle database. Unfortunately, these applications typically let you enter only one record at a time. If you need to import multiple records at a time -- dozens, hundreds, or even thousands ...",t:"Data Loader Introduction"},"1":{i:0.0571223620989789,u:"../Content/DataLoader/The Command-Line Version of Data Loader.htm",a:"The command-line based application is a more powerful version of the original DataLoader, but does require the user to create at least one xml file using a text editor. This xml file is called a ‘mapping file’, and tells the program exactly how to migrate your data-file’s information into the ...",t:"The Command-Line Version of Data Loader"},"2":{i:0.0147255621911743,u:"../Content/DataLoader/The Command-Line Actions.htm",a:"The command-line version of the data-loading application has two primary classes of actions that can be taken. These are: ‘Discovery’ actions to help the users explore a data-file and resolve potential problems, and\n ‘Registration’ actions, which engages your Registration system to import data ...",t:"The Command-Line Actions"},"3":{i:0.0147255621911743,u:"../Content/DataLoader/Anatomy of the Command-Line.htm",a:"The DataLoader is run from a Windows console window, but can also be executed from a batch file, a Windows Scheduled Task, or another program. The most common use will probably be from a simple batch file (a Windows ‘command’-file with the extension CMD). The program name (coedataloader.exe, or just ...",t:"Anatomy of the Command-Line"},"4":{i:0.0147255621911743,u:"../Content/DataLoader/Individual Mapping Templates.htm",a:"Although the prospect of editing xml can be a bit scary, it can actually be as simple as a copy-and-paste operation with a very small amount of editing. Users may undertake this task themselves using these templates.\n When creating your first data-mapping file, start with an empty text file using ...",t:"Individual Mapping Templates"},"5":{i:0.0147255621911743,u:"../Content/DataLoader/Extended Mapping Features.htm",a:"Resolving/Translating Raw Data Values\n Sometimes external data needs to be translated before it can be imported… not language translation, but value translation. This process can also be called resolution. The concept is quite simple: the program can use some user-provided text file like a thesaurus ...",t:"Extended Mapping Features"},"6":{i:0.00381560218559163,u:"../Content/DataLoader/Enabling the Pre-Load Record Matching.htm",a:"To enable pre-load record-matching from either version of the Registration data-loading applications, new configuration settings are required. These can be modified via the ‘Extended Duplicate-checking’ tab from Registration’s System Settings page. By default, the chemical structure is used as the ...",t:"Enabling the Pre-Load Record Matching"},"7":{i:0.100884398726523,u:"../Content/DataLoader/Optimizations for Bulk Loading.htm",a:"This section of the guide provides a high level description of the steps involved in loading a Registry Record into the system, highlights areas where load performance can be improved and provides some specific recommendations. Related Topics Read Records from the Source File Validate Properties ...",t:"Optimizations for Bulk Loading"},"8":{i:0.0103825565082922,u:"../Content/DataLoader/Read Records from the Source File.htm",a:"The client application (ie. COEDataLoader) reads the source data (sdf, Excel…) from the file system to parse the content into local client memory.  If the source file type is sdf, then the client will pre-scan all database records in order to establish the data type of each field in the file.  The ...",t:"Read Records from the Source File"},"9":{i:0.0103825565082922,u:"../Content/DataLoader/Validate Properties Values.htm",a:"After reading the data file the client validates all custom property data values against the conditions defined in the system configuration.  This process is performed as each record is read from file.  It does not consume significant time and does not require any optimizations.  There is little to ...",t:"Validate Properties Values"},"10":{i:0.0103825565082922,u:"../Content/DataLoader/Send Records to Application Server.htm",a:"After validation, the prepared Registry Records are transferred from the client to the application server.  A fraction of the record load time is consumed by this data transfer step.  The highest gain in this step can be achieved by avoiding the cost of moving data between a remote client system and ...",t:"Send Records to Application Server"},"11":{i:0.0103825565082922,u:"../Content/DataLoader/Execute Addins.htm",a:"The Registration System is highly configurable.  It can be extended with Addins that perform additional calculations and validations.  Depending on the number and nature of configured Addins, a significant fraction of the total record load time can be consumed in this step.  It is therefore possible ...",t:"Execute Addins"},"12":{i:0.0103825565082922,u:"../Content/DataLoader/Chemical Structure Duplicate Check.htm",a:"This is the key step required to ensure that registered records are chemically de-duplicated.  The step involves a query matching the incoming chemical structure against the contents of the REGDB.STRUCTURES.STRUCTURE database column.  The query is performed by the CSCartridge.  It is critical that a ...",t:"Chemical Structure Duplicate Check"},"13":{i:0.0103825565082922,u:"../Content/DataLoader/Extended Duplicate Checking.htm",a:"This step is only performed if the \"Find Custom Field Duplicates\" addin is enabled.  The step involves a query matching a designated incoming property value against the contents of a corresponding column in a database. The query contains a filter of the form UPPER(\u003cCOLUMNNAME\u003e) = ...",t:"Extended Duplicate Checking"},"14":{i:0.0103825565082922,u:"../Content/DataLoader/Parse and Insert Records into Oracle Tables.htm",a:"Once the data has been validated and duplicate checked it must be inserted into Oracle tables.  This process involves parsing xml and inserting several data rows into the database.  The process is both CPU and disk IO intensive.  Significant performance boosts can be obtained during bulk loading by ...",t:"Parse and Insert Records into Oracle Tables"},"15":{i:0.0103825565082922,u:"../Content/DataLoader/Index Chemical Documents with CsCartridge.htm",a:"There are four CSCartridge indexes on the REGDB database.  Two of the indexes are only used for application search screens.  One is only populated when data is inserted into the fragments table.  The last one is used for duplicate check searching when records are inserted in the database.  \n The ...",t:"Index Chemical Documents with CsCartridge"},"16":{i:0.0103825565082922,u:"../Content/DataLoader/Disable Refresh of  Oracle Materialized Views.htm",a:"In systems where the integration between the Chemical Inventory and Registration modules has been enabled, there may be Materialized Views of data inserted into the REGDB tables.  By default, these views are configured to update as each row is committed to the database.  The process of keeping ...",t:"Disable Refresh of  Oracle Materialized Views"},"17":{i:0.0103825565082922,u:"../Content/DataLoader/Fetch Newly Inserted Record.htm",a:"The final step is to retrieve the newly inserted Registry Record out of the database so that it can be returned to the client for display or logging operations.  For systems where Row Level Security has been enabled, the performance of retrieving database records is slightly impacted.  For bulk load ...",t:"Fetch Newly Inserted Record"},"18":{i:0.0103825565082922,u:"../Content/DataLoader/Oracle Optimizer Statistics.htm",a:"As always, Oracle performance is highly dependent on maintaining up-to-data statistics on all database objects in order to allow the Oracle query optimizer to chose the most efficient execution plan.  During bulk load operations, the state of the database objects will change significantly as the ...",t:"Oracle Optimizer Statistics"},"19":{i:0.00381560218559163,u:"../Content/DataLoader/Missing Indexes.htm",a:"On some systems the following database indexes may be missing and should be created to improve the performance of bulk loading:\n Connect regdb/oracle@\u0026\u0026YourTNSName\n create index index_compoundmol_strucid on compound_molecule(structureid);\n create index index_mixcomp_mixcompound on ...",t:"Missing Indexes"},"20":{i:0.00381560218559163,u:"../Content/DataLoader/Application Tracing.htm",a:"The command line COEDataLoader tool provides timing information for several of the steps described above.  It can be used to pinpoint specific trouble areas where optimizations may be required to improve load performance.  The trace files will be written to a “Performance Trace” directory directly ...",t:"Application Tracing"},"21":{i:0.00381560218559163,u:"../Content/DataLoader/Oracle Tracing.htm",a:"The best way to reach maximum performance for a bulk loading operation is to enable and analyze a database level trace.  Such a trace contains detailed information of which database task are responsible for low load performance. \n CBOE applications do not do all of their work within a single Oracle ...",t:"Oracle Tracing"},"22":{i:0.00381560218559163,u:"../Content/DataLoader/Sample Optimization SQL Scripts.htm",a:"Before Bulk Load -- Script to revert changes after Registration Legacy and Bulk Loads -- Before running the script: -- 1. Enable Registration Addins previously disabled -- 2. Re-enable Row Level Security if appropriate -- 3. Reset Duplicate Check System Setting to previous state connect ...",t:"Sample Optimization SQL Scripts"},"23":{i:0.00381560218559163,u:"../Content/DataLoader/XML Mapping Template for Data Loader.htm",a:"XML Mapping Template for Data Loader XML MAPPING TEMPLATE FOR IDENTIFIERS XML MAPPING TEMPLATE FOR PROPERTIES XML MAPPING TEMPLATE FOR PROJECT Related Topics Data Loader",t:"XML Mapping Template for Data Loader"},"24":{i:0.091138785843932,u:"../Content/DataLoader/Workflow.htm",a:"Data Loader serves two primary purposes: Enables you to add data to the Registration Enterprise database. Lets you export data to a text or XML file so that the data may be used in other ChemBioOffice Enterprise applications. Related Topics Adding Data Exporting Data Importing a Data File to Load ...",t:"Workflow"},"25":{i:0.0136536348691613,u:"../Content/DataLoader/Adding Data.htm",a:"There are two methods for adding data to the database of Registration Enterprise. You can either load the data to the temporary table where it can be reviewed before it is added to the permanent table; or, you can submit the data directly to the permanent table without the data being reviewed. ...",t:"Adding Data"},"26":{i:0.0136536348691613,u:"../Content/DataLoader/Exporting Data.htm",a:"The method of exporting data to a text or XML file is similar to that of adding data to the database of Registration Enterprise. However, instead of adding the data to a database, you create a new data file, in either XML or text format. This file can be later used in another ChemBioOffice ...",t:"Exporting Data"},"27":{i:0.0208160880982688,u:"../Content/DataLoader/Importing a Data File to Load.htm",a:"The file formats that you can import are: .cfw (ChemFinder Form) .cfx (Flow-Cal file) .sdf (Structure data file) .xls (Excel Workbook) .txt (Text file) .csv (Comma Separated Values file) .mdb (Access database) .mst (ChemFinder Chemical Structure Index) Related Topics Workflow",t:"Importing a Data File to Load"},"28":{i:0.0136536348691613,u:"../Content/DataLoader/Mapping Input and Output Fields.htm",a:"Mapping Input and Output Fields Mapping refers to pairing an input field with an output field. The input fields from the source data file are mapped to the fields in the database where the data is to be loaded. Related Topics Workflow",t:"Mapping Input and Output Fields"},"29":{i:0.0136536348691613,u:"../Content/DataLoader/Configuring Job Settings.htm",a:"Configuring Job Settings This involves: Selecting the record where the loading process will start. Selecting the number of records to load. Scheduling the loading process. Related Topics Workflow",t:"Configuring Job Settings"},"30":{i:0.0136536348691613,u:"../Content/DataLoader/Accessing Data Loader.htm",a:"To log into Data Loader: Open the ChemBioOffice Enterprise (CBOE) Manager homepage and click the DataLoader Client icon in the Applications \u0026 Utilities section. If you are accessing Data Loader for the first time, a dialog box will prompt you to install Data Loader. Else, the login screen appears ...",t:"Accessing Data Loader"},"31":{i:0.0136536348691613,u:"../Content/DataLoader/Getting Help.htm",a:"Getting Help The Data Loader User Guide is provided as\nWindows Help files (a compiled Webhelp format).\nTo access the Data Loader User Guide,\nselect Help\u003eContents from the menu bar.\n Related Topics Workflow",t:"Getting Help"},"32":{i:0.0166712817606657,u:"../Content/DataLoader/Working with Registration Enterprise.htm",a:"Registration Enterprise lets you track and characterize\ncomponents and batches procured or\nsynthesized by chemical laboratories. When\nyou submit components into Registration\nEnterprise, the components are typically stored\nin a temporary table.\n Normally, the components stored in the temporary\ntable ...",t:"Working with Registration Enterprise"},"33":{i:0.0150304519999791,u:"../Content/DataLoader/Loading Substances.htm",a:"A substance is a material with a specific chemical\ncomposition. A substance can be either a\npure chemical element or a pure chemical\ncompound.\n Data Loader lets you load substances in the following ways:\n Pending Review: Lets you load substances\ninto the temporary table of Registration\nEnterprise. ...",t:"Loading Substances"},"34":{i:0.00542032479879164,u:"../Content/DataLoader/Updating Batch Data.htm",a:"To update batch data:\n Log into Data Loader with appropriate credentials\nto load data into Registration\nEnterprise. The task list appears.\n Select Update batch data in registration and\nclick Next. This screen appears as:\n NOTE: For more information on the Pending\nReview and Registered options, see “ ...",t:"Updating Batch Data"},"35":{i:0.00797550187186365,u:"../Content/DataLoader/Sorting Data.htm",a:"To sort data:\n Import a data file. The preview of the\nselected file appears and shows input fields,\ndata types, and values. For more information,\nsee “ Loading substances ”.\n Click Sort. The InputFileSort window\nappears as:\n Select a field in the Fields column and click\nAdd to move it to the Sort ...",t:"Sorting Data"},"36":{i:0.00542032479879164,u:"../Content/DataLoader/Exporting Data to a Text File.htm",a:"At times you may need to import the same raw\ndata into multiple ChemBioOffice Enterprise applications. In such cases, you can use Data\nLoader to export the raw data to a text file or\nan XML file, and use the file for importing\ndata into multiple ChemBioOffice Enterprise\napplications. Thus, exporting ...",t:"Exporting Data to a Text File"},"37":{i:0.00542032479879164,u:"../Content/DataLoader/Exporting Data to an XML.htm",a:"Data Loader lets you export data to an XML\nfile so that you get the output in the form of an\nXML file. You can view the output XML file\nin any XML viewer as well as in Internet\nExplorer and Firefox.\n Output in the form of an XML file is useful for\nlater input into other products, such as ...",t:"Exporting Data to an XML"},"38":{i:0.023400106461696,u:"../Content/DataLoader/Managing Jobs.htm",a:"Managing Jobs DataLoader allows users to manage Jobs. Please refer to the following topics for more information: Saving a Job Loading a Saved Job Viewing Job Summary",t:"Managing Jobs"},"39":{i:0.00921623863561578,u:"../Content/DataLoader/Saving a Job.htm",a:"To save a job:\n Log into Data Loader and select one of the\nfollowing tasks:\n Load substances into registration\n Output to a text file\n Output to an XML file\n Proceed through the subsequent screens\nuntil the Configure job screen appears. For\nmore information, see “ Loading substances ”. Configure the ...",t:"Saving a Job"},"40":{i:0.00921623863561578,u:"../Content/DataLoader/Loading a Saved Job.htm",a:"To load a previously saved job:\n Select Load a previously saved job in the\nTask section after logging into Data Loader.\n Click Next. The Load Settings window\nappears as: Select the job to be loaded. The selected job\nappears in the Load from text box.\n Click OK. This screen appears as:\n Configure the ...",t:"Loading a Saved Job"},"41":{i:0.00921623863561578,u:"../Content/DataLoader/Viewing Job Summary.htm",a:"To view the summary of a previously executed\njob:\n Select View previous job summary in the\nTask section after logging into Data Loader.\n Click Next. This screen appears as:\n Select a log file and click Open. This screen\nappears as:\n Click Next after you review the job summary.\nThe task is completed. ...",t:"Viewing Job Summary"},"42":{i:0.0661153791642847,u:"../Content/DataLoader/Output Fields.htm",a:"When you import data into the Registration\nEnterprise database using Data Loader, Registry\nRecords are added to the temporary or primary\ntables of Registration Enterprise.\n NOTE: A Registry Record represents a substance\nand all its associated registry data.\n Therefore, to import data into ...",t:"Output Fields"},"43":{i:0.0166361873647691,u:"../Content/DataLoader/Registration Information.htm",a:"In the Registration Information section, you\nprovide top-level information about each\nrecord of your source data file. For example,\nyou can map the output field ‘Project’ with the\n‘PROJECT’ field of your source data file.\n The Registration Information section consists\nof these fields:\n Projects: ...",t:"Registration Information"},"44":{i:0.0166361873647691,u:"../Content/DataLoader/Component Information.htm",a:"A component is a distinct pure substance within a\nRegistry Record.\n The Component Information section consists\nof these fields:\n Structure: Structure information about the\ncomponent.\n Chemical Name: A scientific name that\nidentifies the component.\n CAS Number: An unique numerical identifier\nfor ...",t:"Component Information"},"45":{i:0.0166361873647691,u:"../Content/DataLoader/Fragment Information.htm",a:"When a component is a chemical compound,\nonly base structure is drawn and the rest of the\nstructure information about the compound is\nspecified as Fragment Information, which differs\nfrom one batch to another. Example:\n Salts and solvates are the most typical examples\nof fragment types. A component, ...",t:"Fragment Information"},"46":{i:0.0166361873647691,u:"../Content/DataLoader/Batch Information.htm",a:"A batch is a collection of substances that are\nessentially the same, but have slightly different\nproperties.\n The Batch Information section consists of\nthese fields:\n Scientist: The name of the scientist who\ncreated the batch.\n Synthesis Date: The date on which the\nbatch was created.\n Notebook ...",t:"Batch Information"},"47":{i:0.0863286341313019,u:"../Content/DataLoader/Functions.htm",a:"Functions Multiple functions are available in DataLoader. Please refer to the following topics for more details: Boolean Functions Char Functions CharArray Functions DateTime Functions Decimal Functions Integer Functions String Functions StringArray Functions",t:"Functions"},"48":{i:0.0117592821452008,u:"../Content/DataLoader/Boolean Functions.htm",a:"The Boolean functions return only Boolean\nvalue: True or False. These functions are applicable\nonly if the output field is of Boolean\ntype. Depending on the function you select,\nyou would need to select one or more input\nfields to be supplied to the selected function.\nUse the Fields button on the ...",t:"Boolean Functions"},"49":{i:0.0117592821452008,u:"../Content/DataLoader/Char Functions.htm",a:"Iif(Boolean,Char,Char): Evaluates the\nBoolean expression; if result is True, the\nfunction returns the first Char type parameter\nelse it returns the second Char type\nparameter.\n Parse(String): Returns the character equivalent\nof the specified string representation of\na logical value.\n ...",t:"Char Functions"},"50":{i:0.0117592821452008,u:"../Content/DataLoader/CharArray Functions.htm",a:"String.ToCharArray(): Prepares and returns\na Unicode character array using the characters\nof the input field of String type supplied\nto this function.\n String.ToCharArray(Integer,Integer): Prepares\nand returns a Unicode character array\nusing the characters of a specified substring.\nTo specify the ...",t:"CharArray Functions"},"51":{i:0.0117592821452008,u:"../Content/DataLoader/DateTime Functions.htm",a:"DateTime.AddDays(Decimal): Adds the\nspecified number of days to the input field\nof DateTime type. The Decimal field supplied\nto this function specifies the number\nof days to be added.\n DateTime.AddHours(Decimal): Adds the\nspecified number of hours to the input field\nof DateTime type. The Decimal ...",t:"DateTime Functions"},"52":{i:0.0117592821452008,u:"../Content/DataLoader/Decimal Functions.htm",a:"Abs(Decimal): Returns the absolute value\nof a Decimal type input value.\n Acos(Decimal): Returns the angle whose\ncosine is the specified Decimal type input.\n Asin(Decimal): Returns the angle whose\nsine is the specified Decimal type input.\n Atan(Decimal): Returns the angle whose\ntangent is the ...",t:"Decimal Functions"},"53":{i:0.0117592821452008,u:"../Content/DataLoader/Integer Functions.htm",a:"Abs(Integer): Returns the absolute value of\nan Integer type input value. Boolean.CompareTo(Boolean): Compares\ntwo Boolean type input values and returns\nan integer that indicates their relationship\nwith one another.\n Boolean.GetHashCode(): Returns the hash\ncode of a Boolean type input value.\n ...",t:"Integer Functions"},"54":{i:0.0117592821452008,u:"../Content/DataLoader/String Functions.htm",a:"Boolean.ToString(): Converts the Boolean\ntype input value supplied to this function to\nits equivalent string representation.\n Char.ToString(): Converts the Char type\ninput value supplied to this function to its\nequivalent string representation.\n Concat(String,String): Concatenates two\ninstances of ...",t:"String Functions"},"55":{i:0.0117592821452008,u:"../Content/DataLoader/StringArray Functions.htm",a:"DateTime.GetDateTimeFormats(): Converts\nthe specified DateTime value to all the\nstring representations supported by the\nstandard DateTime format specifiers.\n DateTime.GetDateTimeFormats(Char):\nConverts the specified DateTime value to\nall the string representations supported by\nthe specified standard ...",t:"StringArray Functions"},"56":{i:0.00576962008232737,u:"../Content/DataLoader/New Data Loader.htm",a:"New Data Loader The New Data Loader has the same target that the old one has with some differences in the supported features as shown in the following table: The New Data Loader GUI supports smiles for structures format. Related Topics Accessing the New Data Loader",t:"New Data Loader"},"57":{i:0.00749038396652999,u:"../Content/DataLoader/Accessing the New Data Loader.htm",a:"The new Data Loader is launched via a separate executable. To launch Data Loader: Log in to CBOE server Navigate to: C:\\Program Files (x86)\\PerkinElmer\\ChemOfficeEnterprise\\DataLoader2 Double-click on \"DataLoaderGUI.exe\", the \"Select Imported File\" dialog displays Note: If you are launching the ...",t:"Accessing the New Data Loader"},});