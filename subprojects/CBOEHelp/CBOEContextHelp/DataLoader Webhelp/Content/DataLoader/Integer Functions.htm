<!DOCTYPE html>
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd" lang="en-us" xml:lang="en-us" data-mc-search-type="Stem" data-mc-help-system-file-name="Default.xml" data-mc-path-to-help-system="../../" data-mc-target-type="WebHelp2" data-mc-runtime-file-type="Topic" data-mc-preload-images="false" data-mc-in-preview-mode="false" data-mc-medium="non-print" data-mc-toc-path="Data Loader|Functions">
    <!-- saved from url=(0016)http://localhost -->
    <head>
        <meta name="viewport" content="width=device-width, initial-scale=1.0" />
        <meta charset="utf-8" />
        <meta http-equiv="X-UA-Compatible" content="IE=edge" />
        <meta http-equiv="Content-Type" content="text/html; charset=utf-8" /><title>Integer Functions</title>
        <link href="../../Skins/Default/Stylesheets/Slideshow.css" rel="stylesheet" />
        <link href="../../Skins/Default/Stylesheets/TextEffects.css" rel="stylesheet" />
        <link href="../../Skins/Default/Stylesheets/Topic.css" rel="stylesheet" />
        <link href="../../Skins/Default/Stylesheets/Components/Styles.css" rel="stylesheet" />
        <link href="../Resources/Stylesheets/help_ie.css" rel="stylesheet" />
        <script src="../../Resources/Scripts/custom.modernizr.js">
        </script>
        <script src="../../Resources/Scripts/jquery.min.js">
        </script>
        <script src="../../Resources/Scripts/require.min.js">
        </script>
        <script src="../../Resources/Scripts/require.config.js">
        </script>
        <script src="../../Resources/Scripts/foundation.min.js">
        </script>
        <script src="../../Resources/Scripts/plugins.min.js">
        </script>
        <script src="../../Resources/Scripts/MadCapAll.js">
        </script>
    </head>
    <body>
        <div class="nocontent">
            <div class="MCBreadcrumbsBox_0 breadcrumbs" data-mc-breadcrumbs-divider=" &gt; " data-mc-breadcrumbs-count="3" data-mc-toc="True"><span class="MCBreadcrumbsPrefix">You are here: </span>
            </div>
        </div>
        <h1>Integer Functions</h1>
        <ul style="list-style-type: square;">
            <li value="1">Abs(Integer): Returns the absolute value of
an Integer type input value.</li>
            <li value="2">Boolean.CompareTo(Boolean): Compares
two Boolean type input values and returns
an integer that indicates their relationship
with one another.
</li>
            <li value="3">Boolean.GetHashCode(): Returns the hash
code of a Boolean type input value.
</li>
            <li value="4">Char.CompareTo(Char): Compares two
Char type input values and returns an integer
that indicates their relationship with one
another.
</li>
            <li value="5">Char.GetHashCode(): Returns the hash
code of a Char type input value.
</li>
            <li value="6">Compare(DateTime,DateTime): Compares
two DateTime type input values and returns
an integer that indicates whether the first
input value is earlier than, same as, or later
than the second input value.
</li>
            <li value="7">Compare(String,Integer,String,Integer,Integer):
Compares a section of one string with
a section of another string. The return values
are as follows:
</li>
            <li value="8">Zero: The two strings are equal.
</li>
            <li value="9">Less than zero: The specified section of
first string is less than the specified section
of second string.</li>
            <li value="10"> Greater than zero: The specified section of
first string is greater than the specified
section of second string.
</li>
            <li value="11">Compare(String,Integer,String,Integer,Integer,
Boolean): Compares substrings of two
specified System.String objects, ignoring or
honoring their case.
</li>
            <li value="12">Compare(String,String): Compares two
String type input values and returns an integer
that indicates their relationship with one
another.
</li>
            <li value="13">Compare(String,String,Boolean): Compares
the input values and returns an indication
of their relative sort order.
</li>
            <li value="14">CompareOrdinal(String,Integer,String,Integer,
Integer): Compares substrings of two
specified String type input values by evaluating
the numeric values of the corresponding
Char objects in each substring.
</li>
            <li value="15">CompareOrdinal(String,String): Compares
two specified String type input values by
evaluating the numeric values of the corresponding
Char objects in each string.
</li>
            <li value="16">ConvertToUtf32(Char,Char): Converts the
value of a UTF-16 encoded surrogate pair
into a Unicode code point.
</li>
            <li value="17">ConvertToUtf32(String,Integer): Converts
the value of a UTF-16 encoded character or
surrogate pair at a specified position in a
string into a Unicode code point.
</li>
            <li value="18">DateTime.CompareTo(DateTime): Compares
two DateTime type input values and
returns an integer that indicates whether the
first input value is earlier than, same as, or
later than the second input value.
</li>
            <li value="19">DateTime.get_Day(): Gets the day of the
month represented by the DateTime type
input value supplied to this function.
</li>
            <li value="20">DateTime.get_DayOfYear(): Gets the day
of the year represented by the DateTime
type input value supplied to this function.
</li>
            <li value="21">DateTime.get_Hour(): Gets the hour component
of the date represented by the Date-
Time type input value supplied to this
function.
</li>
            <li value="22">DateTime.get_Millisecond(): Gets the millisecond
component of the date represented
by the DateTime type input value supplied
to this function.
</li>
            <li value="23">DateTime.get_Minute(): Gets the minute
component of the date represented by the
DateTime type input value supplied to this
function.
</li>
            <li value="24">DateTime.get_Second(): Gets the seconds
component of the date represented by the
DateTime type input value supplied to this
function.
</li>
            <li value="25">DateTime.get_Year(): Gets the year component
of the date represented by the Date-
Time type input value supplied to this
function
</li>
            <li value="26">DateTime.GetHashCode(): Returns the
hash code of a DateTime type input value.
</li>
            <li value="27">DaysInMonth(Integer,Integer): Returns the
number of days in the specified month and
year.
</li>
            <li value="28">Decimal.CompareTo(Decimal): Compares
two Decimal type input values and returns
an integer that indicates their relationship
with one another.
</li>
            <li value="29">Decimal.GetHashCode(): Returns the hash
code of a Decimal type input value.
</li>
            <li value="30">Iif(Boolean,Integer,Integer): Evaluates the
first Boolean expression; if result is True,
the function returns the first integer parameter
else it returns the second integer
parameter.
</li>
            <li value="31">Integer.CompareTo(Integer): Compares two
Integer type input values and returns an
integer that indicates their relationship with
one another.
</li>
            <li value="32">Integer.GetHashCode(): Returns the hash
code of an Integer type input value.
</li>
            <li value="33">Max(Integer,Integer): Accepts two integers
as input and returns the larger of the two
numbers.
</li>
            <li value="34">Min(Integer,Integer): Accepts two integers
as input and returns the larger of the two
numbers.
</li>
            <li value="35">Parse(String): Returns the Integer equivalent
of the specified string representation of
a logical value.
</li>
            <li value="36">Sign(Decimal): Returns a value indicating
the sign of a decimal number.
</li>
            <li value="37">Sign(Integer): Returns a value indicating
the sign of an integer.
</li>
            <li value="38">String.CompareTo(String): Compares two
String type input values and returns an integer
that indicates their relationship with one
another.
</li>
            <li value="39">String.get_Length(): Returns the length of a
String type input value.
</li>
            <li value="40">String.GetHashCode(): Returns the hash
code of a Decimal type input value.
</li>
            <li value="41">String.IndexOf(Char): Returns the index of
the first occurrence of the specified Unicode
character in the String type input value
supplied to this function.
</li>
            <li value="42">String.IndexOf(Char,Integer): Returns the
index of the first occurrence of the specified
Unicode character in the String type input
value supplied to this function. The search
starts at the location specified by the Integer
type input.
</li>
            <li value="43">String.IndexOf(Char,Integer,Integer):
Returns the index of the first occurrence of
the specified character in the String type
input value supplied to this function. The
search starts at a specified character position
and examines a specified number of
character positions.
</li>
            <li value="44">String.IndexOf(String): Returns the index
of the first occurrence of the specified
string (the second string) in the String type
input value (the first string) supplied to this
function.
</li>
            <li value="45">String.IndexOf(String,Integer): Returns the
index of the first occurrence of the specified
string (the second string) in the String type
input value (the first string) supplied to this
function. The search starts at the location
specified by the Integer type input.
</li>
            <li value="46">String.IndexOf(String,Integer,Integer):
Returns the index of the first occurrence of
the specified string (the second string) in
the String type input value (the first string)
supplied to this function. The search starts
at a specified character position and examines
a specified number of character positions.
</li>
            <li value="47">String.IndexOfAny(CharArray): Returns
the index of the first occurrence of the specified
string in the specified array of Unicode
characters.
</li>
            <li value="48">String.IndexOfAny(CharArray,Integer):
Returns the index of the first occurrence of
the specified string in the specified array of
Unicode characters. The search starts at the
specified position.
</li>
            <li value="49">String.IndexOfAny(CharArray,Integer,Integer):
Returns the index of the first occurrence
of the specified string in the specified
array of Unicode characters. The search
starts at a specified character position and
examines a specified number of character
positions.
</li>
            <li value="50">String.LastIndexOf(Char): Returns the
index of the last occurrence of the specified
Unicode character in the String type input
value supplied to this function.
</li>
            <li value="51">String.LastIndexOf(Char,Integer): Returns
the index of the last occurrence of the specified
Unicode character in the String type
input value supplied to this function. The
search starts at the location specified by the
Integer type input.
</li>
            <li value="52">String.LastIndexOf(Char,Integer,Integer):
Returns the index of the last occurrence of
the specified character in the String type
input value supplied to this function. The
search starts at a specified character position
and examines a specified number of
character positions.
</li>
            <li value="53">String.LastIndexOf(String): Returns the
index of the last occurrence of the specified
string (the second string) in the String type
input value (the first string) supplied to this
function.
</li>
            <li value="54">String.LastIndexOf(String,Integer): Returns
the index of the last occurrence of the specified
string (the second string) in the String
type input value (the first string) supplied to
this function. The search starts at the location
specified by the Integer type input.
</li>
            <li value="55">String.LastIndexOf(String,Integer,Integer):
Returns the index of the last occurrence of
the specified string (the second string) in
the String type input value (the first string)
supplied to this function. The search starts
at a specified character position and examines
a specified number of character positions.

</li>
            <li value="56">String.LastIndexOfAny(CharArray):
Returns the index of the last occurrence of
the specified string in the specified array of
Unicode characters.
</li>
            <li value="57">String.LastIndexOfAny(CharArray,Integer):
Returns the index of the last occurrence
of the specified string in the specified
array of Unicode characters. The search
starts at the specified position.
</li>
            <li value="58">String.LastIndexOfAny(CharArray,Integer,
Integer): Returns the index of the last
occurrence of the specified string in the
specified array of Unicode characters. The
search starts at a specified character position
and examines a specified number of
character positions.
</li>
            <li value="59">ToInt32(Boolean): Converts the specified
Boolean type input value to the equivalent
32-bit signed integer.
</li>
            <li value="60">ToInt32(Char): Converts the specified Unicode
character to the equivalent 32-bit
signed integer
</li>
            <li value="61">ToInt32(DateTime): Converts the specified
DateTime value to the equivalent 32-bit
signed integer.
</li>
            <li value="62">ToInt32(Decimal): Converts the specified
Decimal value to the equivalent 32-bit
signed integer.
</li>
            <li value="63">ToInt32(Integer): Converts the value of the
specified integer to the equivalent 32-bit
signed integer. In this case, no conversion is
performed.
</li>
            <li value="64">ToInt32(String): Converts the String representation
of a number to the equivalent 32-
bit signed integer.
</li>
            <li value="65">ToInt32(String,Integer): Converts the
String representation of a number in a specified
base to the equivalent 32-bit signed
integer.</li>
        </ul>
        <p><b style="text-decoration: underline;">Related Topics</b>
            <br /><a href="Functions.htm">Functions</a>
        </p>
        <hr style="font-family: Arial;font-size: 10pt;background-image: url('../Resources/Images/CD_new2.png');border-left-style: inset;border-left-width: 1px;border-right-style: inset;border-right-width: 1px;border-top-style: inset;border-top-width: 1px;border-bottom-style: inset;border-bottom-width: 1px;" />
        <table style="width: 100%;">
            <col style="font-family: 'Frutiger LT Std 47 Light Cn';font-size: 9pt;" />
            <col style="width: 884px;font-family: 'Frutiger LT Std 47 Light Cn';" />
            <tbody>
                <tr>
                    <td style="font-family: 'Frutiger LT Std 47 Light Cn';font-size: 9pt;">&#160;</td>
                    <td style="text-align: right;font-size: 9pt;">
                        <img src="../Resources/Images/footer_logo_126x76.png" style="font-family: 'Frutiger LT Std 47 Light Cn';width: 126;height: 76;" />
                        <br style="font-family: 'Frutiger LT Std 47 Light Cn';" /><span style="font-family: 'Frutiger LT Std 47 Light Cn'; font-size: 9pt;"><span style="font-family: 'Frutiger LT Std 47 Light Cn';">940 Winter Street | Waltham, MA 02451 USA</span></span>
                        <br style="font-family: 'Frutiger LT Std 47 Light Cn';" /><a href="http://www.perkinelmer.com/informatics/support" style="font-family: 'Frutiger LT Std 47 Light Cn';" target="_blank">www.perkinelmer.com/informatics/support</a>
                    </td>
                </tr>
            </tbody>
        </table>
    </body>
</html>