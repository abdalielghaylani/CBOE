// <auto-generated/>
// --------------------------------------------------------------------------------------------------------------------
// <copyright file="AxInterop.ChemIQ.cs" company="PerkinElmer Inc.">
//   Copyright © 2011 PerkinElmer Inc., 
// 100 CambridgePark Drive, Cambridge, MA 02140. 
// All rights reserved. 
// This software is the confidential and proprietary information 
// of PerkinElmer Inc. ("Confidential Information"). You shall not 
// disclose such Confidential Information and may not use it in any way, 
// absent an express written license agreement between you and PerkinElmer Inc. 
// that authorizes such use.
// </copyright>
// --------------------------------------------------------------------------------------------------------------------

namespace CBVNStructureFilterSupport.ChemIQ
{
    [System.Windows.Forms.AxHost.Clsid("{dfea8391-7d06-4c2f-8c56-c564d9825a3a}")]
    [System.ComponentModel.DesignTimeVisible(true)]
    [System.ComponentModel.DefaultEvent("Change")]
    internal class AxChemDisplay : System.Windows.Forms.AxHost
    {
        
        private Interop.ChemIQ.IChemDisplay3 ocx;
        
        private AxChemDisplayEventMulticaster eventMulticaster;
        
        private System.Windows.Forms.AxHost.ConnectionPointCookie cookie;
        
        public AxChemDisplay() : 
            base("dfea8391-7d06-4c2f-8c56-c564d9825a3a") {
            }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispId(-504)]
        public virtual Interop.ChemIQ.ictBorderStyles BorderStyle {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("BorderStyle", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.BorderStyle;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("BorderStyle", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.BorderStyle = value;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispId(-520)]
        public virtual Interop.ChemIQ.ictAppearances Appearance {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("Appearance", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.Appearance;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("Appearance", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.Appearance = value;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispId(-523)]
        [System.Runtime.InteropServices.ComAliasName("stdole.IPictureDisp")]
        public virtual System.Drawing.Image Picture {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("Picture", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return GetPictureFromIPicture(this.ocx.Picture);
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispId(1)]
        public virtual bool AllowMenu {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("AllowMenu", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.AllowMenu;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("AllowMenu", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.AllowMenu = value;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispId(5)]
        public virtual short BorderWhitespace {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("BorderWhitespace", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.BorderWhitespace;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("BorderWhitespace", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.BorderWhitespace = value;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispId(8)]
        public virtual Interop.ChemIQ.ictHydrogenDisplayTypes DisplayImplicitHydrogens {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("DisplayImplicitHydrogens", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.DisplayImplicitHydrogens;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("DisplayImplicitHydrogens", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.DisplayImplicitHydrogens = value;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispId(9)]
        public virtual Interop.ChemIQ.ictMoleculeDisplayQualities Molecule3DDisplayQuality {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("Molecule3DDisplayQuality", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.Molecule3DDisplayQuality;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("Molecule3DDisplayQuality", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.Molecule3DDisplayQuality = value;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispId(10)]
        public virtual Interop.ChemIQ.ictMoleculeDisplayStyles MoleculeDisplayStyle {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("MoleculeDisplayStyle", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.MoleculeDisplayStyle;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("MoleculeDisplayStyle", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.MoleculeDisplayStyle = value;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispId(11)]
        public virtual Interop.ChemIQ.ictDrawingPackages DrawingPackage {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("DrawingPackage", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.DrawingPackage;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("DrawingPackage", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.DrawingPackage = value;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispId(12)]
        public virtual bool IsBeingEdited {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("IsBeingEdited", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.IsBeingEdited;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispId(13)]
        public virtual Interop.ChemIQ.ictLeftButtonActions LeftButtonAction {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("LeftButtonAction", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.LeftButtonAction;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("LeftButtonAction", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.LeftButtonAction = value;
            }
        }
        
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispId(14)]
        public virtual Interop.ChemIQ.IMolecule Molecule {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("Molecule", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.Molecule;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("Molecule", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.Molecule = value;
            }
        }
        
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispId(15)]
        public virtual Interop.ChemIQ.IReaction Reaction {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("Reaction", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.Reaction;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("Reaction", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.Reaction = value;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispId(16)]
        public virtual bool Locked {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("Locked", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.Locked;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("Locked", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.Locked = value;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispId(17)]
        public virtual double ScaleFactor {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("ScaleFactor", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.ScaleFactor;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("ScaleFactor", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.ScaleFactor = value;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispId(18)]
        public virtual Interop.ChemIQ.ictStructureTypes StructureType {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("StructureType", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.StructureType;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispId(29)]
        public virtual bool ScaleToFit {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("ScaleToFit", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.ScaleToFit;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("ScaleToFit", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.ScaleToFit = value;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispId(36)]
        public virtual bool AllowFileDrops {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("AllowFileDrops", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.AllowFileDrops;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("AllowFileDrops", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.AllowFileDrops = value;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispId(37)]
        public virtual string HostApplication {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("HostApplication", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.HostApplication;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("HostApplication", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.HostApplication = value;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispId(38)]
        public virtual string HostDocument {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("HostDocument", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.HostDocument;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("HostDocument", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.HostDocument = value;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispId(41)]
        public virtual Interop.ChemIQ.ictContexts Context {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("Context", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.Context;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("Context", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.Context = value;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispId(42)]
        public virtual bool AssignGeometricOnCTImport {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("AssignGeometricOnCTImport", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.AssignGeometricOnCTImport;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("AssignGeometricOnCTImport", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.AssignGeometricOnCTImport = value;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispId(43)]
        [System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
        public virtual double MultipleBondSpacing {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("MultipleBondSpacing", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.MultipleBondSpacing;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("MultipleBondSpacing", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.MultipleBondSpacing = value;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispId(44)]
        public virtual Interop.ChemIQ.ictMeasurementUnits MultipleBondSpacingUnit {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("MultipleBondSpacingUnit", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.MultipleBondSpacingUnit;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("MultipleBondSpacingUnit", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.MultipleBondSpacingUnit = value;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispId(45)]
        public virtual double BondLength {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("BondLength", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.BondLength;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("BondLength", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.BondLength = value;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispId(46)]
        public virtual Interop.ChemIQ.ictMeasurementUnits BondLengthUnit {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("BondLengthUnit", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.BondLengthUnit;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("BondLengthUnit", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.BondLengthUnit = value;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispId(47)]
        public virtual string AtomFontName {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("AtomFontName", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.AtomFontName;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("AtomFontName", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.AtomFontName = value;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispId(48)]
        public virtual int AtomFontPointSize {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("AtomFontPointSize", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.AtomFontPointSize;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("AtomFontPointSize", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.AtomFontPointSize = value;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispId(49)]
        public virtual double AtomPropertyRatio {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("AtomPropertyRatio", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.AtomPropertyRatio;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("AtomPropertyRatio", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.AtomPropertyRatio = value;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispId(50)]
        public virtual string StereoDescriptorFontName {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("StereoDescriptorFontName", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.StereoDescriptorFontName;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("StereoDescriptorFontName", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.StereoDescriptorFontName = value;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispId(51)]
        public virtual int StereoDescriptorFontPointSize {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("StereoDescriptorFontPointSize", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.StereoDescriptorFontPointSize;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("StereoDescriptorFontPointSize", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.StereoDescriptorFontPointSize = value;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispId(52)]
        public virtual bool ShowStereoDescriptor {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("ShowStereoDescriptor", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.ShowStereoDescriptor;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("ShowStereoDescriptor", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.ShowStereoDescriptor = value;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispId(53)]
        public virtual Interop.ChemIQ.ictOrientations StereoDescriptorOrientation {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("StereoDescriptorOrientation", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.StereoDescriptorOrientation;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("StereoDescriptorOrientation", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.StereoDescriptorOrientation = value;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispId(54)]
        public virtual bool Freeze {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("Freeze", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.Freeze;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("Freeze", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.Freeze = value;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispId(55)]
        public virtual string ID {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("ID", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.ID;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispId(56)]
        public virtual Interop.ChemIQ.ictMeasurementUnits WedgeBondWidthUnit {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("WedgeBondWidthUnit", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.WedgeBondWidthUnit;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("WedgeBondWidthUnit", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.WedgeBondWidthUnit = value;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispId(57)]
        public virtual bool FixFontSize {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("FixFontSize", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.FixFontSize;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("FixFontSize", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.FixFontSize = value;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispId(58)]
        public virtual string MoleculeLabelFontName {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("MoleculeLabelFontName", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.MoleculeLabelFontName;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("MoleculeLabelFontName", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.MoleculeLabelFontName = value;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispId(59)]
        public virtual int MoleculeLabelFontPointSize {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("MoleculeLabelFontPointSize", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.MoleculeLabelFontPointSize;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("MoleculeLabelFontPointSize", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.MoleculeLabelFontPointSize = value;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispId(60)]
        public virtual double WedgeBondWidth {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("WedgeBondWidth", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.WedgeBondWidth;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("WedgeBondWidth", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.WedgeBondWidth = value;
            }
        }
        
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispId(63)]
        public virtual Interop.ChemIQ.IChemDisplaySettings UserSettings {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("UserSettings", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.UserSettings;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("UserSettings", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.UserSettings = value;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispId(64)]
        public virtual Interop.ChemIQ.ictImportRules CTFileImportGeometricRule {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("CTFileImportGeometricRule", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.CTFileImportGeometricRule;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("CTFileImportGeometricRule", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.CTFileImportGeometricRule = value;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispId(65)]
        public virtual Interop.ChemIQ.ictImportRules CTFileImportChiralFlagRule {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("CTFileImportChiralFlagRule", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.CTFileImportChiralFlagRule;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("CTFileImportChiralFlagRule", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.CTFileImportChiralFlagRule = value;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispId(66)]
        public virtual Interop.ChemIQ.ictImportRules CTFileImportNoChiralFlagRule {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("CTFileImportNoChiralFlagRule", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.CTFileImportNoChiralFlagRule;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("CTFileImportNoChiralFlagRule", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.CTFileImportNoChiralFlagRule = value;
            }
        }
        
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        [System.Runtime.InteropServices.DispId(67)]
        public virtual Interop.ChemIQ.ictAbbreviationStates AbbreviationState {
            get {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("AbbreviationState", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertyGet);
                }
                return this.ocx.AbbreviationState;
            }
            set {
                if ((this.ocx == null)) {
                    throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("AbbreviationState", System.Windows.Forms.AxHost.ActiveXInvokeKind.PropertySet);
                }
                this.ocx.AbbreviationState = value;
            }
        }
        
        public event System.EventHandler Change;
        
        public event System.EventHandler StartEdit;
        
        public event System.EventHandler EndEdit;
        
        public event _IChemDisplayEvents_LoadEventHandler LoadEvent;
        
        public event _IChemDisplayEvents_SaveEventHandler SaveEvent;
        
        public event _IChemDisplayEvents_MouseMoveEventHandler MouseMoveEvent;
        
        public event System.EventHandler MouseEnterEvent;
        
        public event System.EventHandler MouseLeaveEvent;
        
        public event _IChemDisplayEvents_KeyDownEventHandler KeyDownEvent;
        
        public event _IChemDisplayEvents_KeyUpEventHandler KeyUpEvent;
        
        public event System.EventHandler ResizeEvent;
        
        public event _IChemDisplayEvents_MouseOverEventHandler MouseOver;
        
        public event _IChemDisplayEvents_MouseUpEventHandler MouseUpEvent;
        
        public event _IChemDisplayEvents_MouseDownEventHandler MouseDownEvent;
        
        public event _IChemDisplayEvents_DblClickEventHandler DblClick;
        
        public event System.EventHandler UserSettingsChanged;
        
        public event System.EventHandler ScreenUpdated;
        
        public virtual void ChangeBindings(object vSlaveControl, bool bAdd) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("ChangeBindings", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            this.ocx.ChangeBindings(vSlaveControl, bAdd);
        }
        
        public virtual void Bind(object vMasterControl) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("Bind", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            this.ocx.Bind(vMasterControl);
        }
        
        public virtual void CentreStructure() {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("CentreStructure", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            this.ocx.CentreStructure();
        }
        
        public virtual void Clear() {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("Clear", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            this.ocx.Clear();
        }
        
        public virtual void Copy() {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("Copy", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            this.ocx.Copy();
        }
        
        public virtual void Cut() {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("Cut", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            this.ocx.Cut();
        }
        
        public virtual void Edit() {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("Edit", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            this.ocx.Edit();
        }
        
        public virtual string GetStructureString(Interop.ChemIQ.ictStructureStringTypes stringType) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("GetStructureString", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            string returnValue = ((string)(this.ocx.GetStructureString(stringType)));
            return returnValue;
        }
        
        public virtual void Load(string fileName) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("Load", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            this.ocx.Load(fileName);
        }
        
        public virtual void Paste() {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("Paste", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            this.ocx.Paste();
        }
        
        public virtual new void Refresh() {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("Refresh", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            this.ocx.Refresh();
        }
        
        public virtual void Save(string fileName, Interop.ChemIQ.ictStructureFileTypes fileTypes) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("Save", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            this.ocx.Save(fileName, fileTypes);
        }
        
        public virtual void SetStructureString(string structureString) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("SetStructureString", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            this.ocx.SetStructureString(structureString);
        }
        
        public virtual string ShowFileOpen() {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("ShowFileOpen", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            object[] paramArray = new object[] {
                                                   ""};
            System.Type typeVar = typeof(Interop.ChemIQ.IChemDisplay3);
            System.Reflection.MethodInfo methodToInvoke = typeVar.GetMethod("ShowFileOpen");
            string returnValue = ((string)(methodToInvoke.Invoke(this.ocx, paramArray)));
            return returnValue;
        }
        
        public virtual string ShowFileOpen(string initialDirectory) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("ShowFileOpen", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            string returnValue = ((string)(this.ocx.ShowFileOpen(initialDirectory)));
            return returnValue;
        }
        
        public virtual string ShowFileSave() {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("ShowFileSave", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            object[] paramArray = new object[] {
                                                   ""};
            System.Type typeVar = typeof(Interop.ChemIQ.IChemDisplay3);
            System.Reflection.MethodInfo methodToInvoke = typeVar.GetMethod("ShowFileSave");
            string returnValue = ((string)(methodToInvoke.Invoke(this.ocx, paramArray)));
            return returnValue;
        }
        
        public virtual string ShowFileSave(string initialDirectory) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("ShowFileSave", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            string returnValue = ((string)(this.ocx.ShowFileSave(initialDirectory)));
            return returnValue;
        }
        
        public virtual void Start3DRotate(double x, double y, double z, int interval) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("Start3DRotate", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            this.ocx.Start3DRotate(x, y, z, interval);
        }
        
        public virtual void Stop3DRotate() {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("Stop3DRotate", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            this.ocx.Stop3DRotate();
        }
        
        public virtual void SavePicture(string fileName, Interop.ChemIQ.ictPictureFileTypes fileType) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("SavePicture", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            this.ocx.SavePicture(fileName, fileType, ((int)(-1)), ((int)(-1)));
        }
        
        public virtual void SavePicture(string fileName, Interop.ChemIQ.ictPictureFileTypes fileType, int height, int width) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("SavePicture", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            this.ocx.SavePicture(fileName, fileType, height, width);
        }
        
        public virtual void HighlightStructure(object highlight, int searchFlags) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("HighlightStructure", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            this.ocx.HighlightStructure(highlight, searchFlags);
        }
        
        public virtual void RemoveHighlight() {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("RemoveHighlight", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            this.ocx.RemoveHighlight();
        }
        
        public virtual bool get_AllowMenuItem(Interop.ChemIQ.ictMenuItems menuItem) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("get_AllowMenuItem", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            bool returnValue = ((bool)(this.ocx.get_AllowMenuItem(menuItem)));
            return returnValue;
        }
        
        public virtual void set_AllowMenuItem(Interop.ChemIQ.ictMenuItems menuItem, bool pVal) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("set_AllowMenuItem", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            this.ocx.set_AllowMenuItem(menuItem, pVal);
        }
        
        public virtual System.Drawing.Color get_DisplayColour(Interop.ChemIQ.ictDisplayColourItems displayColourItem) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("get_DisplayColour", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            uint returnValue = ((uint)(this.ocx.get_DisplayColour(displayColourItem)));
            return GetColorFromOleColor(returnValue);
        }
        
        public virtual void set_DisplayColour(Interop.ChemIQ.ictDisplayColourItems displayColourItem, uint pVal) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("set_DisplayColour", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            this.ocx.set_DisplayColour(displayColourItem, pVal);
        }
        
        public virtual bool get_DisplayFeature(Interop.ChemIQ.ictDisplayFeatures displayFeature) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("get_DisplayFeature", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            bool returnValue = ((bool)(this.ocx.get_DisplayFeature(displayFeature)));
            return returnValue;
        }
        
        public virtual void set_DisplayFeature(Interop.ChemIQ.ictDisplayFeatures displayFeature, bool pVal) {
            if ((this.ocx == null)) {
                throw new System.Windows.Forms.AxHost.InvalidActiveXStateException("set_DisplayFeature", System.Windows.Forms.AxHost.ActiveXInvokeKind.MethodInvoke);
            }
            this.ocx.set_DisplayFeature(displayFeature, pVal);
        }
        
        protected override void CreateSink() {
            try {
                this.eventMulticaster = new AxChemDisplayEventMulticaster(this);
                this.cookie = new System.Windows.Forms.AxHost.ConnectionPointCookie(this.ocx, this.eventMulticaster, typeof(Interop.ChemIQ._IChemDisplayEvents));
            }
            catch (System.Exception ) {
            }
        }
        
        protected override void DetachSink() {
            try {
                this.cookie.Disconnect();
            }
            catch (System.Exception ) {
            }
        }
        
        protected override void AttachInterfaces() {
            try {
                this.ocx = ((Interop.ChemIQ.IChemDisplay3)(this.GetOcx()));
            }
            catch (System.Exception ) {
            }
        }
        
        internal void RaiseOnChange(object sender, System.EventArgs e) {
            if ((this.Change != null)) {
                this.Change(sender, e);
            }
        }
        
        internal void RaiseOnStartEdit(object sender, System.EventArgs e) {
            if ((this.StartEdit != null)) {
                this.StartEdit(sender, e);
            }
        }
        
        internal void RaiseOnEndEdit(object sender, System.EventArgs e) {
            if ((this.EndEdit != null)) {
                this.EndEdit(sender, e);
            }
        }
        
        internal void RaiseOnLoadEvent(object sender, _IChemDisplayEvents_LoadEvent e) {
            if ((this.LoadEvent != null)) {
                this.LoadEvent(sender, e);
            }
        }
        
        internal void RaiseOnSaveEvent(object sender, _IChemDisplayEvents_SaveEvent e) {
            if ((this.SaveEvent != null)) {
                this.SaveEvent(sender, e);
            }
        }
        
        internal void RaiseOnMouseMoveEvent(object sender, _IChemDisplayEvents_MouseMoveEvent e) {
            if ((this.MouseMoveEvent != null)) {
                this.MouseMoveEvent(sender, e);
            }
        }
        
        internal void RaiseOnMouseEnterEvent(object sender, System.EventArgs e) {
            if ((this.MouseEnterEvent != null)) {
                this.MouseEnterEvent(sender, e);
            }
        }
        
        internal void RaiseOnMouseLeaveEvent(object sender, System.EventArgs e) {
            if ((this.MouseLeaveEvent != null)) {
                this.MouseLeaveEvent(sender, e);
            }
        }
        
        internal void RaiseOnKeyDownEvent(object sender, _IChemDisplayEvents_KeyDownEvent e) {
            if ((this.KeyDownEvent != null)) {
                this.KeyDownEvent(sender, e);
            }
        }
        
        internal void RaiseOnKeyUpEvent(object sender, _IChemDisplayEvents_KeyUpEvent e) {
            if ((this.KeyUpEvent != null)) {
                this.KeyUpEvent(sender, e);
            }
        }
        
        internal void RaiseOnResizeEvent(object sender, System.EventArgs e) {
            if ((this.ResizeEvent != null)) {
                this.ResizeEvent(sender, e);
            }
        }
        
        internal void RaiseOnMouseOver(object sender, _IChemDisplayEvents_MouseOverEvent e) {
            if ((this.MouseOver != null)) {
                this.MouseOver(sender, e);
            }
        }
        
        internal void RaiseOnMouseUpEvent(object sender, _IChemDisplayEvents_MouseUpEvent e) {
            if ((this.MouseUpEvent != null)) {
                this.MouseUpEvent(sender, e);
            }
        }
        
        internal void RaiseOnMouseDownEvent(object sender, _IChemDisplayEvents_MouseDownEvent e) {
            if ((this.MouseDownEvent != null)) {
                this.MouseDownEvent(sender, e);
            }
        }
        
        internal void RaiseOnDblClick(object sender, _IChemDisplayEvents_DblClickEvent e) {
            if ((this.DblClick != null)) {
                this.DblClick(sender, e);
            }
        }
        
        internal void RaiseOnUserSettingsChanged(object sender, System.EventArgs e) {
            if ((this.UserSettingsChanged != null)) {
                this.UserSettingsChanged(sender, e);
            }
        }
        
        internal void RaiseOnScreenUpdated(object sender, System.EventArgs e) {
            if ((this.ScreenUpdated != null)) {
                this.ScreenUpdated(sender, e);
            }
        }
    }

    internal delegate void _IChemDisplayEvents_LoadEventHandler(object sender, _IChemDisplayEvents_LoadEvent e);

    internal class _IChemDisplayEvents_LoadEvent
    {
        
        public string fileName;
        
        public _IChemDisplayEvents_LoadEvent(string fileName) {
            this.fileName = fileName;
        }
    }

    internal delegate void _IChemDisplayEvents_SaveEventHandler(object sender, _IChemDisplayEvents_SaveEvent e);

    internal class _IChemDisplayEvents_SaveEvent
    {
        
        public string fileName;
        
        public _IChemDisplayEvents_SaveEvent(string fileName) {
            this.fileName = fileName;
        }
    }

    internal delegate void _IChemDisplayEvents_MouseMoveEventHandler(object sender, _IChemDisplayEvents_MouseMoveEvent e);

    internal class _IChemDisplayEvents_MouseMoveEvent
    {
        
        public short button;
        
        public short shift;
        
        public short x;
        
        public short y;
        
        public _IChemDisplayEvents_MouseMoveEvent(short button, short shift, short x, short y) {
            this.button = button;
            this.shift = shift;
            this.x = x;
            this.y = y;
        }
    }

    internal delegate void _IChemDisplayEvents_KeyDownEventHandler(object sender, _IChemDisplayEvents_KeyDownEvent e);

    internal class _IChemDisplayEvents_KeyDownEvent
    {
        
        public short keyCode;
        
        public _IChemDisplayEvents_KeyDownEvent(short keyCode) {
            this.keyCode = keyCode;
        }
    }

    internal delegate void _IChemDisplayEvents_KeyUpEventHandler(object sender, _IChemDisplayEvents_KeyUpEvent e);

    internal class _IChemDisplayEvents_KeyUpEvent
    {
        
        public short keyCode;
        
        public _IChemDisplayEvents_KeyUpEvent(short keyCode) {
            this.keyCode = keyCode;
        }
    }

    internal delegate void _IChemDisplayEvents_MouseOverEventHandler(object sender, _IChemDisplayEvents_MouseOverEvent e);

    internal class _IChemDisplayEvents_MouseOverEvent
    {
        
        public short button;
        
        public short shift;
        
        public object itemOver;
        
        public Interop.ChemIQ.EventHandled hasBeenHandled;
        
        public _IChemDisplayEvents_MouseOverEvent(short button, short shift, object itemOver, Interop.ChemIQ.EventHandled hasBeenHandled) {
            this.button = button;
            this.shift = shift;
            this.itemOver = itemOver;
            this.hasBeenHandled = hasBeenHandled;
        }
    }

    internal delegate void _IChemDisplayEvents_MouseUpEventHandler(object sender, _IChemDisplayEvents_MouseUpEvent e);

    internal class _IChemDisplayEvents_MouseUpEvent
    {
        
        public short button;
        
        public short shift;
        
        public short x;
        
        public short y;
        
        public object itemOver;
        
        public Interop.ChemIQ.EventHandled hasBeenHandled;
        
        public _IChemDisplayEvents_MouseUpEvent(short button, short shift, short x, short y, object itemOver, Interop.ChemIQ.EventHandled hasBeenHandled) {
            this.button = button;
            this.shift = shift;
            this.x = x;
            this.y = y;
            this.itemOver = itemOver;
            this.hasBeenHandled = hasBeenHandled;
        }
    }

    internal delegate void _IChemDisplayEvents_MouseDownEventHandler(object sender, _IChemDisplayEvents_MouseDownEvent e);

    internal class _IChemDisplayEvents_MouseDownEvent
    {
        
        public short button;
        
        public short shift;
        
        public short x;
        
        public short y;
        
        public object itemOver;
        
        public Interop.ChemIQ.EventHandled hasBeenHandled;
        
        public _IChemDisplayEvents_MouseDownEvent(short button, short shift, short x, short y, object itemOver, Interop.ChemIQ.EventHandled hasBeenHandled) {
            this.button = button;
            this.shift = shift;
            this.x = x;
            this.y = y;
            this.itemOver = itemOver;
            this.hasBeenHandled = hasBeenHandled;
        }
    }

    internal delegate void _IChemDisplayEvents_DblClickEventHandler(object sender, _IChemDisplayEvents_DblClickEvent e);

    internal class _IChemDisplayEvents_DblClickEvent
    {
        
        public short button;
        
        public short shift;
        
        public short x;
        
        public short y;
        
        public object itemOver;
        
        public Interop.ChemIQ.EventHandled hasBeenHandled;
        
        public _IChemDisplayEvents_DblClickEvent(short button, short shift, short x, short y, object itemOver, Interop.ChemIQ.EventHandled hasBeenHandled) {
            this.button = button;
            this.shift = shift;
            this.x = x;
            this.y = y;
            this.itemOver = itemOver;
            this.hasBeenHandled = hasBeenHandled;
        }
    }

    [System.Runtime.InteropServices.ClassInterface(System.Runtime.InteropServices.ClassInterfaceType.None)]
    internal class AxChemDisplayEventMulticaster : Interop.ChemIQ._IChemDisplayEvents
    {
        
        private AxChemDisplay parent;
        
        public AxChemDisplayEventMulticaster(AxChemDisplay parent) {
            this.parent = parent;
        }
        
        public virtual void Change() {
            System.EventArgs changeEvent = new System.EventArgs();
            this.parent.RaiseOnChange(this.parent, changeEvent);
        }
        
        public virtual void StartEdit() {
            System.EventArgs starteditEvent = new System.EventArgs();
            this.parent.RaiseOnStartEdit(this.parent, starteditEvent);
        }
        
        public virtual void EndEdit() {
            System.EventArgs endeditEvent = new System.EventArgs();
            this.parent.RaiseOnEndEdit(this.parent, endeditEvent);
        }
        
        public virtual void Load(string fileName) {
            _IChemDisplayEvents_LoadEvent loadEvent = new _IChemDisplayEvents_LoadEvent(fileName);
            this.parent.RaiseOnLoadEvent(this.parent, loadEvent);
        }
        
        public virtual void Save(string fileName) {
            _IChemDisplayEvents_SaveEvent saveEvent = new _IChemDisplayEvents_SaveEvent(fileName);
            this.parent.RaiseOnSaveEvent(this.parent, saveEvent);
        }
        
        public virtual void MouseMove(short button, short shift, short x, short y) {
            _IChemDisplayEvents_MouseMoveEvent mousemoveEvent = new _IChemDisplayEvents_MouseMoveEvent(button, shift, x, y);
            this.parent.RaiseOnMouseMoveEvent(this.parent, mousemoveEvent);
        }
        
        public virtual void MouseEnter() {
            System.EventArgs mouseenterEvent = new System.EventArgs();
            this.parent.RaiseOnMouseEnterEvent(this.parent, mouseenterEvent);
        }
        
        public virtual void MouseLeave() {
            System.EventArgs mouseleaveEvent = new System.EventArgs();
            this.parent.RaiseOnMouseLeaveEvent(this.parent, mouseleaveEvent);
        }
        
        public virtual void KeyDown(short keyCode) {
            _IChemDisplayEvents_KeyDownEvent keydownEvent = new _IChemDisplayEvents_KeyDownEvent(keyCode);
            this.parent.RaiseOnKeyDownEvent(this.parent, keydownEvent);
        }
        
        public virtual void KeyUp(short keyCode) {
            _IChemDisplayEvents_KeyUpEvent keyupEvent = new _IChemDisplayEvents_KeyUpEvent(keyCode);
            this.parent.RaiseOnKeyUpEvent(this.parent, keyupEvent);
        }
        
        public virtual void Resize() {
            System.EventArgs resizeEvent = new System.EventArgs();
            this.parent.RaiseOnResizeEvent(this.parent, resizeEvent);
        }
        
        public virtual void MouseOver(short button, short shift, object itemOver, Interop.ChemIQ.EventHandled hasBeenHandled) {
            _IChemDisplayEvents_MouseOverEvent mouseoverEvent = new _IChemDisplayEvents_MouseOverEvent(button, shift, itemOver, hasBeenHandled);
            this.parent.RaiseOnMouseOver(this.parent, mouseoverEvent);
        }
        
        public virtual void MouseUp(short button, short shift, short x, short y, object itemOver, Interop.ChemIQ.EventHandled hasBeenHandled) {
            _IChemDisplayEvents_MouseUpEvent mouseupEvent = new _IChemDisplayEvents_MouseUpEvent(button, shift, x, y, itemOver, hasBeenHandled);
            this.parent.RaiseOnMouseUpEvent(this.parent, mouseupEvent);
        }
        
        public virtual void MouseDown(short button, short shift, short x, short y, object itemOver, Interop.ChemIQ.EventHandled hasBeenHandled) {
            _IChemDisplayEvents_MouseDownEvent mousedownEvent = new _IChemDisplayEvents_MouseDownEvent(button, shift, x, y, itemOver, hasBeenHandled);
            this.parent.RaiseOnMouseDownEvent(this.parent, mousedownEvent);
        }
        
        public virtual void DblClick(short button, short shift, short x, short y, object itemOver, Interop.ChemIQ.EventHandled hasBeenHandled) {
            _IChemDisplayEvents_DblClickEvent dblclickEvent = new _IChemDisplayEvents_DblClickEvent(button, shift, x, y, itemOver, hasBeenHandled);
            this.parent.RaiseOnDblClick(this.parent, dblclickEvent);
        }
        
        public virtual void UserSettingsChanged() {
            System.EventArgs usersettingschangedEvent = new System.EventArgs();
            this.parent.RaiseOnUserSettingsChanged(this.parent, usersettingschangedEvent);
        }
        
        public virtual void ScreenUpdated() {
            System.EventArgs screenupdatedEvent = new System.EventArgs();
            this.parent.RaiseOnScreenUpdated(this.parent, screenupdatedEvent);
        }
    }
}