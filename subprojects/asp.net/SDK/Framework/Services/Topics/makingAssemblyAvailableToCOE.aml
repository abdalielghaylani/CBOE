<?xml version="1.0" encoding="utf-8"?>
<topic id="5a3be626-1e5a-4ee6-80df-c501762cec63" revisionNumber="1">
  <developerConceptualDocument xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5" xmlns:xlink="http://www.w3.org/1999/xlink">
    <!--
    <summary>
      <para>Optional summary abstract</para>
    </summary>
    -->
    <introduction>
      <!-- Uncomment this to generate an outline of the section and sub-section
           titles.  Specify a numeric value as the inner text to limit it to
           a specific number of sub-topics when creating the outline.  Specify
           zero (0) to limit it to top-level sections only.  -->
      <!-- <autoOutline /> -->
      <para>After registering the select/where clause the COEFramework has to have access to your dll. Making that dll accessible may be accomplished in two different ways</para>
	  
		<list class="ordered">
		  <listItem>Putting your dll in the GAC.</listItem>
		  <listItem>Instructing the framework where is it by modifying COESharedAssemblyConfig.xml</listItem>
		</list>
	
    </introduction>
    <!-- Add one or more top-level section elements.  These are collapsible.
         If using <autoOutline />, add an address attribute to identify it
         and specify a title so that it can be jumped to with a hyperlink. -->
    <section address="Section1">
      <title>Putting your dll in the GAC</title>
      <content>
        <!-- Uncomment this to create a sub-section outline
        <autoOutline /> -->
        <para>Go to "Administrative tools" in windows control panel and click on "Microsoft .NET Framework 2.0 Configuration".</para>
		<para>Once there choose "Manage the assembly cache"" and then "Add an Assembly to the Assembly Cache", which will pop up a file browser where you should look for your dll and open it.</para>
		<para>That’s it. Your assembly will be accessible to every application, not only to Cambridgesoft’s ones.</para>
      </content>
    </section>
    <section address="Section2">
      <title>Putting your dll in the GAC</title>
      <content>
        <!-- Uncomment this to create a sub-section outline
        <autoOutline /> -->
        <para>As alternative you may modify the COESharedAssemblyConfig.xml file, located in special folder</para>
		<quote>C:\Documents and Settings\All Users\Application Data\Cambridgesoft\ChemOfficeEnterprise11.x.x.x.</quote>
		<para>There are specified all the runtime libraries that the framework should be aware of.</para>
		<para>The only thing you should do is to add a new line in the form:</para>
		<code language="xml" source=".\Topics\FrameworkConfigFiles\SharedAssemblyEntry.xml" />
			
		
		<para>The assembly identity is very similar to the FullName we have already commented. And also inside the node codeBase you will instruct the framework where is your dll placed. Usually the runtime libraries are put in the following folder:</para>
		<quote>C:\Program Files\CambridgeSoft\Informatics2007\ChemOfficeEnterprise\Framework\RuntimeLibraries</quote>
		<para> but that’s not a must.</para>

      </content>
    </section>
    
    <relatedTopics>
      <!-- One or more of the following:
           - A local link
           - An external link
           - A code entity reference

      <link xlink:href="Other Topic's ID"/>
      <link xlink:href="Other Topic's ID">Link inner text</link>

      <externalLink>
          <linkText>Link text</linkText>
          <linkAlternateText>Optional alternate link text</linkAlternateText>
          <linkUri>URI</linkUri>
      </externalLink>

      <codeEntityReference>API member ID</codeEntityReference>

      Examples:

      <link xlink:href="00e97994-e9e6-46e0-b420-5be86b2f8270" />
      <link xlink:href="00e97994-e9e6-46e0-b420-5be86b2f8278">Some other topic</link>

      <externalLink>
          <linkText>SHFB on CodePlex</linkText>
          <linkAlternateText>Go to CodePlex</linkAlternateText>
          <linkUri>http://shfb.codeplex.com</linkUri>
      </externalLink>

      <codeEntityReference>T:TestDoc.TestClass</codeEntityReference>
      <codeEntityReference>P:TestDoc.TestClass.SomeProperty</codeEntityReference>
      <codeEntityReference>M:TestDoc.TestClass.#ctor</codeEntityReference>
      <codeEntityReference>M:TestDoc.TestClass.#ctor(System.String,System.Int32)</codeEntityReference>
      <codeEntityReference>M:TestDoc.TestClass.ToString</codeEntityReference>
      <codeEntityReference>M:TestDoc.TestClass.FirstMethod</codeEntityReference>
      <codeEntityReference>M:TestDoc.TestClass.SecondMethod(System.Int32,System.String)</codeEntityReference>
      -->
    </relatedTopics>
  </developerConceptualDocument>
</topic>