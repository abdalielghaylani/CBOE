//// The following code was generated by Microsoft Visual Studio 2005.
//// The test owner should check each test for validity.
//using Microsoft.VisualStudio.TestTools.UnitTesting;
//using System;
//using System.Text;
//using System.Collections.Generic;
//using System.Xml;
//using CambridgeSoft.COE.Framework.COETableEditorService;
//using CambridgeSoft.COE.Framework.Common;
//using CambridgeSoft.COE.Framework.COESecurityService;
//namespace CambridgeSoft.COE.Framework.COETableEditorService.UnitTests
//{
//    /// <summary>
//    ///This is a test class for CambridgeSoft.COE.Framework.COETableEditorService.COETableEditorBOList and is intended
//    ///to contain all CambridgeSoft.COE.Framework.COETableEditorService.COETableEditorBOList Unit Tests
//    ///</summary>
//    [TestClass()]
//    public class COETableEditorBOListTest
//    {

//        private string pathToXmls = Utilities.GetProjectBasePath("CambridgeSoft.COE.Framework.UnitTests") + @"\TestXML";
//        private string _tableName;
//        private string _databaseName;
//        private string _service = "COETableEditor";
//        private CambridgeSoft.COE.Framework.COETableEditorService.DAL _coeDAL;
//        private DALFactory _dalFactory = new DALFactory();
//        private TestContext testContextInstance;

//        /// <summary>
//        ///Gets or sets the test context which provides
//        ///information about and functionality for the current test run.
//        ///</summary>
//        public TestContext TestContext
//        {
//            get
//            {
//                return testContextInstance;
//            }
//            set
//            {
//                testContextInstance = value;
//            }
//        }
//        #region Additional test attributes
//        // 
//        //You can use the following additional attributes as you write your tests:
//        //
//        //Use ClassInitialize to run code before running the first test in the class
//        //
//        //[ClassInitialize()]
//        //public static void MyClassInitialize(TestContext testContext)
//        //{
//        //}
//        //
//        //Use ClassCleanup to run code after all tests in a class have run
//        //
//        //[ClassCleanup()]
//        //public static void MyClassCleanup()
//        //{
//        //}
//        //
//        //Use TestInitialize to run code before running each test
//        //
//        [TestInitialize()]
//        public void MyTestInitialize()
//        {
//            _tableName = "Graphics";
//            _databaseName = "SAMPLE";
//            Csla.ApplicationContext.GlobalContext["AppName"] = "SAMPLE";
//            _dalFactory.GetDAL<CambridgeSoft.COE.Framework.COETableEditorService.DAL>(ref _coeDAL, _service, _databaseName, true);
//            COEPrincipal.Logout();
//            System.Security.Principal.IPrincipal user = Csla.ApplicationContext.User;

//            string userName = "CSSADMIN";
//            string password = "CSSADMIN";
//            // bool result = COEPrincipal.Login(userName, password); //This need to be resolved.
//            // if (result ==true){
//            if (Csla.ApplicationContext.GlobalContext["TablePrep"] == null)
//            {
//                // TruncateTables(); //Uncomment this to clean the COEForm table in database
//                Csla.ApplicationContext.GlobalContext["TablePrep"] = "DONE";
//            }
//            //Providing tablename to service
//            COETableEditorBOList objTemp = COETableEditorBOList.NewList();
//            objTemp.TableName = _tableName;

//        }
//        //
//        //Use TestCleanup to run code after each test has run
//        //
//        //[TestCleanup()]
//        //public void MyTestCleanup()
//        //{
//        //}
//        //
//        #endregion
//        /// <summary>
//        /// Test the list of records that has been fetched for the Table.
//        /// </summary>
//        [TestMethod()]
//        public void GetTableEditorBODataListTest()
//        {

//           COETableEditorBOList listData=  CambridgeSoft.COE.Framework.COETableEditorService.COETableEditorBOList.GetTableEditorBODataList();
//           System.Diagnostics.Debug.WriteLine("Data in Table:" + _tableName);
//           int count=0;
//            foreach (COETableEditorBO obj in listData)
//           { 
//               System.Diagnostics.Debug.WriteLine("Rec " + (count++) +":");
//               foreach (Column col in obj.Columns)
//                   System.Diagnostics.Debug.WriteLine(col.FieldValue.ToString() + "   ");
//           }
//           Assert.IsTrue(listData.Count > 0, "Either no data in Table or Could not fetch the result");
//        }

//        /// <summary>
//        ///A test for getColumns ()
//        ///</summary>
//        [TestMethod()]
//        public void getColumnsTest()
//        {
//            //   System.Collections.Generic.List<CambridgeSoft.COE.Framework.COETableEditorService.Column> expected = null;
//            System.Collections.Generic.List<CambridgeSoft.COE.Framework.COETableEditorService.Column> actual;

//            actual = CambridgeSoft.COE.Framework.COETableEditorService.COETableEditorBOList.getColumns();
//            System.Diagnostics.Debug.WriteLine("column list for Table : " + _tableName);
//            foreach (Column str in actual)
//            {
//                System.Diagnostics.Debug.WriteLine(str.FieldName);
//            }
//            Assert.IsNotNull(actual, "List is not Returned");
//        }

//        /// <summary>
//        ///A test for getFieldToShow (string)
//        ///</summary>
//        [TestMethod()]
//        public void getFieldToShowTest()
//        {
            
//            string actual;

//            actual = CambridgeSoft.COE.Framework.COETableEditorService.COETableEditorBOList.getFieldToShow(_tableName);

//            System.Diagnostics.Debug.WriteLine("The FieldTobeShown for the table : " + _tableName + " is : " + actual);

//            Assert.IsNotNull(actual, "FieldTobeShown is given but not fetched.");
//        }

//        /// <summary>
//        ///A test for GetID_columnList ()
//        ///</summary>
//        [TestMethod()]
//        public void GetID_columnListTest()
//        {
//            //System.Collections.Generic.List<CambridgeSoft.COE.Framework.COETableEditorService.ID_Column> expected = null;
//            System.Collections.Generic.List<CambridgeSoft.COE.Framework.COETableEditorService.ID_Column> actual;
            
//            actual = CambridgeSoft.COE.Framework.COETableEditorService.COETableEditorBOList.GetID_columnList();

//            System.Diagnostics.Debug.WriteLine("ID-Column list for table : " + _tableName);

//            foreach (ID_Column rec in actual)
//                System.Diagnostics.Debug.WriteLine("Use :" + rec.PColumn.ToString() + " on place of :" + rec.ID);

//            Assert.IsNotNull(actual, "No Value List");
//        }

//        /// <summary>
//        ///A test for getLookupField (string, string)
//        ///</summary>
//        [TestMethod()]
//        public void getLookupFieldTest()
//        {
//            string FieldName = "MOL_ID"; // For Graphics Table

//            string expected = null;
//            string actual;

//            actual = CambridgeSoft.COE.Framework.COETableEditorService.COETableEditorBOList.getLookupField(_tableName, FieldName);
//            Assert.IsTrue(actual.Length>0, "No Lookup Field defined for this table");
           
//        }

//        /// <summary>
//        ///A test for GetLookupFieldList (int, string)
//        ///</summary>
//        [TestMethod()]
//        public void GetLookupFieldListTest()
//        {
//            int id = 0; // TODO: Initialize to an appropriate value

//            string FieldforLookup = "MOL_ID"; // TODO: Initialize to an appropriate value

//          //  System.Collections.Generic.List<CambridgeSoft.COE.Framework.COETableEditorService.ID> expected = null;
//            System.Collections.Generic.List<CambridgeSoft.COE.Framework.COETableEditorService.ID_Column> actual;

//            actual = CambridgeSoft.COE.Framework.COETableEditorService.COETableEditorBOList.GetLookupFieldList(id, FieldforLookup);

//            System.Diagnostics.Debug.WriteLine("LookUp list for Column: "+FieldforLookup +" list for table : " + _tableName);

//            foreach (ID_Column rec in actual)
//                System.Diagnostics.Debug.WriteLine("Use :" + rec.PColumn.ToString() + " on place of :" + rec.ID);

//            Assert.IsNotNull(actual, " Lookup Value list is null");
//        }

//        /// <summary>
//        ///A test for getLookupID (string)
//        ///</summary>
//        [TestMethod()]
//        public void getLookupIDTest()
//        {
//            string FieldName = "MOL_ID"; // TODO: Initialize to an appropriate value

//            string actual;

//            actual = CambridgeSoft.COE.Framework.COETableEditorService.COETableEditorBOList.getLookupID(FieldName);

//            Assert.IsTrue(actual.Length > 0, "No look Up ID Fetched for the FieldName");
//        }

//        /// <summary>
//        ///A test for getLookupTable (string)
//        ///</summary>
//        [TestMethod()]
//        public void getLookupTableTest()
//        {
//            string FieldName = null; // TODO: Initialize to an appropriate value

//            string expected = null;
//            string actual;

//            actual = CambridgeSoft.COE.Framework.COETableEditorService.COETableEditorBOList.getLookupTable(FieldName);

//            System.Diagnostics.Debug.WriteLine("Name of the lookup table for the Field : " + FieldName + " is :" + actual);

//            Assert.IsTrue(actual.Length > 0, "Lookup Table can't be resolved");
//        }

//        /// <summary>
//        ///A test for getTables ()
//        ///</summary>
//        [TestMethod()]
//        public void getTablesTest()
//        {
           
//            System.Collections.Generic.List<string> actual;

//            actual = CambridgeSoft.COE.Framework.COETableEditorService.COETableEditorBOList.getTables();
//            System.Diagnostics.Debug.WriteLine("List of the Tables declared in TableEditor Section for the AppName inside Config: ");
//            foreach(string str in actual)
//            {
//                System.Diagnostics.Debug.WriteLine(str);
//            }
//            Assert.IsTrue(actual.Count > 0, "List of Tables cant be fetched");
//        }
//    }


//}
