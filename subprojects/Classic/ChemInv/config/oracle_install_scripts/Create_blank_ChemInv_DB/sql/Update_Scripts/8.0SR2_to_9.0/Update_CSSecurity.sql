--Copyright Cambridgesoft Corp 2001-2005 all rights reserved
SET verify off
connect &&securitySchemaName/&&securitySchemaPass@&&serverName;

--this row is for the application and is not a test user
INSERT INTO people(person_id, user_id, user_code, supervisor_internal_id, last_name, site_id, active) VALUES (PEOPLE_SEQ.NEXTVAL,'UNKNOWN','UNKNOWN','1','UNKNOWN','1','0');

ALTER TABLE &&securitySchemaName.."CHEMINV_PRIVILEGES" ADD(
	"INV_CERTIFY_CONTAINER" NUMBER(1),
	"INV_APPROVE_CONTAINER" NUMBER(1),
  "INV_CHANGE_STATUS_CONTAINER" NUMBER(1)
	);

UPDATE &&securitySchemaName.."CHEMINV_PRIVILEGES" SET INV_CERTIFY_CONTAINER = 0 , INV_APPROVE_CONTAINER = 0, INV_CHANGE_STATUS_CONTAINER = 0 WHERE  role_internal_id = (SELECT role_id FROM security_roles WHERE role_name = 'INV_BROWSER');
UPDATE &&securitySchemaName.."CHEMINV_PRIVILEGES" SET INV_CERTIFY_CONTAINER = 0 , INV_APPROVE_CONTAINER = 1, INV_CHANGE_STATUS_CONTAINER = 0 WHERE  role_internal_id = (SELECT role_id FROM security_roles WHERE role_name = 'INV_CHEMIST');
UPDATE &&securitySchemaName.."CHEMINV_PRIVILEGES" SET INV_CERTIFY_CONTAINER = 0 , INV_APPROVE_CONTAINER = 1, INV_CHANGE_STATUS_CONTAINER = 0 WHERE  role_internal_id = (SELECT role_id FROM security_roles WHERE role_name = 'INV_RECEIVING');
UPDATE &&securitySchemaName.."CHEMINV_PRIVILEGES" SET INV_CERTIFY_CONTAINER = 0 , INV_APPROVE_CONTAINER = 0, INV_CHANGE_STATUS_CONTAINER = 0 WHERE  role_internal_id = (SELECT role_id FROM security_roles WHERE role_name = 'INV_FINANCE');
UPDATE &&securitySchemaName.."CHEMINV_PRIVILEGES" SET INV_CERTIFY_CONTAINER = 0 , INV_APPROVE_CONTAINER = 0, INV_CHANGE_STATUS_CONTAINER = 0 WHERE  role_internal_id = (SELECT role_id FROM security_roles WHERE role_name = 'INV_REGISTRAR');
UPDATE &&securitySchemaName.."CHEMINV_PRIVILEGES" SET INV_CERTIFY_CONTAINER = 1 , INV_APPROVE_CONTAINER = 1, INV_CHANGE_STATUS_CONTAINER = 1 WHERE  role_internal_id = (SELECT role_id FROM security_roles WHERE role_name = 'INV_ADMIN');

-- INV_BROWSE_ALL
INSERT INTO &&securitySchemaName..OBJECT_PRIVILEGES VALUES ('INV_BROWSE_ALL', 'SELECT', '&&SchemaName', 'INV_PLATE_PARENT');
INSERT INTO &&securitySchemaName..OBJECT_PRIVILEGES VALUES ('INV_BROWSE_ALL', 'SELECT', '&&SchemaName', 'INV_WELL_PARENT');
INSERT INTO &&securitySchemaName..OBJECT_PRIVILEGES VALUES ('INV_BROWSE_ALL', 'SELECT', '&&SchemaName', 'INV_COUNTRY');
INSERT INTO &&securitySchemaName..OBJECT_PRIVILEGES VALUES ('INV_BROWSE_ALL', 'SELECT', '&&SchemaName', 'INV_STATES');
INSERT INTO &&securitySchemaName..OBJECT_PRIVILEGES VALUES ('INV_BROWSE_ALL', 'SELECT', '&&SchemaName', 'INV_ADDRESS');
INSERT INTO &&securitySchemaName..OBJECT_PRIVILEGES VALUES ('INV_BROWSE_ALL', 'SELECT', '&&SchemaName', 'INV_REQUEST_TYPES');
INSERT INTO &&securitySchemaName..OBJECT_PRIVILEGES VALUES ('INV_BROWSE_ALL', 'SELECT', '&&SchemaName', 'INV_REQUEST_STATUS');
INSERT INTO &&securitySchemaName..OBJECT_PRIVILEGES VALUES ('INV_BROWSE_ALL', 'SELECT', '&&SchemaName', 'INV_REQUEST_SAMPLES');
INSERT INTO &&securitySchemaName..OBJECT_PRIVILEGES VALUES ('INV_BROWSE_ALL', 'SELECT', '&&SchemaName', 'INV_ORDER_STATUS');
INSERT INTO &&securitySchemaName..OBJECT_PRIVILEGES VALUES ('INV_BROWSE_ALL', 'SELECT', '&&SchemaName', 'INV_ORDERS');
INSERT INTO &&securitySchemaName..OBJECT_PRIVILEGES VALUES ('INV_BROWSE_ALL', 'SELECT', '&&SchemaName', 'INV_ORDER_CONTAINERS');
INSERT INTO &&securitySchemaName..OBJECT_PRIVILEGES VALUES ('INV_BROWSE_ALL', 'SELECT', '&&SchemaName', 'INV_CONTAINER_CHECKIN_DETAILS');
INSERT INTO &&securitySchemaName..OBJECT_PRIVILEGES VALUES ('INV_BROWSE_ALL', 'SELECT', '&&SchemaName', 'INV_WELL_COMPOUNDS');
INSERT INTO &&securitySchemaName..OBJECT_PRIVILEGES VALUES ('INV_BROWSE_ALL', 'SELECT', '&&SchemaName', 'INV_VW_WELL_FLAT');
INSERT INTO &&securitySchemaName..OBJECT_PRIVILEGES VALUES ('INV_BROWSE_ALL', 'SELECT', '&&SchemaName', 'INV_REPORTPARAMS');
--INSERT INTO &&securitySchemaName..OBJECT_PRIVILEGES VALUES ('INV_BROWSE_ALL', 'EXECUTE', '&&SchemaName', 'LOOKUPVALUE');
--INSERT INTO &&securitySchemaName..OBJECT_PRIVILEGES VALUES ('INV_BROWSE_ALL', 'EXECUTE', '&&SchemaName', 'RESERVATIONS');
INSERT INTO &&securitySchemaName..OBJECT_PRIVILEGES VALUES ('INV_BROWSE_ALL', 'EXECUTE', '&&SchemaName', 'CHEMCALCS');

-- INV_CREATE_LOCATION PRIVS
INSERT INTO &&securitySchemaName..OBJECT_PRIVILEGES VALUES ('INV_CREATE_LOCATION', 'EXECUTE', '&&SchemaName', 'UPDATEADDRESS');

-- INV_EDIT_LOCATION PRIVS
INSERT INTO &&securitySchemaName..OBJECT_PRIVILEGES VALUES ('INV_EDIT_LOCATION', 'EXECUTE', '&&SchemaName', 'UPDATEADDRESS');

-- INV_CREATE_CONTAINER PRIVS
INSERT INTO &&securitySchemaName..OBJECT_PRIVILEGES VALUES ('INV_CREATE_CONTAINER', 'EXECUTE', '&&SchemaName', 'UPDATEADDRESS');
INSERT INTO &&securitySchemaName..OBJECT_PRIVILEGES VALUES ('INV_CREATE_LOCATION', 'EXECUTE', '&&SchemaName', 'GETPKCOLUMN');
INSERT INTO &&securitySchemaName..OBJECT_PRIVILEGES VALUES ('INV_CREATE_LOCATION', 'EXECUTE', '&&SchemaName', 'UPDATETABLE');
INSERT INTO &&securitySchemaName..OBJECT_PRIVILEGES VALUES ('INV_CREATE_LOCATION', 'EXECUTE', '&&SchemaName', 'CREATETABLEROW');
INSERT INTO &&securitySchemaName..OBJECT_PRIVILEGES VALUES ('INV_CREATE_LOCATION', 'EXECUTE', '&&SchemaName', 'DELETETABLEROW');

-- INV_CHECKIN_CONTAINER PRIVS
INSERT INTO &&securitySchemaName..OBJECT_PRIVILEGES VALUES ('INV_CHECKIN_CONTAINER', 'EXECUTE', '&&SchemaName', 'INSERTCHECKINDETAILS');

-- INV_CERTIFY_CONTAINER PRIVS
INSERT INTO &&securitySchemaName..OBJECT_PRIVILEGES VALUES ('INV_CERTIFY_CONTAINER', 'EXECUTE', '&&SchemaName', 'CERTIFYCONTAINER');

-- INV_APPROVE_CONTAINER PRIVS
INSERT INTO &&securitySchemaName..OBJECT_PRIVILEGES VALUES ('INV_APPROVE_CONTAINER', 'EXECUTE', '&&SchemaName', 'APPROVALS');

-- INV_CHANGE_STATUS_CONTAINER PRIVS
INSERT INTO &&securitySchemaName..OBJECT_PRIVILEGES VALUES ('INV_CHANGE_STATUS_CONTAINER', 'EXECUTE', '&&SchemaName', 'UPDATECONTAINER');

-- VIEW_AUDIT_TRAIL PRIVS
--INSERT INTO &&securitySchemaName..OBJECT_PRIVILEGES VALUES ('INV_VIEW_AUDIT_TRAIL', 'SELECT', '&&SchemaName', 'INV_VW_AUDIT_AGGREGATE');

-- INV_PRINT_LABEL_CONTAINER
INSERT INTO &&securitySchemaName..OBJECT_PRIVILEGES VALUES ('INV_PRINT_LABEL_CONTAINER', 'EXECUTE', '&&SchemaName', 'REPORTPARAMS');

-- INV_PRINT_REPORT
INSERT INTO &&securitySchemaName..OBJECT_PRIVILEGES VALUES ('INV_PRINT_REPORT', 'EXECUTE', '&&SchemaName', 'REPORTPARAMS');

-- INV_PRINT_LABEL_PLATE
INSERT INTO &&securitySchemaName..OBJECT_PRIVILEGES VALUES ('INV_PRINT_LABEL_PLATE', 'EXECUTE', '&&SchemaName', 'REPORTPARAMS');

Commit;

Connect &&schemaName/&&schemaPass@&&serverName
GRANT SELECT ON "&&SchemaName".INV_COUNTRY TO &&securitySchemaName WITH GRANT OPTION;
GRANT SELECT ON "&&SchemaName".INV_STATES TO &&securitySchemaName WITH GRANT OPTION;
GRANT SELECT ON "&&SchemaName".INV_ADDRESS TO &&securitySchemaName WITH GRANT OPTION;
GRANT SELECT ON "&&SchemaName".INV_REQUEST_TYPES TO &&securitySchemaName WITH GRANT OPTION;
GRANT SELECT ON "&&SchemaName".INV_REQUEST_STATUS TO &&securitySchemaName WITH GRANT OPTION;
GRANT SELECT ON "&&SchemaName".INV_REQUEST_SAMPLES TO &&securitySchemaName WITH GRANT OPTION;
GRANT SELECT ON "&&SchemaName".INV_ORDER_STATUS TO &&securitySchemaName WITH GRANT OPTION;
GRANT SELECT ON "&&SchemaName".INV_ORDERS TO &&securitySchemaName WITH GRANT OPTION;
GRANT SELECT ON "&&SchemaName".INV_ORDER_CONTAINERS TO &&securitySchemaName WITH GRANT OPTION;
GRANT SELECT ON "&&SchemaName".INV_CONTAINER_CHECKIN_DETAILS TO &&securitySchemaName WITH GRANT OPTION;
GRANT SELECT ON "&&SchemaName".INV_VW_WELL_FLAT TO &&securitySchemaName WITH GRANT OPTION;
GRANT SELECT ON "&&SchemaName".INV_WELL_PARENT TO &&securitySchemaName WITH GRANT OPTION;
GRANT SELECT ON "&&SchemaName".INV_PLATE_PARENT TO &&securitySchemaName WITH GRANT OPTION;
GRANT SELECT ON "&&SchemaName".INV_WELL_COMPOUNDS TO &&securitySchemaName WITH GRANT OPTION;
GRANT SELECT ON "&&SchemaName".INV_REPORTPARAMS TO &&securitySchemaName WITH GRANT OPTION;

GRANT EXECUTE ON "&&SchemaName".UPDATEADDRESS to &&securitySchemaName WITH GRANT OPTION;
GRANT EXECUTE ON "&&SchemaName".CERTIFYCONTAINER to &&securitySchemaName WITH GRANT OPTION;
GRANT EXECUTE ON "&&SchemaName".INSERTCHECKINDETAILS to &&securitySchemaName WITH GRANT OPTION;
GRANT EXECUTE ON "&&SchemaName".LOOKUPVALUE to &&securitySchemaName WITH GRANT OPTION;
GRANT EXECUTE ON "&&SchemaName".DELETETABLEROW TO &&securitySchemaName WITH GRANT OPTION;
GRANT EXECUTE ON "&&SchemaName".APPROVALS to &&securitySchemaName WITH GRANT OPTION;
GRANT EXECUTE ON "&&SchemaName".REPORTPARAMS TO &&securitySchemaName WITH GRANT OPTION;
