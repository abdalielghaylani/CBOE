CREATE TABLE "INV_EHS_CAS_SUBSTANCE"(
    "EHS_CAS_SUBSTANCE_ID" NUMBER(5) NOT NULL, 
    "SUBSTANCE_NAME" VARCHAR2(500) NOT NULL, 
    "CAS" VARCHAR2(15) NOT NULL, 
    "CAS_INTERNAL" VARCHAR2(15) NOT NULL, 
    "EHS_GROUP_1" VARCHAR2(10), 
    "EHS_GROUP_2" VARCHAR2(10), 
    "EHS_GROUP_3" VARCHAR2(10), 
    "HEALTH" NUMBER(1), 
    "FLAMMABILITY" NUMBER(1), 
    "REACTIVITY" NUMBER(1), 
    "IS_SENSITIZER" NUMBER(1) DEFAULT 0 NOT NULL, 
    "IS_REFRIGERATED" NUMBER(1) DEFAULT 0 NOT NULL, 
    "PACKING_GROUP" NUMBER(1), 
    "UN_NUMBER" NUMBER(4), 
    "IARC_CARCINOGEN" VARCHAR2(10), 
    "EU_CARCINOGEN" VARCHAR2(50), 
    "IS_OSHA_CARCINOGEN" NUMBER(1) DEFAULT 0 NOT NULL, 
    "ACGIH_CARCINOGEN_CATEGORY" VARCHAR2(2), 
    "CUSTOM_1" VARCHAR2(50), 
    "CUSTOM_2" VARCHAR2(50), 
    "CUSTOM_3" VARCHAR2(50), 
    "CUSTOM_4" VARCHAR2(50), 
    "CUSTOM_5" VARCHAR2(50), 
    "CUSTOM_6" VARCHAR2(50), 
    "CUSTOM_7" VARCHAR2(50), 
    "CUSTOM_8" VARCHAR2(50), 
    "CUSTOM_9" VARCHAR2(50), 
    "CUSTOM_10" VARCHAR2(50), 
    CONSTRAINT "EHS_CAS_HEALTH_CHK" 
		CHECK(Health BETWEEN 0 AND 4), 
    CONSTRAINT "EHS_CAS_FLAM_CHK" 
		CHECK(Flammability BETWEEN 0 AND 4), 
    CONSTRAINT "EHS_CAS_REAC_CHK" 
		CHECK(Reactivity BETWEEN 0 AND 4), 
    CONSTRAINT "EHS_CAS_PACK_CHK" 
		CHECK(packing_Group BETWEEN 1 AND 3), 
    CONSTRAINT "EHS_CAS_ACGIH_CHK" 
		CHECK(ACGIH_Carcinogen_Category IN ('A1', 'A2')), 
    CONSTRAINT "EHS_CAS_PK" 
		PRIMARY KEY("EHS_CAS_SUBSTANCE_ID") USING INDEX TABLESPACE &&indexTableSpaceName
	); 

create sequence SEQ_INV_EHS_CAS_Substance INCREMENT BY 1 START WITH 1 MAXVALUE 99999 MINVALUE 1 NOCYCLE NOCACHE ORDER;

CREATE OR REPLACE TRIGGER TRG_INV_EHS_CAS_bi0 BEFORE INSERT
ON INV_EHS_CAS_Substance
FOR EACH ROW
BEGIN
    :NEW.CAS_Internal := TRANSLATE(UPPER(:NEW.CAS), 
                                   Constants.cCASTranslation1, Constants.cCASTranslation2);
END;
/

CREATE OR REPLACE TRIGGER TRG_INV_EHS_CAS_bu0 BEFORE UPDATE
ON INV_EHS_CAS_Substance
FOR EACH ROW
WHEN (new.CAS <> old.CAS)
BEGIN
    :NEW.CAS_Internal := TRANSLATE(UPPER(:NEW.CAS), 
                                   Constants.cCASTranslation1, Constants.cCASTranslation2);
END;
/




CREATE UNIQUE INDEX EHS_CAS_AK_IDX ON inv_EHS_CAS_Substance (CAS_Internal ASC) TABLESPACE &&indexTableSpaceName;

