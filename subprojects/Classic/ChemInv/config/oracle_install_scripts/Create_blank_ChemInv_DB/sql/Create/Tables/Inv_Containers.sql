CREATE TABLE "INV_CONTAINERS"(
	"CONTAINER_ID" NUMBER(9) NOT NULL, 
	"LOCATION_ID_FK" NUMBER(9) NOT NULL, 
	"COMPOUND_ID_FK" NUMBER(9),
	"PARENT_CONTAINER_ID_FK" NUMBER(9) NULL, 
	"REG_ID_FK" NUMBER(9),
	"BATCH_NUMBER_FK" NUMBER(9),
  	"FAMILY" NUMBER(9),
	"BATCH_ID_FK" NUMBER(4),
	"CONTAINER_NAME" VARCHAR2(255) NOT NULL, 
	"CONTAINER_DESCRIPTION" VARCHAR2(255), 
  "QTY_MAX" NUMBER NOT NULL, 
  "QTY_INITIAL" NUMBER NOT NULL, 
  "QTY_REMAINING" NUMBER NOT NULL, 
  "QTY_MINSTOCK" NUMBER, 
  "QTY_MAXSTOCK" NUMBER, 
  "WELL_NUMBER" NUMBER(4), 
  "WELL_ROW" VARCHAR2(3), 
  "WELL_COLUMN" VARCHAR2(3), 
  "DATE_EXPIRES" DATE, 
  "DATE_CREATED" DATE NOT NULL, 
  "CONTAINER_TYPE_ID_FK" NUMBER(4) NOT NULL, 
  "PURITY" NUMBER, 
  "SOLVENT_ID_FK" NUMBER(4), 
  "CONCENTRATION" NUMBER, 
  "UNIT_OF_MEAS_ID_FK" NUMBER(4), 
  "UNIT_OF_WGHT_ID_FK" NUMBER(4), 
  "UNIT_OF_CONC_ID_FK" NUMBER(4), 
  "GRADE" VARCHAR2(255), 
  "WEIGHT" NUMBER, 
  "UNIT_OF_PURITY_ID_FK" NUMBER(4), 
  "TARE_WEIGHT" NUMBER, 
  "OWNER_ID_FK" VARCHAR2(50), 
  "CONTAINER_COMMENTS" VARCHAR2(2000), 
  "STORAGE_CONDITIONS" VARCHAR2(2000),
  "HANDLING_PROCEDURES" VARCHAR2(2000),
  "ORDERED_BY_ID_FK" VARCHAR2(50), 
  "DATE_ORDERED" DATE, 
  "DATE_RECEIVED" DATE, 
	"DATE_CERTIFIED" DATE,
	"DATE_APPROVED" DATE,
  "LOT_NUM" VARCHAR2(50), 
  "CONTAINER_STATUS_ID_FK" NUMBER(4) NOT NULL, 
  "RECEIVED_BY_ID_FK" VARCHAR2(50), 
  "FINAL_WGHT" NUMBER, 
  "NET_WGHT" NUMBER, 
  "QTY_AVAILABLE" NUMBER, 
  "QTY_RESERVED" NUMBER, 
  "PHYSICAL_STATE_ID_FK" NUMBER(4), 
  "CURRENT_USER_ID_FK" VARCHAR2(50) NOT NULL, 
  "SUPPLIER_ID_FK" NUMBER(4), 
  "SUPPLIER_CATNUM" VARCHAR2(50), 
  "DATE_PRODUCED" DATE, 
  "CONTAINER_COST" NUMBER(9, 2), 
  "UNIT_OF_COST_ID_FK" NUMBER(4), 
  "DEF_LOCATION_ID_FK" NUMBER(9) NOT NULL, 
  "BARCODE" VARCHAR2(50) NOT NULL, 
  "PO_NUMBER" VARCHAR2(50), 
  "REQ_NUMBER" VARCHAR2(50),
  "DENSITY" NUMBER, 
  "UNIT_OF_DENSITY_ID_FK" NUMBER(4), 
  "PO_LINE_NUMBER" NUMBER(4),
  "FIELD_1" VARCHAR2(2000),
  "FIELD_2" VARCHAR2(2000),
  "FIELD_3" VARCHAR2(2000),
  "FIELD_4" VARCHAR2(2000),
  "FIELD_5" VARCHAR2(2000),
  "FIELD_6" VARCHAR2(2000),
  "FIELD_7" VARCHAR2(2000),
  "FIELD_8" VARCHAR2(2000),
  "FIELD_9" VARCHAR2(2000),
  "FIELD_10" VARCHAR2(2000),
  "DATE_1" DATE,
  "DATE_2" DATE,
  "DATE_3" DATE,
  "DATE_4" DATE,
  "DATE_5" DATE,
  "RID" NUMBER(10) NOT NULL, 
  "CREATOR" VARCHAR2(30) DEFAULT RTRIM(user) NOT NULL, 
  "TIMESTAMP" DATE DEFAULT sysdate NOT NULL,  
  CONSTRAINT "INV_CONTAINERS_PK" 
		PRIMARY KEY("CONTAINER_ID") USING INDEX  TABLESPACE &&indexTableSpaceName, 
  CONSTRAINT "INV_CONT_BARCODE_U" 
		UNIQUE("BARCODE") USING INDEX  TABLESPACE &&indexTableSpaceName, 
  CONSTRAINT "INV_CONT_COMPOUNDS_FK" 
		FOREIGN KEY("COMPOUND_ID_FK") 
		REFERENCES "INV_COMPOUNDS"("COMPOUND_ID"),
	CONSTRAINT "INV_CONT_CURRUSERID_FK"
  	FOREIGN KEY("CURRENT_USER_ID_FK")
    REFERENCES "PEOPLE"("USER_ID"),
	CONSTRAINT "INV_CONT_BATCH_ID_FK"
		FOREIGN KEY ("BATCH_ID_FK")
		REFERENCES "INV_CONTAINER_BATCHES" ("BATCH_ID"),
  CONSTRAINT "INV_CONT_PARENTCONT_FK" 
		FOREIGN KEY("PARENT_CONTAINER_ID_FK") 
		REFERENCES "INV_CONTAINERS"("CONTAINER_ID"),	 
  CONSTRAINT "INV_CONT_CONT_STATUS_FK" 
		FOREIGN KEY("CONTAINER_STATUS_ID_FK") 
		REFERENCES "INV_CONTAINER_STATUS"("CONTAINER_STATUS_ID"), 
  CONSTRAINT "INV_CONT_CONT_TYPES_FK" 
		FOREIGN KEY("CONTAINER_TYPE_ID_FK") 
		REFERENCES "INV_CONTAINER_TYPES"("CONTAINER_TYPE_ID"), 
  CONSTRAINT "INV_CONT_DEFLOCATION_FK" 
		FOREIGN KEY("DEF_LOCATION_ID_FK") 
		REFERENCES "INV_LOCATIONS"("LOCATION_ID"),  
  CONSTRAINT "INV_CONT_PHYSICAL_STATE_FK" 
		FOREIGN KEY("PHYSICAL_STATE_ID_FK") 
		REFERENCES "INV_PHYSICAL_STATE"("PHYSICAL_STATE_ID"), 
  CONSTRAINT "INV_CONT_QTYMAX_CHK"
		CHECK(QTY_MAX > 0),
	CONSTRAINT "INV_CONT_OVERSIZE_CHK" 
		CHECK(QTY_REMAINING <= QTY_MAX),
	CONSTRAINT "INV_CONT_QTY_AVAIL_CHK" 
		CHECK(QTY_AVAILABLE >= 0),
	CONSTRAINT "INV_CONT_QTY_REMAIN_CHK" 
		CHECK(QTY_REMAINING >= 0),	   
  CONSTRAINT "INV_CONT_SUPPLIERS_FK" 
		FOREIGN KEY("SUPPLIER_ID_FK") 
		REFERENCES "INV_SUPPLIERS"("SUPPLIER_ID"), 
  CONSTRAINT "INV_CONT_UNITOFCONC_FK" 
		FOREIGN KEY("UNIT_OF_CONC_ID_FK") 
		REFERENCES "INV_UNITS"("UNIT_ID"), 
  CONSTRAINT "INV_CONT_UNITOFMEAS_FK" 
		FOREIGN KEY("UNIT_OF_MEAS_ID_FK") 
		REFERENCES "INV_UNITS"("UNIT_ID"), 
  CONSTRAINT "INV_CONT_UNITOFPURITY_FK" 
		FOREIGN KEY("UNIT_OF_PURITY_ID_FK") 
		REFERENCES "INV_UNITS"("UNIT_ID"),
	CONSTRAINT "INV_CONT_OWNER_ID_FK" 
		FOREIGN KEY("OWNER_ID_FK") 
		REFERENCES "INV_OWNERS"("OWNER_ID"),	
	CONSTRAINT "INV_CONT_LOCATIONS_FK" 
		FOREIGN KEY("LOCATION_ID_FK") 
		REFERENCES "INV_LOCATIONS"("LOCATION_ID") 
		ON DELETE CASCADE, 
  CONSTRAINT "INV_CONT_UNITOFWGHT_FK" 
		FOREIGN KEY("UNIT_OF_WGHT_ID_FK") 
		REFERENCES "INV_UNITS"("UNIT_ID"),
  CONSTRAINT "INV_CONT_SOLVENTS_FK" 
		FOREIGN KEY("SOLVENT_ID_FK") 
		REFERENCES "INV_SOLVENTS"("SOLVENT_ID")
	)
; 

-- index the inv_containers table
CREATE INDEX inv_containers_req_idx ON inv_containers(req_number asc) TABLESPACE &&indexTableSpaceName;
CREATE INDEX inv_containers_owner_idx ON inv_containers(owner_id_fk asc) TABLESPACE &&indexTableSpaceName;
CREATE INDEX inv_containers_received_idx ON inv_containers(date_received asc) TABLESPACE &&indexTableSpaceName;
CREATE INDEX inv_containers_catnum_idx ON inv_containers(supplier_id_fk asc, supplier_catnum asc) TABLESPACE &&indexTableSpaceName;
CREATE INDEX inv_containers_ponum_idx ON inv_containers(po_number asc, po_line_number asc) TABLESPACE &&indexTableSpaceName;
CREATE INDEX container_location_id_fk_idx ON inv_containers (location_id_fk) TABLESPACE &&indexTableSpaceName; 
CREATE INDEX containers_compound_id_fk_idx ON inv_containers (compound_id_fk) TABLESPACE &&indexTableSpaceName; 
CREATE INDEX container_status_id_fk_idx ON inv_containers(container_status_id_fk) TABLESPACE &&indexTableSpaceName;
CREATE INDEX container_type_id_fk_idx ON inv_containers(container_type_id_fk) TABLESPACE &&indexTableSpaceName;
CREATE INDEX def_location_id_fk_idx ON inv_containers(def_location_id_fk) TABLESPACE &&indexTableSpaceName;
CREATE INDEX physical_state_id_fk_idx ON inv_containers(physical_state_id_fk) TABLESPACE &&indexTableSpaceName;
CREATE INDEX unit_of_conc_id_fk_idx ON inv_containers(unit_of_conc_id_fk) TABLESPACE &&indexTableSpaceName;
CREATE INDEX unit_of_meas_id_fk_idx ON inv_containers(unit_of_meas_id_fk) TABLESPACE &&indexTableSpaceName;
CREATE INDEX unit_of_purity_id_fk_idx ON inv_containers(unit_of_purity_id_fk) TABLESPACE &&indexTableSpaceName;
CREATE INDEX unit_of_wght_id_fk_idx ON inv_containers(unit_of_wght_id_fk) TABLESPACE &&indexTableSpaceName;
CREATE INDEX inv_containesr_curruserid_idx ON inv_containers(CURRENT_USER_ID_FK) TABLESPACE &&indexTableSpaceName;
CREATE INDEX CONTAINER_BATCH_ID_FK_IDX ON INV_CONTAINERS(BATCH_ID_FK) TABLESPACE &&indexTableSpaceName;
CREATE INDEX CONTAINER_REG_ID_FK_IDX ON INV_CONTAINERS(REG_ID_FK) TABLESPACE &&indexTableSpaceName;
CREATE INDEX CONTAINER_BATCH_NUMBER_FK_IDX ON INV_CONTAINERS(BATCH_NUMBER_FK) TABLESPACE &&indexTableSpaceName;

CREATE INDEX PARENT_CONTAINER_ID_FK_IDX ON INV_CONTAINERS(PARENT_CONTAINER_ID_FK) TABLESPACE &&indexTableSpaceName;
CREATE INDEX SOLVENT_ID_FK_IDX ON INV_CONTAINERS(SOLVENT_ID_FK) TABLESPACE &&indexTableSpaceName;

create sequence SEQ_INV_Containers INCREMENT BY 1 START WITH 1;

CREATE OR REPLACE
TRIGGER "TRG_INV_CONTAINERS_ID"
    BEFORE INSERT
    ON "INV_CONTAINERS"
    FOR EACH ROW
begin
		if :new.container_id is null then
			select seq_Inv_Containers.nextval into :new.container_id from dual;
		end if;
		if :new.Barcode is null then
			:new.Barcode := :new.container_id;
		end if;
		if :new.Container_Name is null then
			select seq_Inv_Containers.currval into :new.Container_Name from dual;
		end if;
		IF :NEW.parent_container_id_fk IS NULL THEN
    	:NEW.family := :NEW.container_id;
		END IF;    
end;
/


