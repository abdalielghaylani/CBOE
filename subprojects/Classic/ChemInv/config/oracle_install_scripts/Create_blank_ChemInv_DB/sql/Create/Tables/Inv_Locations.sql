CREATE TABLE "INV_LOCATIONS"(
	"LOCATION_ID" NUMBER(9) NOT NULL,
	"PARENT_ID" NUMBER(9), 
	"DESCRIPTION" VARCHAR2(255), 
	"LOCATION_TYPE_ID_FK" NUMBER(9) NOT NULL, 
	"LOCATION_NAME" VARCHAR2(50) NOT NULL, 
	"LOCATION_DESCRIPTION" VARCHAR2(255), 
	"LOCATION_BARCODE" VARCHAR2(50) NOT NULL,
	"OWNER_ID_FK" VARCHAR2(30), 
	"ALLOWS_CONTAINERS" VARCHAR2(1),
	"ADDRESS_ID_FK" NUMBER(4),
	"COLLAPSE_CHILD_NODES" NUMBER(1),	
	"RID" NUMBER(10) NOT NULL, 
	"CREATOR" VARCHAR2(30) DEFAULT RTRIM(user) NOT NULL, 
	"TIMESTAMP" DATE DEFAULT sysdate NOT NULL,   
  CONSTRAINT "INV_LOCATIONS_PK" 
		PRIMARY KEY("LOCATION_ID") USING INDEX  TABLESPACE &&indexTableSpaceName,  
  CONSTRAINT "INV_LOCATIONS_ADDRESSID_FK"
		FOREIGN KEY("ADDRESS_ID_FK")
		REFERENCES "INV_ADDRESS"("ADDRESS_ID") 
    ON DELETE SET NULL,
	CONSTRAINT "INV_LOC_LOC_FK" 
		FOREIGN KEY("PARENT_ID") 
		REFERENCES "INV_LOCATIONS"("LOCATION_ID") 
		ON DELETE CASCADE, 
  CONSTRAINT "INV_LOC_LOC_TYPES_FK" 
		FOREIGN KEY("LOCATION_TYPE_ID_FK") 
		REFERENCES "INV_LOCATION_TYPES"("LOCATION_TYPE_ID") 	 
); 

ALTER TABLE INV_Locations ADD (PRINCIPAL_ID_FK NUMBER(8));
ALTER TABLE INV_Locations ADD (ISPUBLIC NUMBER(2) default 0);


CREATE INDEX INV_LOCATIONS_OWNER_IDX ON INV_LOCATIONS(OWNER_ID_FK) TABLESPACE &&indexTableSpaceName;
CREATE INDEX LOCATION_TYPE_ID_FK_IDX ON INV_LOCATIONS(LOCATION_TYPE_ID_FK) TABLESPACE &&indexTableSpaceName;     
CREATE INDEX INV_LOCATIONS_IDX1 ON INV_LOCATIONS(LOCATION_ID ASC, PARENT_ID ASC) TABLESPACE &&indexTableSpaceName; 
CREATE INDEX INV_LOCATIONS_ADDRESS_IDX ON INV_LOCATIONS(ADDRESS_ID_FK) TABLESPACE &&indexTableSpaceName;
CREATE INDEX INV_LOCATIONS_PARENTID_IDX ON INV_LOCATIONS(PARENT_ID) TABLESPACE &&indexTableSpaceName;

create sequence SEQ_INV_Locations INCREMENT BY 1 START WITH 1000;

CREATE OR REPLACE TRIGGER "TRG_INV_LOCATIONS_ID" 
    BEFORE INSERT 
    ON "INV_LOCATIONS" 
    FOR EACH ROW 
    begin
		if :new.Location_ID is null then
			select seq_Inv_Locations.nextval into :new.Location_id from dual;
		end if;
		if :new.Location_Barcode is null then
			select :new.Location_id into :new.Location_Barcode from dual;
		end if;
	end;
/
	