<%@ LANGUAGE=VBScript %>
<%'Copyright 1998-2001 CambridgeSoft Corporation All Rights Reserved
'DO NOT EDIT THIS FILE
'-------------------------------------------------------------------------------
' 'the action page contains the actions for security features for oracle based applications
'-------------------------------------------------------------------------------%>

<!--#INCLUDE FILE = "../../source/app_vbs.asp"-->
<!--#INCLUDE FILE = "../../cs_security/admin_utils_vbs.asp"-->
<!--#INCLUDE FILE = "../../cs_security/admin_utils_js.js"-->
<!--#INCLUDE VIRTUAL = "/cfserverasp/source/cows_func_vbs.asp" -->
<%'on error resume next
strDataAction = LCase(Request.QueryString("dataaction"))
dbkey = request("dbname")
formgroup = Request("formgroup")
formgroupflag= GetFormGroupVal(dbkey, formgroup, kFormGroupFlag)

'------------------
' action handler
'------------------
Select Case strDataAction
	Case "add_role"
		Response.Write "Adding role..."
		SetSessionVars dbkey, formgroup, "add_record"
		'GetSearchData dbkey, formgroup
		table_names=Request("Add_Order")
		AddType = "CASCADE"
		field_names= "Security_Roles.Privilege_Table_Int_ID" & "," &  Request("RelationalSearchFields")
		isOK=DoProcessRole(dbkey, formgroup,field_names, "", "", "ADD")
		if isOK = "" then
			isOK=DoAddRoleRecord(dbkey, formgroup, table_names, field_names, AddType)	
			if isOK <> "" then
				ShowMessageDialog( Session( "errors_found" & dbkey & formgroup ) )
			else
				ShowMessageDialog( "Role added" )
			end if
		else
			ShowMessageDialog( Session( "errors_found" & dbkey & formgroup ) )
		end if
		ReturnEditResults dbkey, formgroup, "ADD_RECORD", dbkey 
	Case "delete_role"
		Response.Write "Deleting role..."
		
		SetSessionVars dbkey, formgroup, "add_record"	
		temp_str = Request("ROW_ID_TABLE_NAMES")
		
		delete_order = Request("table_delete_order")
		delete_order_array = Split(delete_order, ",", -1)
		count = UBound(delete_order_array) 'get last table for connection informaiton
		Set DataConn = GetConnection(dbkey, formgroup, delete_order_array(count))
		if DataConn.State=0 then ' assume user has been logged out
			DoLoggedOutMsg()
		end if
		'DataConn.BeginTrans
		on error resume next
		for i = 0 to UBound(delete_order_array)
			current_table = delete_order_array(i)
			
			table_name_array = split(temp_str, ",", -1)
		
			for j = 0 to UBound(table_name_array)
				table_name = table_name_array(j)	
				if table_name = current_table then
					tables_row_IDs = request(table_name & "_ROW_IDS")
					tables_row_IDs_array = split(tables_row_IDs, ",", -1)
					for k = 0 to UBound(tables_row_IDs_array)
						strWhere = ""
						row_ID = tables_row_IDs_array(k)
						if UCase(table_name) = "SECURITY_ROLES" then
							isOK = DoProcessRole(dbkey, formgroup,"", table_name, row_ID, "DELETE")	
						end if		
					
							isOK = DoCascadeDelete(DataConn, dbkey, formgroup, row_ID,table_name, strWhere)		
						next 'row_ID k for table j
				end if
			next 'table j
		next 'delete order i
		CheckForADOErrors dbkey, DataConn, "Delete Record Error" & "\n\n" & "table_name: " & table_name & "\n\n", "log"

		if Session( "errors_found" & dbkey & formgroup ) <> "" then
			'DataConn.RollbackTrans
			ShowMessageDialog( Session( "errors_found" & dbkey & formgroup ) )
		else			
			'DataConn.CommitTrans
			ShowMessageDialog("Records Deleted")
		end if
			CloseConn(DataConn)
		
	
		ReturnEditResults dbkey, formgroup, "DELETE_RECORD", dbkey 
	Case "update_role"
		PrivTable = Application("PRIV_TABLE_NAME")
		Response.Write "Updating role..."
		SetSessionVars dbkey, formgroup, "update_record"
		RelFields = Request("RelationalSearchFields")
		
		temp = Request("ROW_ID_TABLE_NAMES")
		table_name_array = split(temp, ",", -1)
			for i = 0 to UBound(table_name_array)
		
				table_name = table_name_array(i)	
				tables_row_IDs = request(table_name & "_ROW_IDS")
				tables_row_IDs_array = split(tables_row_IDs, ",", -1)
				for j = 0 to UBound(tables_row_IDs_array)
					row_ID = tables_row_IDs_array(j)
					'get all submitted data fields for this table and row_ID
					if UCase(table_name) = UCase(PrivTable) then
						'update Oracle user tables
						isOK = DoProcessRole(dbkey, formgroup,RelFields, table_name, row_ID, "UPDATE")
					end if
					'update cs_security.chem_reg_privileges (or whatever it is called for the app)
					isOK = DoUpdateRecord(dbkey, formgroup, "",RelFields, table_name, row_ID)
					if isOK = False then
						ShowMessageDialog( Session( "errors_found" & dbkey & formgroup ) )
					else
						ShowMessageDialog("Record updated")
					end if
				next 'row_ID j for table i
			next 'table i
		
	ReturnEditResults dbkey, formgroup, "UPDATE_RECORD", dbkey 
End Select%>



	
