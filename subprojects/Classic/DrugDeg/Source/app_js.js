<META HTTP-EQUIV="Pragma" CONTENT="no-cache">
<script language = "javascript">

// Copyright 1998-2001 CambridgeSoft Corporation All Rights Reserved
// PURPOSE OF FILE: TO add custom javascript functions to an application.
// All form files generated by the wizard have a #INCLUDE for this file.
// Add the #INCLUDE to form files that you might add to the application.

function add_drugdeg(){
		//alert(formgroup)
		
		var keepgoing = "continue"
		
		
		if (formgroup.toLowerCase() == "condition_form_group") {	
	
			if (MainWindow.document.forms["cows_input_form"].elements["DRUGDEG_CONDS.DEG_COND_TEXT"].value.length > 50) {
				alert("The length of the Condition is greater than 50 characters and cannot be submitted.")
				keepgoing = "stop"
			}
			
			else {
				keepgoing = "continue"
			}
	
		}
		
		if (formgroup.toLowerCase() == "fgroup_form_group") {	
	
			if (MainWindow.document.forms["cows_input_form"].elements["DRUGDEG_FGROUPS.DEG_FGROUP_TEXT"].value.length > 50) {
				alert("The length of the Functional Group is greater than 50 characters and cannot be submitted.")
				keepgoing = "stop"
			}
			
			else {
				keepgoing = "continue"
			}
	
		}
		
		else if (formgroup.toLowerCase() == "status_form_group") {	
	
			if (MainWindow.document.forms["cows_input_form"].elements["DRUGDEG_STATUSES.STATUS_TEXT"].value.length > 50) {
				alert("The length of the status is greater than 50 characters and cannot be submitted.")
				keepgoing = "stop"
			}
			
			else {
				keepgoing = "continue"
			}
	
		}
		else if (formgroup.toLowerCase() =="addparent_form_group"){
		
			//there used to be a lot of code here
			//it has been left like this to avoid losing something that is needed
			var keepgoinga = "continue"
			var keepgoingb = "continue"
			keepgoing = "continue"

		
			
		}
		
		else if (formgroup.toLowerCase() =="addexperiment_form_group"){

			if (MainWindow.document.forms["cows_input_form"].elements["DRUGDEG_EXPTS.DEG_COND_FK"].value == "") {
				alert("Please select a condition. The form cannot be submitted.")
				keepgoing = "stop"
			}
			else {
				keepgoing = "continue"
			}
			
			
		}
					
		else{
			keepgoing = "continue"
		}



		if (keepgoing == "continue") {
			var action = "add_drugdeg"
			var actiontemp = "/<%=Application("appkey")%>/<%=dbkey%>/<%=dbkey%>_action.asp"
			var commit_type = ""
			commit_type = MainWindow.document.forms["nav_variables"].elements["CommitType"].value
			table_name = MainWindow.document.forms["nav_variables"].elements["TableName"].value
			uniqueid = MainWindow.document.forms["nav_variables"].elements["UniqueID"].value

			setCookie( "PagingMove" + MainWindow.dbname + MainWindow.formgroup, "first_record", 1 )
			if (commit_type == "full_commit"){
				if(plugin_value.toLowerCase()!="false"){
					getStructureFields()
				}
			}

			getRelationalFields()
			var missingfields = getSearchStrategy()
		
			if (missingfields == "no_entries"){
				alert("Please enter into one or more fields.")
			}
			else{
				//alert(formgroup.toLowerCase())
				if ( ( "ok_to_submit" == missingfields ) || ( "" == missingfields ) ){
					currentRecord =	MainWindow.document.forms["nav_variables"].elements["CurrentRecord"].value
					setCookie( "PagingMove" + MainWindow.dbname + MainWindow.formgroup, "goto_record",  1 )
					setCookie( "GoToValue" + MainWindow.dbname + MainWindow.formgroup, currentRecord, 1 )
					//JHS added this
					formmode = formmode.toLowerCase()
					MainWindow.document.cows_input_form.action = actiontemp + "?formmode=" + formmode + "&formgroup=" + formgroup + "&dataaction2=" + action + "&dbname=" + dbname + "&commit_type=" + commit_type + "&table_name=" + table_name
					MainWindow.document.cows_input_form.submit();	
				}
				else{
					alert( "Please enter information for the following required fields :"  + missingfields )
				}
			}
		}	

}




function junk(){
		

		
				myDoc = document.forms["cows_input_form"].elements

				for(m=0; m<myDoc.length;m++){
					var storeStructureName = ""
					var myVal = document.forms["cows_input_form"].elements[m].value
					var myName = document.forms["cows_input_form"].elements[m].name	
					if ((myName.indexOf("UID.") != -1) && (myName.indexOf("_orig") == -1)) {
						var theNameValue_temp = myName.split(":")
						var theNameValue = theNameValue_temp[1]
						
					
						
						alert(theNameValue)
					}
					
				}
}



function getFieldNameToCheck(theBaseID, theFieldNameString){
	
	field_temp = "UID." + theBaseID + ":" + theFieldNameString
	return field_temp
	
}

function checkMaxLengthOK(theFieldNameString, theLength){
	var lenstring = MainWindow.document.cows_input_form.elements[theFieldNameString].value.length

	if (lenstring > theLength){
		
		return "toolong"	
	}
	else {
		return "ok"	
	}	
}

function checkFieldMax(theBaseID, theFieldNameString, theLength, theNiceName){
	fieldnametocheck = getFieldNameToCheck(theBaseID,theFieldNameString)
	isOKLength = checkMaxLengthOK(fieldnametocheck, theLength)
	
	if (isOKLength == "ok") {
		return "continue"
	}
	else {
		alertstring = "The " + theNiceName + " field must be less than " + theLength + " characters."
		alert(alertstring)
		return "stop"
	}
}

function drugdegUpdateRecord(){
		var action = "update_Record"
		
		var keepgoing = "continue"
		
		if (formgroup.toLowerCase() == "addexperiment_form_group"){		
	
			var keepgoinga = "continue"
			var keepgoingb = "continue"

			if ((keepgoinga == "continue") && (keepgoingb == "continue")){
				keepgoing = "continue"
			}	
			else {
				keepgoing = "stop"
			}
	
		}
		else if (formgroup.toLowerCase() == "base_form_group"){		

			//there used to be a lot of code here
			//it has been left to make sure nothing important is lost
			var keepgoinga = "continue"
			var keepgoingb = "continue"
			if ((keepgoinga == "continue") && (keepgoingb == "continue")){
				keepgoing = "continue"
			}	
			else {
				keepgoing = "stop"
			}
	
		}
					
		else{
			keepgoing = "continue"
		}
		
		if (keepgoing=="continue") {
			current_location = MainWindow.document.cows_input_form.CurrentLocation.value
		
			MainWindow.document.forms["nav_variables"].elements["Stored_Location"].value=stored_location
		
			actiontemp = action_form_path
			formmode = formmode.toLowerCase()
			if (formmode == "add_record"){
				action = "add_record"
				commit_type = MainWindow.document.forms["nav_variables"].elements["CommitType"].value
				uniqueid=""
				}
			else{
				commit_type = MainWindow.document.forms["nav_variables"].elements["CommitType"].value
				uniqueid = MainWindow.document.forms["nav_variables"].elements["UniqueID"].value
			}
			if (commit_type ==""){
				commit_type = "full_commit"
			}
			if (commit_type.toLowerCase() == "full_commit"){
				if (formmode == "add_record"){
					if (plugin_value.toLowerCase() != "false"){
						getStructureFields()
					}
				}
				if (formmode == "edit_record"){
					if (plugin_value.toLowerCase() != "false"){
						getStructureFields()
					}
					
				}
			}
			//getRelationalFields()- relational data is gathered as changes are made
			if (override_submit == false){
				var missingfields = getSearchStrategy()
				if (missingfields == "no_entries"){
					alert("Please enter into one or more fields.")
				}
				else{
					if ((missingfields == "ok_to_submit") || (missingfields == "")){
						MainWindow.document.cows_input_form.action = actiontemp + "?formmode=" + formmode + "&formgroup=" + formgroup + "&dataaction=" + action + "&dbname=" + dbname + "&commit_type=" + commit_type + "&unique_id=" + uniqueid 
						MainWindow.document.cows_input_form.submit();
						}
					else{
						alert("Please enter information for the following required fields :"  + missingfields)
					}
				}
			}
			//reset so next submit will work
			override_submit = false
		
		}
}

//#####
// Buttons.
//#####

function getDrugDegButton( buttonname, formgroup_override, gif_override ){
	// set image file for button
	var buttonGifPath = button_gif_path
	var buttonImage = buttonGifPath + "Button_" + buttonname + ".gif"	

	// button helpstr text
	var new_recordhelpstr = 'change to add record input form'
	var return_to_detailshelpstr = 'return to previous view'
	var cancel_edithelpstr = 'revert to saved record.'
	var add_recordhelpstr = 'add records to database'
	var update_recordhelpstr = 'update record to database'
	var delete_recordhelpstr = 'delete record from database.'
	var registerhelpstr = 'register compound'
	var register_allhelpstr = 'register all non_duplicate compounds'
	var show_makredhelpstr = 'show marked hits'
	var mark_all_recordshelpstr = 'mark all records'
	var save_queryhelpstr = 'save current query for later use'
	var edit_queryhelpstr = 'restore last query for editing'
	var searchhelpstr ='search entire database using entered criteria'
	var helphelpstr = 'open the webserver help file'
	var clear_formhelpstr = 'clear all form contents'
	var abouthelpstr = 'learn about this database and server version'
	var preferenceshelpstr = 'open preferences window to set search and display options'
	var log_offhelpstr = 'leave this web server app and return to main entry page'
	var refinehelpstr = 'enter criteria to search over current result set'
	var applyhelpstr = 'search current result set using entered criteria'
	var undo_refinehelpstr = 'return to results before applying last refine criteria'
	var export_hitshelpstr = 'export current hits as an SD file'
	var new_searchhelpstr = 'discard current results and begin new search'
	var list_viewhelpstr = 'show more than one record per page'
	var form_viewhelpstr = 'show a single record'
	var restore_lasthelpstr = 'Get last structure entered and associated data'
	var retrieve_allhelpstr = 'Retrieve all records'
	var edit_recordhelpstr = 'Edit current record'
	var blueprinthelpstr = 'Print the current page'

	//create button
	helpstr = eval( buttonname + "helpstr" )
	var outputval ='<A HREF = "#" onclick= MainWindow.getAction("'
	
	outputval = outputval + buttonname + "&quot;,&quot;" + formgroup_override 
	outputval = outputval + '")'
	outputval = outputval + ' onMouseOver="status=' 
	outputval = outputval + '&quot;' + helpstr + '&quot;'
	if (gif_override !=null){
		outputval = outputval + '; return true;"><IMG SRC="' + gif_override + '" BORDER="0"></A>'
	}
	else{
		outputval = outputval + '; return true;"><IMG SRC="' + buttonImage + '" BORDER="0"></A>'
	}
	outputval = outputval + '<nobr>'

	return outputval
}

//#####
// Popup window stuff from Mikodocs.com.
//#####

function OpenPopUpWindow( mylink, windowname )
{
	if ( ! window.focus ) return true;

	var href;
	if ( 'string' == typeof(mylink) )
		href = mylink;
	else
		href = mylink.href;

	// You MUST NOT put spaces into the single-quoted arguments list!
	window.open( href, windowname, 'width=800,height=500,scrollbars=yes' );

	return false;
}

function OpenPopUpWindowFromAForm( myform, windowname )
{
	if ( ! window.focus ) return true;

	window.open( '', windowname, 'height=200,width=400,scrollbars=yes' );
	myform.target = windowname;
	return true;
}

function OpenTargetWindowFromPopUp( mylink, closeme, closeonly )
{
	if ( !( window.focus && window.opener ) )
		return true;

	window.opener.focus();
	if ( !closeonly )
		window.opener.location.href = mylink.href;
	if ( closeme )
		window.close();
	return false;
}

function correctAddLoadedFields(){
	myTempVar = relLoadedFields.split(",")
	relLoadedFields=""
	var currentVal = ""
	var newVal = ""
	for ( i=0; i<myTempVar.length; i++ ){
		var myValue = myTempVar[i].toUpperCase()

		if (myValue.indexOf(".BASE64_CDX")==-1){
			if (newVal.length == 0){
				newVal =  myTempVar[i]
			}
			else{
				newVal =newVal + "," + myTempVar[i]
			}
		}
	}

	relLoadedFields=newVal
}

function removeFromRelFields(){
	alert( "bethere" + MainWindow.document.forms["cows_input_form"].elements["RelationalSearchFields"].value )
}

function  UpdateSaltFieldVal( fullfieldname ) {
	UpdateRelUpdateFields( fullfieldname )
	UpdateTable_Row_IDS( fullfieldname )
	UpdateTable_Names( fullfieldname )

	window.focus()
}

function parentPassThru(formname,currentindex, fullpath) {
	setCookie("TargetForm" + MainWindow.dbname + MainWindow.formgroup,formname,1)
	goFormView(fullpath,currentindex)
}

//#####
// list
//#####
function selectFGroupOption(opt) {
	temp_current =  w_current_fgroup_list.split(",");
	for (j=0;j<temp_current.length;j++){
			temp_current2 = temp_current[j].split(":")
			if ( opt.value == temp_current2[0]) {
				opt.selected = true
			}
	}
}

function fillFGroupsList(){
		
		temp = w_fgroup_list.split(",")
		if (w_current_fgroup_list != "") {
			hasCurrent = true;
		} else {
			hasCurrent = false;
		}
		<%=Application("mainwindow")%>.document.forms[0].elements["fgroups"].length = 0
		
		for (i=0;i<temp.length;i++){
			temp2 = temp[i].split(":")
			<%=Application("mainwindow")%>.document.forms[0].elements["fgroups"].options[i] = new Option(temp2[0])
			<%=Application("mainwindow")%>.document.forms[0].elements["fgroups"].options[i].value = temp2[0]
			<%=Application("mainwindow")%>.document.forms[0].elements["fgroups"].options[i].text = temp2[1]
			
			
			if (hasCurrent) {
				selectFGroupOption(<%=Application("mainwindow")%>.document.forms[0].elements["fgroups"].options[i])
			}
		}
}

function fill_deg_fgroup_list(){
	fillFGroupsList()
}

function updateHiddenFGroup () {
	elmSelect = <%=Application("mainwindow")%>.document.forms[0].elements["fgroups"]
	elmHidden = <%=Application("mainwindow")%>.document.forms[0].elements["current_fgroups_hidden"]
	elmHidden.value = ""
	sValue = ""
	for (i=0; i < elmSelect.options.length ; ++i) {
		opt = elmSelect.options[i]
		if (opt.selected == true) {
			if (sValue == "") {
				sValue = opt.value
			} else {
				sValue = sValue + "," + opt.value
			}
		}
	}
	elmHidden.value = sValue
	
}
</script>

