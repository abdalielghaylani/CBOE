<%@ EnableSessionState=False Language=VBScript%>
<!--#INCLUDE VIRTUAL = "/cfserverasp/source/ado.inc"-->
<!--#INCLUDE VIRTUAL = "/cfserverasp/source/server_const_vbs.asp"-->
<!--#INCLUDE VIRTUAL = "/cheminv/api/apiUtils.asp"-->
<Script RUNAT="Server" Language="VbScript">
Dim LocationID
Dim ContainerID
Dim Conn
Dim Cmd

Dim strError
Dim bWriteError

bDebugPrint = false
bWriteError = False
strError = "Error:ReconcileContainer<BR>"

kLocationMissing = 4
kStatusInUse = 9
kStatusMovedDuringReconciliation = 21
kStatusMissingDuringReconciliation = 22 

LocationID = Request("LocationID")
VerifiedContainerIDList = Request("VerifiedContainerIDList")
AwolContainerIDList = Request("AwolContainerIDList")
CurrentUserID = Request("CurrentUserID")
MaKeDefault = Request("MakeDefault")
MissingContainerIDList = Request("MissingContainerIDList")

'Response.Write Request.Form & "<BR>"
'Response.Write MissingContainerIDList & "<BR>"
' Redirect to help page if no parameters are passed
if Len(Request.QueryString) = 0 AND Len(Request.Form)= 0 then
	Response.Redirect "/cheminv/help/admin/api/ReconcileContainer.htm"
	Response.end
End if


' Check for required parameters
if IsEmpty(LocationID) then
	strError = strError & "LocationID is a required parameter<BR>"
	bWriteError = True
End if
if VerifiedContainerIDList="" AND AwolContainerIDList= "" AND MissingContainerIDList = "" then
	strError = strError & "VerifiedContainerIDList or AwolContainerIDList or MissingContainerIDList is a required parameter<BR>"
	bWriteError = True
End if

' Respond with Error
if bWriteError then
	Response.Write strError
	Response.end
End if

' To verify containers just checkout to the current location w/o changing the current user
If Len(VerifiedContainerIDList) > 0 then
	' Set up and ADO command
	Call GetInvCommand(Application("CHEMINV_USERNAME") & ".CheckOutContainer", adCmdStoredProc)

	' Code generated by QueryProcParams.asp helper page
	Cmd.Parameters.Append Cmd.CreateParameter("RETURN_VALUE",adNumeric, adParamReturnValue, 0, NULL)
	Cmd.Parameters("RETURN_VALUE").Precision = 9
	Cmd.Parameters.Append Cmd.CreateParameter("PLOCATIONID",131, 1, 0, LocationID)
	Cmd.Parameters("PLOCATIONID").Precision = 9
	Cmd.Parameters.Append Cmd.CreateParameter("PCONTAINERID",200, 1, 4000, VerifiedContainerIDList)
	Cmd.Parameters("PCONTAINERID").Precision = 9
	Cmd.Parameters.Append Cmd.CreateParameter("PCURRENTUSERID",200, 1, 50, Null)
	Cmd.Parameters.Append Cmd.CreateParameter("POWNERID",200, 1, 50, NULL)
	Cmd.Parameters.Append Cmd.CreateParameter("PDEFAULTLOCATIONID",131, 1, 0, NULL)
	Cmd.Parameters.Append Cmd.CreateParameter("PCONTAINERSTATUSID",131, 1, 0, NULL)
	if bDebugPrint then
		Response.Write "Verify:<BR>"	
		For each p in Cmd.Parameters
			Response.Write p.name & " = " & p.value & "<BR>"
		Next	
		Response.Write "<BR>"
	Else
		Call ExecuteCmd(Application("CHEMINV_USERNAME") & ".CheckOutContainer")
		RC = Cmd.Parameters("RETURN_VALUE")
		Set Cmd = Nothing
		if IsNumeric(Cstr(RC)) then
			If CLng(RC) < 0 then
				Response.Write RC
				Response.End
			End if
		Else
			Response.Write RC
			Response.end
		End if	
	End if
End if


' To mark missing containers just checkout to the missing location w/o changing the current user

If Len(MissingContainerIDList) > 0 then
	
	' Set up and ADO command
	Call GetInvCommand(Application("CHEMINV_USERNAME") & ".CheckOutContainer", adCmdStoredProc)

	' Code generated by QueryProcParams.asp helper page
	Cmd.Parameters.Append Cmd.CreateParameter("RETURN_VALUE",adNumeric, adParamReturnValue, 0, NULL)
	Cmd.Parameters("RETURN_VALUE").Precision = 9
	Cmd.Parameters.Append Cmd.CreateParameter("PLOCATIONID",131, 1, 0, kLocationMissing)
	Cmd.Parameters("PLOCATIONID").Precision = 9
	Cmd.Parameters.Append Cmd.CreateParameter("PCONTAINERID",200, 1, 4000, MissingContainerIDList)
	Cmd.Parameters("PCONTAINERID").Precision = 9
	Cmd.Parameters.Append Cmd.CreateParameter("PCURRENTUSERID",200, 1, 50, Null)
	Cmd.Parameters.Append Cmd.CreateParameter("POWNERID",200, 1, 50, NULL)
	Cmd.Parameters.Append Cmd.CreateParameter("PDEFAULTLOCATIONID",131, 1, 0, Null)
	Cmd.Parameters.Append Cmd.CreateParameter("PCONTAINERSTATUSID",131, 1, 0, kStatusMissingDuringReconciliation)
	if bDebugPrint then
		Response.Write "MoveMissing:<BR>"	
		For each p in Cmd.Parameters
			Response.Write p.name & " = " & p.value & "<BR>"
		Next
		Response.Write "<BR>"	
	Else
		Call ExecuteCmd(Application("CHEMINV_USERNAME") & ".CheckOutContainer")
		RC = Cmd.Parameters("RETURN_VALUE")
		Set Cmd = Nothing	
		if IsNumeric(Cstr(RC)) then
			If CLng(RC) < 0 then
				Response.Write RC
				Response.End
			End if
		Else
			Response.Write RC
			Response.end
		End if	
	End if
End if

' To reconcile awol containers we check them out to the current location, set the status to found
' and optionaly change the default location and current user
' Then we update the status to in use
If MakeDefault = "" then 
	MakeDefault = 0
	CurrenUserID = NULL
End if	
If Not IsEmpty(AwolContainerIDList) then
	' Set up and ADO command
	Call GetInvCommand(Application("CHEMINV_USERNAME") & ".CheckOutContainer", adCmdStoredProc)

	Cmd.Parameters.Append Cmd.CreateParameter("RETURN_VALUE",adNumeric, adParamReturnValue, 0, NULL)
	Cmd.Parameters("RETURN_VALUE").Precision = 9
	Cmd.Parameters.Append Cmd.CreateParameter("PLOCATIONID",131, 1, 0, LocationID)
	Cmd.Parameters("PLOCATIONID").Precision = 9
	Cmd.Parameters.Append Cmd.CreateParameter("PCONTAINERID",200, 1, 4000, AwolContainerIDList)
	Cmd.Parameters("PCONTAINERID").Precision = 9
	Cmd.Parameters.Append Cmd.CreateParameter("PCURRENTUSERID",200, 1, 50, CurrentUserID)
	Cmd.Parameters.Append Cmd.CreateParameter("POWNERID",200, 1, 50, Null)
	Cmd.Parameters.Append Cmd.CreateParameter("PDEFAULTLOCATIONID",131, 1, 0, Null)
	Cmd.Parameters.Append Cmd.CreateParameter("PCONTAINERSTATUSID",131, 1, 0, kStatusMovedDuringReconciliation)
	if bDebugPrint then
		Response.Write "Reconcile<BR>"	
		For each p in Cmd.Parameters
			Response.Write p.name & " = " & p.value & "<BR>"
		Next
		Response.Write "<BR>"	
	Else
		Call ExecuteCmd(Application("CHEMINV_USERNAME") & ".CheckOutContainer")
		RC = Cmd.Parameters("RETURN_VALUE")
		
			'If RC < 0 then
				Response.Write RC
				'Response.End
			'End if
		
		
				
	End if
	
	
	
	Call GetInvCommand(Application("CHEMINV_USERNAME") & ".UpdateContainerStatus", adCmdStoredProc)

	Cmd.Parameters.Append Cmd.CreateParameter("RETURN_VALUE",adNumeric, adParamReturnValue, 0, NULL)
	Cmd.Parameters("RETURN_VALUE").Precision = 9
	Cmd.Parameters.Append Cmd.CreateParameter("PCONTAINERID",200, 1, 4000, AwolContainerIDList)
	Cmd.Parameters("PCONTAINERID").Precision = 9
	Cmd.Parameters.Append Cmd.CreateParameter("PCONTAINERSTATUSID",131, 1, 0, kStatusInUse)
	if bDebugPrint then
		Response.Write "ChageStatus:<BR>"	
		For each p in Cmd.Parameters
			Response.Write p.name & " = " & p.value & "<BR>"
		Next
		Response.Write "<BR>"	
	Else
		Call ExecuteCmd(Application("CHEMINV_USERNAME") & ".UpdateContainerStatus")
	End if
' Return the new LocationID
Response.Write Cmd.Parameters("RETURN_VALUE")
End if
Response.Write RC 

'Clean up
Conn.Close
Set Conn = Nothing
Set Cmd = Nothing
</SCRIPT>
