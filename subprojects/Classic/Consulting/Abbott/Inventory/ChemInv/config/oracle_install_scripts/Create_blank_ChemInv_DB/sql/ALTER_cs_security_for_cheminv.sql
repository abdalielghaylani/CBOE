-- Copyright Cambridgesoft Corp 2001-2005 all rights reserved
-- NOTE THIS SCRIPT MUST BE RUN FROM THE COMMAND LINE VERSION OF SQLPLUS
-- This script will not run from SQLPlus Worksheet!

-- Creates and grants to default ChemInv Roles and populates CS_SECURITY tables
-- Assumes that CS_SECURITY and CHEMINV schemas exist.
SET verify off
connect &&securitySchemaName/&&securitySchemaPass@&&serverName;

DECLARE
	n NUMBER;
BEGIN
	select count(*) into n from user_tables where table_name = Upper('&&privTableName');
	if n = 1 then
		execute immediate '
		DROP TABLE &&privTableName CASCADE CONSTRAINTS';
	end if;
END;
/

CREATE TABLE CS_SECURITY.CHEMINV_PRIVILEGES(
	ROLE_INTERNAL_ID NUMBER(8) NOT NULL, 
	INV_BROWSE_ALL NUMBER(1), 
	INV_CHANGEQTY_CONTAINER NUMBER(1),
  "INV_CHANGE_STATUS_CONTAINER" NUMBER(1),
	INV_CHECKOUT_CONTAINER NUMBER(1), 
	INV_CHECKIN_CONTAINER NUMBER(1), 
	INV_RESERVE_CONTAINER NUMBER(1), 
	INV_RETIRE_CONTAINER NUMBER(1), 
	INV_PRINT_LABEL_CONTAINER NUMBER(1), 
	INV_PRINT_REPORT NUMBER(1), 
	INV_CREATE_LOCATION NUMBER(1), 
	INV_EDIT_LOCATION NUMBER(1), 
	INV_MOVE_LOCATION NUMBER(1), 
	INV_DELETE_LOCATION NUMBER(1), 
	INV_CREATE_CONTAINER NUMBER(1), 
	INV_EDIT_CONTAINER NUMBER(1), 
	INV_MOVE_CONTAINER NUMBER(1), 
	INV_DELETE_CONTAINER NUMBER(1), 
	INV_MANAGE_LINKS NUMBER(1), 
	INV_MANAGE_SUBSTANCES NUMBER(1), 
	INV_VIEW_AUDIT_TRAIL NUMBER(1),
	INV_UPDATE_LOCATION_CONTENTS NUMBER(1), 
	INV_RECTIFY_LOCATION_CONTENTS NUMBER(1),
	INV_ORDER_CONTAINER NUMBER(1),
	INV_REORDER_CONTAINER NUMBER(1),
	"INV_CERTIFY_CONTAINER" NUMBER(1),
	"INV_APPROVE_CONTAINER" NUMBER(1),
	INV_EDIT_EHS_DATA NUMBER(1), 
	INV_CREATE_PLATE NUMBER(1),
	INV_MOVE_PLATE NUMBER(1),
	INV_EDIT_PLATE NUMBER(1),
	INV_RETIRE_PLATE NUMBER(1),
	INV_REQUEST_PLATE NUMBER(1),
	INV_DILUTE_PLATE NUMBER(1),
	INV_DELETE_PLATE NUMBER(1),
	INV_PRINT_LABEL_PLATE NUMBER(1),
	INV_MANAGE_PLATE_MAPS NUMBER(1),
	CONSTRAINT CHEMINV_PRIVILEGES_PK 
		PRIMARY KEY(ROLE_INTERNAL_ID)
	) TABLESPACE &&securityTableSpaceName
;


--#########################################################
--CREATE ROLES
--#########################################################

CONNECT &&InstallUser/&&sysPass@&&serverName


prompt 'dropping test roles...'

DECLARE
	PROCEDURE dropRole(roleName IN varchar2) IS
			n NUMBER;
		BEGIN
			select count(*) into n from dba_roles where Upper(role) = roleName;
			if n > 0 then
				execute immediate 'DROP ROLE ' || roleName;
			end if;
		END dropRole;
BEGIN
	dropRole('INV_ADMIN');
	dropRole('INV_CHEMIST');
	dropRole('INV_REGISTRAR');
	dropRole('INV_RECEIVING');
	dropRole('INV_BROWSER');
	dropRole('INV_FINANCE');
END;
/

--CREATE_MASTER_ROLES
--INV_BROWSER
	CREATE ROLE INV_BROWSER NOT IDENTIFIED;
	REVOKE "INV_BROWSER" FROM "SYSTEM";
	GRANT "CONNECT" TO "INV_BROWSER";
	GRANT CSS_USER TO "INV_BROWSER";
	
--INV_CHEMIST
	CREATE ROLE INV_CHEMIST NOT IDENTIFIED;
	REVOKE "INV_CHEMIST" FROM "SYSTEM";
	GRANT CSS_USER TO "INV_CHEMIST";
--INV_FINANCE
	CREATE ROLE INV_FINANCE NOT IDENTIFIED;
	REVOKE "INV_FINANCE" FROM "SYSTEM";
	GRANT CSS_USER TO "INV_FINANCE";
--INV_RECEIVING
	CREATE ROLE INV_RECEIVING NOT IDENTIFIED;
	REVOKE "INV_RECEIVING" FROM "SYSTEM";
	GRANT CSS_USER TO "INV_RECEIVING";
--INV_REGISTRAR
	CREATE ROLE INV_REGISTRAR NOT IDENTIFIED;
	REVOKE "INV_REGISTRAR" FROM "SYSTEM";
	GRANT CSS_USER TO "INV_REGISTRAR";
--INV_ADMIN
	CREATE ROLE INV_ADMIN NOT IDENTIFIED;
	REVOKE "INV_ADMIN" FROM "SYSTEM";
	GRANT CSS_ADMIN TO "INV_ADMIN";

-- Grant browser role to all roles
	GRANT "INV_BROWSER" TO "INV_CHEMIST";
	GRANT "INV_BROWSER" TO "INV_FINANCE";
	GRANT "INV_BROWSER" TO "INV_RECEIVING";
	GRANT "INV_BROWSER" TO "INV_REGISTRAR";
	GRANT "INV_BROWSER" TO "INV_ADMIN";

@@Grant_to_ChemInv_Roles.sql;
	
connect &&securitySchemaName/&&securitySchemaPass@&&serverName;
-- inv_browser needs to see the reg and batch number
DECLARE
	PROCEDURE grantOnTable(tOwner in varchar2, tName in varchar2, priv in varchar2) IS
			n NUMBER;
		BEGIN
			select count(*) into n from dba_tables where Upper(owner) = Upper(tOwner) AND Upper(table_name)= Upper(tName);
			if n = 1 then
				execute immediate 'GRANT '||priv||' ON '||tOwner||'.'||tName||' TO INV_BROWSER, &&SchemaName';
			end if;
		END grantOnTable;
BEGIN
	grantOnTable('REGDB', 'reg_numbers', 'select');
	grantOnTable('REGDB', 'batches', 'select');
	grantOnTable('REGDB', 'alt_ids', 'select');
	grantOnTable('REGDB', 'structures', 'select');
	grantOnTable('REGDB', 'compound_molecule', 'select');
END;
/

	
-- SECURITY_ROLES
delete from security_roles where (PRIVILEGE_TABLE_INT_ID) IN (SELECT PRIVILEGE_TABLE_ID FROM PRIVILEGE_TABLES WHERE PRIVILEGE_TABLE_NAME = 'CHEMINV_PRIVILEGES');
commit;

--PRIVELEGE_TABLES
delete from privilege_tables where TABLE_SPACE = 'T_CHEMINV2';
commit;

INSERT INTO PRIVILEGE_TABLES (PRIVILEGE_TABLE_NAME,APP_NAME,TABLE_SPACE) values('CHEMINV_PRIVILEGES','Chemical Inventory','T_CHEMINV2');

--INV_BROWSER
INSERT INTO SECURITY_ROLES (PRIVILEGE_TABLE_INT_ID,ROLE_NAME)values(PRIVILEGE_TABLES_seq.CURRVAL,'INV_BROWSER');
INSERT INTO CHEMINV_PRIVILEGES(ROLE_INTERNAL_ID				,INV_BROWSE_ALL		,INV_CHANGEQTY_CONTAINER	,INV_CHECKOUT_CONTAINER	,INV_CHECKIN_CONTAINER	,INV_RESERVE_CONTAINER	,INV_RETIRE_CONTAINER	,INV_PRINT_LABEL_CONTAINER	,INV_PRINT_REPORT	,INV_CREATE_LOCATION	,INV_EDIT_LOCATION	,INV_MOVE_LOCATION	,INV_DELETE_LOCATION	,INV_CREATE_CONTAINER	,INV_EDIT_CONTAINER	,INV_MOVE_CONTAINER	,INV_DELETE_CONTAINER	,INV_MANAGE_LINKS	,INV_MANAGE_SUBSTANCES	,INV_VIEW_AUDIT_TRAIL	,INV_UPDATE_LOCATION_CONTENTS	,INV_RECTIFY_LOCATION_CONTENTS	,INV_ORDER_CONTAINER	,INV_REORDER_CONTAINER	,INV_EDIT_EHS_DATA	,INV_CREATE_PLATE	,INV_MOVE_PLATE		,INV_EDIT_PLATE		,INV_RETIRE_PLATE	,INV_REQUEST_PLATE	,INV_DILUTE_PLATE	,INV_DELETE_PLATE	,INV_PRINT_LABEL_PLATE	,INV_MANAGE_PLATE_MAPS, INV_CERTIFY_CONTAINER, INV_APPROVE_CONTAINER, INV_CHANGE_STATUS_CONTAINER)
			VALUES(SECURITY_ROLES_SEQ.CURRVAL		,1			,0				,0			,0			,0			,0			,0				,0			,0			,0			,0			,0			,0			,0			,0			,0			,0			,0			,0			,0				,0				,0			,0			,0			,0			,0			,0			,0			,0			,0			,0			,0			,0			,0			,0		,0);

--INV_CHEMIST
--Create/Edit/Move CONtainers
INSERT INTO SECURITY_ROLES (PRIVILEGE_TABLE_INT_ID,ROLE_NAME)values(PRIVILEGE_TABLES_seq.CURRVAL,'INV_CHEMIST');
INSERT INTO CHEMINV_PRIVILEGES(ROLE_INTERNAL_ID				,INV_BROWSE_ALL		,INV_CHANGEQTY_CONTAINER	,INV_CHECKOUT_CONTAINER	,INV_CHECKIN_CONTAINER	,INV_RESERVE_CONTAINER	,INV_RETIRE_CONTAINER	,INV_PRINT_LABEL_CONTAINER	,INV_PRINT_REPORT	,INV_CREATE_LOCATION	,INV_EDIT_LOCATION	,INV_MOVE_LOCATION	,INV_DELETE_LOCATION	,INV_CREATE_CONTAINER	,INV_EDIT_CONTAINER	,INV_MOVE_CONTAINER	,INV_DELETE_CONTAINER	,INV_MANAGE_LINKS	,INV_MANAGE_SUBSTANCES	,INV_VIEW_AUDIT_TRAIL	,INV_UPDATE_LOCATION_CONTENTS	,INV_RECTIFY_LOCATION_CONTENTS	,INV_ORDER_CONTAINER	,INV_REORDER_CONTAINER	,INV_EDIT_EHS_DATA	,INV_CREATE_PLATE	,INV_MOVE_PLATE		,INV_EDIT_PLATE		,INV_RETIRE_PLATE	,INV_REQUEST_PLATE	,INV_DILUTE_PLATE	,INV_DELETE_PLATE	,INV_PRINT_LABEL_PLATE	,INV_MANAGE_PLATE_MAPS, INV_CERTIFY_CONTAINER, INV_APPROVE_CONTAINER, INV_CHANGE_STATUS_CONTAINER)
			VALUES(SECURITY_ROLES_SEQ.CURRVAL		,1			,1				,1			,1			,1			,1			,1				,1			,0			,0			,0			,0			,1			,1			,1			,0			,0			,0			,0			,0				,0				,0			,0			,0 			,1			,1			,1			,1			,1			,1			,1			,1			,0			,0			,0		,1);

--INV_RECEIVING
-- Create/Edit/Move CONtainers
INSERT INTO SECURITY_ROLES (PRIVILEGE_TABLE_INT_ID,ROLE_NAME)values(PRIVILEGE_TABLES_seq.CURRVAL,'INV_RECEIVING');
INSERT INTO CHEMINV_PRIVILEGES(ROLE_INTERNAL_ID				,INV_BROWSE_ALL		,INV_CHANGEQTY_CONTAINER	,INV_CHECKOUT_CONTAINER	,INV_CHECKIN_CONTAINER	,INV_RESERVE_CONTAINER	,INV_RETIRE_CONTAINER	,INV_PRINT_LABEL_CONTAINER	,INV_PRINT_REPORT	,INV_CREATE_LOCATION	,INV_EDIT_LOCATION	,INV_MOVE_LOCATION	,INV_DELETE_LOCATION	,INV_CREATE_CONTAINER	,INV_EDIT_CONTAINER	,INV_MOVE_CONTAINER	,INV_DELETE_CONTAINER	,INV_MANAGE_LINKS	,INV_MANAGE_SUBSTANCES	,INV_VIEW_AUDIT_TRAIL	,INV_UPDATE_LOCATION_CONTENTS	,INV_RECTIFY_LOCATION_CONTENTS	,INV_ORDER_CONTAINER	,INV_REORDER_CONTAINER	,INV_EDIT_EHS_DATA	,INV_CREATE_PLATE	,INV_MOVE_PLATE		,INV_EDIT_PLATE		,INV_RETIRE_PLATE	,INV_REQUEST_PLATE	,INV_DILUTE_PLATE	,INV_DELETE_PLATE	,INV_PRINT_LABEL_PLATE	,INV_MANAGE_PLATE_MAPS, INV_CERTIFY_CONTAINER, INV_APPROVE_CONTAINER, INV_CHANGE_STATUS_CONTAINER)
			VALUES(SECURITY_ROLES_SEQ.CURRVAL		,1			,0				,0			,0			,0			,0			,1				,1			,0			,0			,0			,0			,1			,1			,1			,1			,0			,0			,0			,0				,0				,0			,0			,0			,1			,1			,1			,0			,0			,0			,1			,1			,0			,0			,0		,1);

--INV_FINANCE
-- Create/Edit/Move CONtainers
-- Create/Move/Delete LocatiONs
INSERT INTO SECURITY_ROLES (PRIVILEGE_TABLE_INT_ID,ROLE_NAME)values(PRIVILEGE_TABLES_seq.CURRVAL,'INV_FINANCE');
INSERT INTO CHEMINV_PRIVILEGES(ROLE_INTERNAL_ID				,INV_BROWSE_ALL		,INV_CHANGEQTY_CONTAINER	,INV_CHECKOUT_CONTAINER	,INV_CHECKIN_CONTAINER	,INV_RESERVE_CONTAINER	,INV_RETIRE_CONTAINER	,INV_PRINT_LABEL_CONTAINER	,INV_PRINT_REPORT	,INV_CREATE_LOCATION	,INV_EDIT_LOCATION	,INV_MOVE_LOCATION	,INV_DELETE_LOCATION	,INV_CREATE_CONTAINER	,INV_EDIT_CONTAINER	,INV_MOVE_CONTAINER	,INV_DELETE_CONTAINER	,INV_MANAGE_LINKS	,INV_MANAGE_SUBSTANCES	,INV_VIEW_AUDIT_TRAIL	,INV_UPDATE_LOCATION_CONTENTS	,INV_RECTIFY_LOCATION_CONTENTS	,INV_ORDER_CONTAINER	,INV_REORDER_CONTAINER	,INV_EDIT_EHS_DATA	,INV_CREATE_PLATE	,INV_MOVE_PLATE		,INV_EDIT_PLATE		,INV_RETIRE_PLATE	,INV_REQUEST_PLATE	,INV_DILUTE_PLATE	,INV_DELETE_PLATE	,INV_PRINT_LABEL_PLATE	,INV_MANAGE_PLATE_MAPS, INV_CERTIFY_CONTAINER, INV_APPROVE_CONTAINER, INV_CHANGE_STATUS_CONTAINER)
			VALUES(SECURITY_ROLES_SEQ.CURRVAL		,1			,1				,0			,0			,0			,1			,1				,1			,1			,1			,1			,1			,1			,1			,1			,1			,0			,0			,1			,0				,0				,0			,0			,0			,1			,1			,1			,0			,0			,0			,1			,1			,0			,0			,0		,0);

--INV_REGISTRAR
-- Create/Edit/Delete inventory substances
INSERT INTO SECURITY_ROLES (PRIVILEGE_TABLE_INT_ID,ROLE_NAME)values(PRIVILEGE_TABLES_seq.CURRVAL,'INV_REGISTRAR');
INSERT INTO CHEMINV_PRIVILEGES(ROLE_INTERNAL_ID				,INV_BROWSE_ALL		,INV_CHANGEQTY_CONTAINER	,INV_CHECKOUT_CONTAINER	,INV_CHECKIN_CONTAINER	,INV_RESERVE_CONTAINER	,INV_RETIRE_CONTAINER	,INV_PRINT_LABEL_CONTAINER	,INV_PRINT_REPORT	,INV_CREATE_LOCATION	,INV_EDIT_LOCATION	,INV_MOVE_LOCATION	,INV_DELETE_LOCATION	,INV_CREATE_CONTAINER	,INV_EDIT_CONTAINER	,INV_MOVE_CONTAINER	,INV_DELETE_CONTAINER	,INV_MANAGE_LINKS	,INV_MANAGE_SUBSTANCES	,INV_VIEW_AUDIT_TRAIL	,INV_UPDATE_LOCATION_CONTENTS	,INV_RECTIFY_LOCATION_CONTENTS	,INV_ORDER_CONTAINER	,INV_REORDER_CONTAINER	,INV_EDIT_EHS_DATA	,INV_CREATE_PLATE	,INV_MOVE_PLATE		,INV_EDIT_PLATE		,INV_RETIRE_PLATE	,INV_REQUEST_PLATE	,INV_DILUTE_PLATE	,INV_DELETE_PLATE	,INV_PRINT_LABEL_PLATE	,INV_MANAGE_PLATE_MAPS, INV_CERTIFY_CONTAINER, INV_APPROVE_CONTAINER, INV_CHANGE_STATUS_CONTAINER)
			VALUES(SECURITY_ROLES_SEQ.CURRVAL		,1			,0				,0			,0			,0			,0			,1				,1			,0			,0			,0			,0			,0			,0			,0			,0			,1			,1			,1			,0				,0				,0			,0			,0			,0			,0			,0			,0			,0			,0			,0			,0			,0			,0			,0		,0);

--INV_ADMIN
-- Full Access
INSERT INTO SECURITY_ROLES (PRIVILEGE_TABLE_INT_ID,ROLE_NAME)values(PRIVILEGE_TABLES_seq.CURRVAL,'INV_ADMIN');
INSERT INTO CHEMINV_PRIVILEGES(ROLE_INTERNAL_ID				,INV_BROWSE_ALL		,INV_CHANGEQTY_CONTAINER	,INV_CHECKOUT_CONTAINER	,INV_CHECKIN_CONTAINER	,INV_RESERVE_CONTAINER	,INV_RETIRE_CONTAINER	,INV_PRINT_LABEL_CONTAINER	,INV_PRINT_REPORT	,INV_CREATE_LOCATION	,INV_EDIT_LOCATION	,INV_MOVE_LOCATION	,INV_DELETE_LOCATION	,INV_CREATE_CONTAINER	,INV_EDIT_CONTAINER	,INV_MOVE_CONTAINER	,INV_DELETE_CONTAINER	,INV_MANAGE_LINKS	,INV_MANAGE_SUBSTANCES	,INV_VIEW_AUDIT_TRAIL	,INV_UPDATE_LOCATION_CONTENTS	,INV_RECTIFY_LOCATION_CONTENTS	,INV_ORDER_CONTAINER	,INV_REORDER_CONTAINER	,INV_EDIT_EHS_DATA	,INV_CREATE_PLATE	,INV_MOVE_PLATE		,INV_EDIT_PLATE		,INV_RETIRE_PLATE	,INV_REQUEST_PLATE	,INV_DILUTE_PLATE	,INV_DELETE_PLATE	,INV_PRINT_LABEL_PLATE	,INV_MANAGE_PLATE_MAPS, INV_CERTIFY_CONTAINER, INV_APPROVE_CONTAINER, INV_CHANGE_STATUS_CONTAINER)
			VALUES(SECURITY_ROLES_SEQ.CURRVAL		,1			,1				,1			,1			,1			,1			,1				,1			,1			,1			,1			,1			,1			,1			,1			,1			,1			,1			,1			,0				,1				,0			,0			,0			,1			,1			,1			,1			,1			,1			,1			,1			,1		,0		,0		,1);


DELETE FROM CS_SECURITY.OBJECT_PRIVILEGES WHERE Schema = '&&SchemaName';

-- INV_BROWSE_ALL PRIVS
INSERT INTO CS_SECURITY.OBJECT_PRIVILEGES VALUES ('INV_BROWSE_ALL', 'SELECT', '&&SchemaName', 'INV_COMPOUNDS');
INSERT INTO CS_SECURITY.OBJECT_PRIVILEGES VALUES ('INV_BROWSE_ALL', 'SELECT', '&&SchemaName', 'INV_CONTAINERS');
INSERT INTO CS_SECURITY.OBJECT_PRIVILEGES VALUES ('INV_BROWSE_ALL', 'SELECT', '&&SchemaName', 'INV_CONTAINER_STATUS');
INSERT INTO CS_SECURITY.OBJECT_PRIVILEGES VALUES ('INV_BROWSE_ALL', 'SELECT', '&&SchemaName', 'INV_CONTAINER_TYPES');
INSERT INTO CS_SECURITY.OBJECT_PRIVILEGES VALUES ('INV_BROWSE_ALL', 'SELECT', '&&SchemaName', 'INV_EXCLUDE_CONTAINER_TYPES');
INSERT INTO CS_SECURITY.OBJECT_PRIVILEGES VALUES ('INV_BROWSE_ALL', 'SELECT', '&&SchemaName', 'INV_LOCATIONS');
INSERT INTO CS_SECURITY.OBJECT_PRIVILEGES VALUES ('INV_BROWSE_ALL', 'SELECT', '&&SchemaName', 'INV_LOCATION_TYPES');
INSERT INTO CS_SECURITY.OBJECT_PRIVILEGES VALUES ('INV_BROWSE_ALL', 'SELECT', '&&SchemaName', 'INV_OWNERS');
INSERT INTO CS_SECURITY.OBJECT_PRIVILEGES VALUES ('INV_BROWSE_ALL', 'SELECT', '&&SchemaName', 'INV_PICKLISTS');
INSERT INTO CS_SECURITY.OBJECT_PRIVILEGES VALUES ('INV_BROWSE_ALL', 'SELECT', '&&SchemaName', 'INV_PHYSICAL_STATE');
INSERT INTO CS_SECURITY.OBJECT_PRIVILEGES VALUES ('INV_BROWSE_ALL', 'SELECT', '&&SchemaName', 'INV_PROJECT_JOB_INFO');
INSERT INTO CS_SECURITY.OBJECT_PRIVILEGES VALUES ('INV_BROWSE_ALL', 'SELECT', '&&SchemaName', 'INV_REPORTFORMATS');
INSERT INTO CS_SECURITY.OBJECT_PRIVILEGES VALUES ('INV_BROWSE_ALL', 'SELECT', '&&SchemaName', 'INV_REPORTS');
INSERT INTO CS_SECURITY.OBJECT_PRIVILEGES VALUES ('INV_BROWSE_ALL', 'SELECT', '&&SchemaName', 'INV_REPORTTYPES');
INSERT INTO CS_SECURITY.OBJECT_PRIVILEGES VALUES ('INV_BROWSE_ALL', 'SELECT', '&&SchemaName', 'INV_REQUESTS');
INSERT INTO CS_SECURITY.OBJECT_PRIVILEGES VALUES ('INV_BROWSE_ALL', 'SELECT', '&&SchemaName', 'INV_RESERVATION_TYPES');
INSERT INTO CS_SECURITY.OBJECT_PRIVILEGES VALUES ('INV_BROWSE_ALL', 'SELECT', '&&SchemaName', 'INV_SUPPLIERS');
INSERT INTO CS_SECURITY.OBJECT_PRIVILEGES VALUES ('INV_BROWSE_ALL', 'SELECT', '&&SchemaName', 'INV_SYNONYMS');
INSERT INTO CS_SECURITY.OBJECT_PRIVILEGES VALUES ('INV_BROWSE_ALL', 'SELECT', '&&SchemaName', 'INV_UNITS');
INSERT INTO CS_SECURITY.OBJECT_PRIVILEGES VALUES ('INV_BROWSE_ALL', 'SELECT', '&&SchemaName', 'INV_UNIT_TYPES');
INSERT INTO CS_SECURITY.OBJECT_PRIVILEGES VALUES ('INV_BROWSE_ALL', 'SELECT', '&&SchemaName', 'INV_URL');
INSERT INTO CS_SECURITY.OBJECT_PRIVILEGES VALUES ('INV_BROWSE_ALL', 'SELECT', '&&SchemaName', 'INV_USER_PROPERTIES');
INSERT INTO CS_SECURITY.OBJECT_PRIVILEGES VALUES ('INV_BROWSE_ALL', 'UPDATE', '&&SchemaName', 'INV_USER_PROPERTIES');
INSERT INTO CS_SECURITY.OBJECT_PRIVILEGES VALUES ('INV_BROWSE_ALL', 'INSERT', '&&SchemaName', 'INV_USER_PROPERTIES');

INSERT INTO CS_SECURITY.OBJECT_PRIVILEGES VALUES ('INV_BROWSE_ALL', 'EXECUTE', '&&SchemaName', 'CHECKOUTCONTAINER');
INSERT INTO CS_SECURITY.OBJECT_PRIVILEGES VALUES ('INV_BROWSE_ALL', 'EXECUTE', '&&SchemaName', 'EXCLUDE_CONTAINERTYPES');
INSERT INTO CS_SECURITY.OBJECT_PRIVILEGES VALUES ('INV_BROWSE_ALL', 'EXECUTE', '&&SchemaName', 'GUIUTILS');
INSERT INTO CS_SECURITY.OBJECT_PRIVILEGES VALUES ('INV_BROWSE_ALL', 'EXECUTE', '&&SchemaName', 'RESERVATIONS');
INSERT INTO CS_SECURITY.OBJECT_PRIVILEGES VALUES ('INV_BROWSE_ALL', 'EXECUTE', '&&SchemaName', 'REQUESTS');
INSERT INTO CS_SECURITY.OBJECT_PRIVILEGES VALUES ('INV_BROWSE_ALL', 'EXECUTE', '&&SchemaName', 'SELECTHAZMATDATA');
INSERT INTO CS_SECURITY.OBJECT_PRIVILEGES VALUES ('INV_BROWSE_ALL', 'EXECUTE', '&&SchemaName', 'SELECTSUBSTANCEHAZMATDATA');
INSERT INTO CS_SECURITY.OBJECT_PRIVILEGES VALUES ('INV_BROWSE_ALL', 'EXECUTE', '&&SchemaName', 'UPDATECONTAINERSTATUS');
INSERT INTO CS_SECURITY.OBJECT_PRIVILEGES VALUES ('INV_BROWSE_ALL', 'EXECUTE', '&&SchemaName', 'GETLOCATIONPATH');
INSERT INTO CS_SECURITY.OBJECT_PRIVILEGES VALUES ('INV_BROWSE_ALL', 'EXECUTE', '&&SchemaName', 'XMLUtils');
INSERT INTO CS_SECURITY.OBJECT_PRIVILEGES VALUES ('INV_BROWSE_ALL', 'EXECUTE', '&&SchemaName', 'ISTRASHLOCATION');
INSERT INTO CS_SECURITY.OBJECT_PRIVILEGES VALUES ('INV_BROWSE_ALL', 'EXECUTE', '&&SchemaName', 'LOOKUPVALUE');
INSERT INTO CS_SECURITY.OBJECT_PRIVILEGES VALUES ('INV_BROWSE_ALL', 'EXECUTE', '&&SchemaName', 'CHEMCALCS');

INSERT INTO CS_SECURITY.OBJECT_PRIVILEGES VALUES ('INV_BROWSE_ALL', 'SELECT', '&&SchemaName', 'INV_ALLOWED_CTYPES');
INSERT INTO CS_SECURITY.OBJECT_PRIVILEGES VALUES ('INV_BROWSE_ALL', 'SELECT', '&&SchemaName', 'INV_ALLOWED_LTYPES');
INSERT INTO CS_SECURITY.OBJECT_PRIVILEGES VALUES ('INV_BROWSE_ALL', 'SELECT', '&&SchemaName', 'INV_ALLOWED_PTYPES');
INSERT INTO CS_SECURITY.OBJECT_PRIVILEGES VALUES ('INV_BROWSE_ALL', 'SELECT', '&&SchemaName', 'INV_BARCODE_DESC');
INSERT INTO CS_SECURITY.OBJECT_PRIVILEGES VALUES ('INV_BROWSE_ALL', 'SELECT', '&&SchemaName', 'INV_ENUMERATION');
INSERT INTO CS_SECURITY.OBJECT_PRIVILEGES VALUES ('INV_BROWSE_ALL', 'SELECT', '&&SchemaName', 'INV_ENUMERATION_SET');
INSERT INTO CS_SECURITY.OBJECT_PRIVILEGES VALUES ('INV_BROWSE_ALL', 'SELECT', '&&SchemaName', 'INV_ENUM_VALUES');
INSERT INTO CS_SECURITY.OBJECT_PRIVILEGES VALUES ('INV_BROWSE_ALL', 'SELECT', '&&SchemaName', 'INV_ESET_TYPE');
INSERT INTO CS_SECURITY.OBJECT_PRIVILEGES VALUES ('INV_BROWSE_ALL', 'SELECT', '&&SchemaName', 'INV_GRID_ELEMENT');
INSERT INTO CS_SECURITY.OBJECT_PRIVILEGES VALUES ('INV_BROWSE_ALL', 'SELECT', '&&SchemaName', 'INV_GRID_FILL_TEMPLATE');
INSERT INTO CS_SECURITY.OBJECT_PRIVILEGES VALUES ('INV_BROWSE_ALL', 'SELECT', '&&SchemaName', 'INV_GRID_FORMAT'); 
INSERT INTO CS_SECURITY.OBJECT_PRIVILEGES VALUES ('INV_BROWSE_ALL', 'SELECT', '&&SchemaName', 'INV_GRID_POSITION');
INSERT INTO CS_SECURITY.OBJECT_PRIVILEGES VALUES ('INV_BROWSE_ALL', 'SELECT', '&&SchemaName', 'INV_GRID_STORAGE');
INSERT INTO CS_SECURITY.OBJECT_PRIVILEGES VALUES ('INV_BROWSE_ALL', 'SELECT', '&&SchemaName', 'INV_PHYSICAL_PLATE');
INSERT INTO CS_SECURITY.OBJECT_PRIVILEGES VALUES ('INV_BROWSE_ALL', 'SELECT', '&&SchemaName', 'INV_PLATES');
INSERT INTO CS_SECURITY.OBJECT_PRIVILEGES VALUES ('INV_BROWSE_ALL', 'SELECT', '&&SchemaName', 'INV_PLATE_ACTIONS');
INSERT INTO CS_SECURITY.OBJECT_PRIVILEGES VALUES ('INV_BROWSE_ALL', 'SELECT', '&&SchemaName', 'INV_PLATE_FORMAT');
INSERT INTO CS_SECURITY.OBJECT_PRIVILEGES VALUES ('INV_BROWSE_ALL', 'SELECT', '&&SchemaName', 'INV_PLATE_HISTORY');
INSERT INTO CS_SECURITY.OBJECT_PRIVILEGES VALUES ('INV_BROWSE_ALL', 'SELECT', '&&SchemaName', 'INV_PLATE_TYPES');
INSERT INTO CS_SECURITY.OBJECT_PRIVILEGES VALUES ('INV_BROWSE_ALL', 'SELECT', '&&SchemaName', 'INV_VW_ENUMERATED_VALUES');
INSERT INTO CS_SECURITY.OBJECT_PRIVILEGES VALUES ('INV_BROWSE_ALL', 'SELECT', '&&SchemaName', 'INV_VW_GRID_LOCATION');
INSERT INTO CS_SECURITY.OBJECT_PRIVILEGES VALUES ('INV_BROWSE_ALL', 'SELECT', '&&SchemaName', 'INV_VW_GRID_LOCATION_LITE');
INSERT INTO CS_SECURITY.OBJECT_PRIVILEGES VALUES ('INV_BROWSE_ALL', 'SELECT', '&&SchemaName', 'INV_VW_GRID_LOCATION_PARENT');
INSERT INTO CS_SECURITY.OBJECT_PRIVILEGES VALUES ('INV_BROWSE_ALL', 'SELECT', '&&SchemaName', 'INV_VW_NONGRID_LOCATIONS');
INSERT INTO CS_SECURITY.OBJECT_PRIVILEGES VALUES ('INV_BROWSE_ALL', 'SELECT', '&&SchemaName', 'INV_VW_PHYSICAL_PLATE');
INSERT INTO CS_SECURITY.OBJECT_PRIVILEGES VALUES ('INV_BROWSE_ALL', 'SELECT', '&&SchemaName', 'INV_VW_PLATE');
INSERT INTO CS_SECURITY.OBJECT_PRIVILEGES VALUES ('INV_BROWSE_ALL', 'SELECT', '&&SchemaName', 'INV_VW_PLATE_FORMAT');
INSERT INTO CS_SECURITY.OBJECT_PRIVILEGES VALUES ('INV_BROWSE_ALL', 'SELECT', '&&SchemaName', 'INV_VW_PLATE_GRID_LOCATIONS');
INSERT INTO CS_SECURITY.OBJECT_PRIVILEGES VALUES ('INV_BROWSE_ALL', 'SELECT', '&&SchemaName', 'INV_VW_PLATE_HISTORY');
INSERT INTO CS_SECURITY.OBJECT_PRIVILEGES VALUES ('INV_BROWSE_ALL', 'SELECT', '&&SchemaName', 'INV_VW_PLATE_LOCATIONS');
INSERT INTO CS_SECURITY.OBJECT_PRIVILEGES VALUES ('INV_BROWSE_ALL', 'SELECT', '&&SchemaName', 'INV_VW_WELL');
INSERT INTO CS_SECURITY.OBJECT_PRIVILEGES VALUES ('INV_BROWSE_ALL', 'SELECT', '&&SchemaName', 'INV_VW_WELL_FORMAT');
INSERT INTO CS_SECURITY.OBJECT_PRIVILEGES VALUES ('INV_BROWSE_ALL', 'SELECT', '&&SchemaName', 'INV_WELLS');
INSERT INTO CS_SECURITY.OBJECT_PRIVILEGES VALUES ('INV_BROWSE_ALL', 'SELECT', '&&SchemaName', 'INV_XSLTS');
INSERT INTO CS_SECURITY.OBJECT_PRIVILEGES VALUES ('INV_BROWSE_ALL', 'SELECT', '&&SchemaName', 'INV_XMLDOCS');
INSERT INTO CS_SECURITY.OBJECT_PRIVILEGES VALUES ('INV_BROWSE_ALL', 'SELECT', '&&SchemaName', 'INV_SOLVENTS');
INSERT INTO CS_SECURITY.OBJECT_PRIVILEGES VALUES ('INV_BROWSE_ALL', 'SELECT', '&&SchemaName', 'INV_XMLDOC_TYPES');
INSERT INTO CS_SECURITY.OBJECT_PRIVILEGES VALUES ('INV_BROWSE_ALL', 'SELECT', '&&SchemaName', 'INV_UNIT_CONVERSION');
INSERT INTO CS_SECURITY.OBJECT_PRIVILEGES VALUES ('INV_BROWSE_ALL', 'SELECT', '&&SchemaName', 'INV_PLATE_PARENT');
INSERT INTO CS_SECURITY.OBJECT_PRIVILEGES VALUES ('INV_BROWSE_ALL', 'SELECT', '&&SchemaName', 'INV_WELL_PARENT');
INSERT INTO CS_SECURITY.OBJECT_PRIVILEGES VALUES ('INV_BROWSE_ALL', 'SELECT', '&&SchemaName', 'INV_COUNTRY');
INSERT INTO CS_SECURITY.OBJECT_PRIVILEGES VALUES ('INV_BROWSE_ALL', 'SELECT', '&&SchemaName', 'INV_STATES');
INSERT INTO CS_SECURITY.OBJECT_PRIVILEGES VALUES ('INV_BROWSE_ALL', 'SELECT', '&&SchemaName', 'INV_ADDRESS');
INSERT INTO CS_SECURITY.OBJECT_PRIVILEGES VALUES ('INV_BROWSE_ALL', 'SELECT', '&&SchemaName', 'INV_REQUEST_TYPES');
INSERT INTO CS_SECURITY.OBJECT_PRIVILEGES VALUES ('INV_BROWSE_ALL', 'SELECT', '&&SchemaName', 'INV_REQUEST_STATUS');
INSERT INTO CS_SECURITY.OBJECT_PRIVILEGES VALUES ('INV_BROWSE_ALL', 'SELECT', '&&SchemaName', 'INV_REQUEST_SAMPLES');
INSERT INTO CS_SECURITY.OBJECT_PRIVILEGES VALUES ('INV_BROWSE_ALL', 'SELECT', '&&SchemaName', 'INV_ORDER_STATUS');
INSERT INTO CS_SECURITY.OBJECT_PRIVILEGES VALUES ('INV_BROWSE_ALL', 'SELECT', '&&SchemaName', 'INV_ORDERS');
INSERT INTO CS_SECURITY.OBJECT_PRIVILEGES VALUES ('INV_BROWSE_ALL', 'SELECT', '&&SchemaName', 'INV_ORDER_CONTAINERS');
INSERT INTO CS_SECURITY.OBJECT_PRIVILEGES VALUES ('INV_BROWSE_ALL', 'SELECT', '&&SchemaName', 'INV_CONTAINER_CHECKIN_DETAILS');
INSERT INTO CS_SECURITY.OBJECT_PRIVILEGES VALUES ('INV_BROWSE_ALL', 'SELECT', '&&SchemaName', 'INV_WELL_COMPOUNDS');
INSERT INTO CS_SECURITY.OBJECT_PRIVILEGES VALUES ('INV_BROWSE_ALL', 'SELECT', '&&SchemaName', 'INV_VW_WELL_FLAT');
INSERT INTO CS_SECURITY.OBJECT_PRIVILEGES VALUES ('INV_BROWSE_ALL', 'SELECT', '&&SchemaName', 'INV_REPORTPARAMS');

INSERT INTO CS_SECURITY.OBJECT_PRIVILEGES VALUES ('INV_BROWSE_ALL', 'EXECUTE', '&&SchemaName', 'GETNUMBEROFCOMPOUNDWELLS');
INSERT INTO CS_SECURITY.OBJECT_PRIVILEGES VALUES ('INV_BROWSE_ALL', 'EXECUTE', '&&SchemaName', 'ISGRIDLOCATION');
INSERT INTO CS_SECURITY.OBJECT_PRIVILEGES VALUES ('INV_BROWSE_ALL', 'EXECUTE', '&&SchemaName', 'ISFROZENLOCATION');
INSERT INTO CS_SECURITY.OBJECT_PRIVILEGES VALUES ('INV_BROWSE_ALL', 'EXECUTE', '&&SchemaName', 'ISPLATETYPEALLOWED');

-- INV_CHANGEQTY_CONTAINER PRIVS
INSERT INTO CS_SECURITY.OBJECT_PRIVILEGES VALUES ('INV_CHANGEQTY_CONTAINER', 'EXECUTE', '&&SchemaName', 'UPDATECONTAINERQTYREMAINING');

-- INV_CHANGE_STATUS_CONTAINER PRIVS
INSERT INTO CS_SECURITY.OBJECT_PRIVILEGES VALUES ('INV_CHANGE_STATUS_CONTAINER', 'EXECUTE', '&&SchemaName', 'UPDATECONTAINER');

-- INV_CHECKOUT_CONTAINER PRIVS
INSERT INTO CS_SECURITY.OBJECT_PRIVILEGES VALUES ('INV_CHECKOUT_CONTAINER', 'EXECUTE', '&&SchemaName', 'CHECKOUTCONTAINER');

-- INV_CHECKIN_CONTAINER PRIVS
INSERT INTO CS_SECURITY.OBJECT_PRIVILEGES VALUES ('INV_CHECKIN_CONTAINER', 'EXECUTE', '&&SchemaName', 'CHECKOUTCONTAINER');
INSERT INTO CS_SECURITY.OBJECT_PRIVILEGES VALUES ('INV_CHECKIN_CONTAINER', 'EXECUTE', '&&SchemaName', 'INSERTCHECKINDETAILS');

-- INV_RESERVE_CONTAINER PRIVS

-- INV_RETIRE_CONTAINER PRIVS
INSERT INTO CS_SECURITY.OBJECT_PRIVILEGES VALUES ('INV_RETIRE_CONTAINER', 'EXECUTE', '&&SchemaName', 'RETIRECONTAINER');

-- INV_PRINT_LABEL_CONTAINER
INSERT INTO CS_SECURITY.OBJECT_PRIVILEGES VALUES ('INV_PRINT_LABEL_CONTAINER', 'EXECUTE', '&&SchemaName', 'REPORTPARAMS');

-- INV_PRINT_REPORT
INSERT INTO CS_SECURITY.OBJECT_PRIVILEGES VALUES ('INV_PRINT_REPORT', 'EXECUTE', '&&SchemaName', 'REPORTPARAMS');

-- INV_CREATE_LOCATION PRIVS
INSERT INTO CS_SECURITY.OBJECT_PRIVILEGES VALUES ('INV_CREATE_LOCATION', 'EXECUTE', '&&SchemaName', 'CREATELOCATION');
INSERT INTO CS_SECURITY.OBJECT_PRIVILEGES VALUES ('INV_CREATE_LOCATION', 'EXECUTE', '&&SchemaName', 'EXCLUDE_CONTAINERTYPES');
INSERT INTO CS_SECURITY.OBJECT_PRIVILEGES VALUES ('INV_CREATE_LOCATION', 'EXECUTE', '&&SchemaName', 'PLATESETTINGS');
INSERT INTO CS_SECURITY.OBJECT_PRIVILEGES VALUES ('INV_CREATE_LOCATION', 'EXECUTE', '&&SchemaName', 'UPDATEADDRESS');
INSERT INTO CS_SECURITY.OBJECT_PRIVILEGES VALUES ('INV_CREATE_LOCATION', 'EXECUTE', '&&SchemaName', 'GETPKCOLUMN');
INSERT INTO CS_SECURITY.OBJECT_PRIVILEGES VALUES ('INV_CREATE_LOCATION', 'EXECUTE', '&&SchemaName', 'UPDATETABLE');
INSERT INTO CS_SECURITY.OBJECT_PRIVILEGES VALUES ('INV_CREATE_LOCATION', 'EXECUTE', '&&SchemaName', 'CREATETABLEROW');
INSERT INTO CS_SECURITY.OBJECT_PRIVILEGES VALUES ('INV_CREATE_LOCATION', 'EXECUTE', '&&SchemaName', 'DELETETABLEROW');

-- INV_EDIT_LOCATION PRIVS
INSERT INTO CS_SECURITY.OBJECT_PRIVILEGES VALUES ('INV_EDIT_LOCATION', 'EXECUTE', '&&SchemaName', 'UPDATELOCATION');
INSERT INTO CS_SECURITY.OBJECT_PRIVILEGES VALUES ('INV_EDIT_LOCATION', 'EXECUTE', '&&SchemaName', 'EXCLUDE_CONTAINERTYPES');
INSERT INTO CS_SECURITY.OBJECT_PRIVILEGES VALUES ('INV_EDIT_LOCATION', 'EXECUTE', '&&SchemaName', 'UPDATEADDRESS');

-- INV_MOVE_LOCATION PRIVS
INSERT INTO CS_SECURITY.OBJECT_PRIVILEGES VALUES ('INV_MOVE_LOCATION', 'EXECUTE', '&&SchemaName', 'MOVELOCATION');

-- INV_DELETE_LOCATION PRIVS
INSERT INTO CS_SECURITY.OBJECT_PRIVILEGES VALUES ('INV_DELETE_LOCATION', 'EXECUTE', '&&SchemaName', 'DELETELOCATION');

-- INV_CREATE_CONTAINER PRIVS
INSERT INTO CS_SECURITY.OBJECT_PRIVILEGES VALUES ('INV_CREATE_CONTAINER', 'EXECUTE', '&&SchemaName', 'CREATECONTAINER');
INSERT INTO CS_SECURITY.OBJECT_PRIVILEGES VALUES ('INV_CREATE_CONTAINER', 'EXECUTE', '&&SchemaName', 'COPYCONTAINER');
INSERT INTO CS_SECURITY.OBJECT_PRIVILEGES VALUES ('INV_CREATE_CONTAINER', 'EXECUTE', '&&SchemaName', 'UPDATECONTAINER');
INSERT INTO CS_SECURITY.OBJECT_PRIVILEGES VALUES ('INV_CREATE_CONTAINER', 'EXECUTE', '&&SchemaName', 'UPDATEADDRESS');

-- INV_EDIT_CONTAINER PRIVS
INSERT INTO CS_SECURITY.OBJECT_PRIVILEGES VALUES ('INV_EDIT_CONTAINER', 'EXECUTE', '&&SchemaName', 'UPDATEALLCONTAINERFIELDS');

-- INV_MOVE_CONTAINER PRIVS
INSERT INTO CS_SECURITY.OBJECT_PRIVILEGES VALUES ('INV_MOVE_CONTAINER', 'EXECUTE', '&&SchemaName', 'MOVECONTAINER');

-- INV_DELETE_CONTAINER PRIVS
INSERT INTO CS_SECURITY.OBJECT_PRIVILEGES VALUES ('INV_DELETE_CONTAINER', 'EXECUTE', '&&SchemaName', 'DELETECONTAINER'); 
INSERT INTO CS_SECURITY.OBJECT_PRIVILEGES VALUES ('INV_DELETE_CONTAINER', 'EXECUTE', '&&SchemaName', 'EMPTYTRASH'); 

-- INV_MANAGE_LINKS PRIVS
INSERT INTO CS_SECURITY.OBJECT_PRIVILEGES VALUES ('INV_MANAGE_LINKS', 'EXECUTE', '&&SchemaName', 'LINKS');

-- INV_MANAGE_SUBSTANCES PRIVS
INSERT INTO CS_SECURITY.OBJECT_PRIVILEGES VALUES ('INV_MANAGE_SUBSTANCES', 'EXECUTE', '&&SchemaName', 'GETCOMPOUNDIDFROMNAME');
INSERT INTO CS_SECURITY.OBJECT_PRIVILEGES VALUES ('INV_MANAGE_SUBSTANCES', 'EXECUTE', '&&SchemaName', 'COMPOUNDS');
INSERT INTO CS_SECURITY.OBJECT_PRIVILEGES VALUES ('INV_MANAGE_SUBSTANCES', 'EXECUTE', '&&SchemaName', 'GETCOMPOUNDID');
INSERT INTO CS_SECURITY.OBJECT_PRIVILEGES VALUES ('INV_MANAGE_SUBSTANCES', 'EXECUTE', '&&SchemaName', 'ISDUPLICATECOMPOUND');
INSERT INTO CS_SECURITY.OBJECT_PRIVILEGES VALUES ('INV_MANAGE_SUBSTANCES', 'EXECUTE', '&&SchemaName', 'SUBSTANCENAMEEXISTS');
INSERT INTO CS_SECURITY.OBJECT_PRIVILEGES VALUES ('INV_MANAGE_SUBSTANCES', 'INSERT', '&&SchemaName', 'INV_COMPOUNDS');
INSERT INTO CS_SECURITY.OBJECT_PRIVILEGES VALUES ('INV_MANAGE_SUBSTANCES', 'UPDATE', '&&SchemaName', 'INV_COMPOUNDS');
INSERT INTO CS_SECURITY.OBJECT_PRIVILEGES VALUES ('INV_MANAGE_SUBSTANCES', 'DELETE', '&&SchemaName', 'INV_COMPOUNDS');

-- INV_VIEW_AUDIT_TRAIL PRIVS
INSERT INTO CS_SECURITY.OBJECT_PRIVILEGES VALUES ('INV_VIEW_AUDIT_TRAIL', 'SELECT', '&&SchemaName', 'AUDIT_COLUMN');
INSERT INTO CS_SECURITY.OBJECT_PRIVILEGES VALUES ('INV_VIEW_AUDIT_TRAIL', 'SELECT', '&&SchemaName', 'AUDIT_COMPOUND');
INSERT INTO CS_SECURITY.OBJECT_PRIVILEGES VALUES ('INV_VIEW_AUDIT_TRAIL', 'SELECT', '&&SchemaName', 'AUDIT_DELETE');
INSERT INTO CS_SECURITY.OBJECT_PRIVILEGES VALUES ('INV_VIEW_AUDIT_TRAIL', 'SELECT', '&&SchemaName', 'AUDIT_ROW'); 
INSERT INTO CS_SECURITY.OBJECT_PRIVILEGES VALUES ('INV_VIEW_AUDIT_TRAIL', 'SELECT', '&&SchemaName', 'INV_VW_AUDIT_AGGREGATE');

-- INV_UPDATE_LOCATION_CONTENTS

-- INV_RECTIFY_LOCATION_CONTENTS

-- INV_ORDER_CONTAINER PRIVS
INSERT INTO CS_SECURITY.OBJECT_PRIVILEGES VALUES ('INV_ORDER_CONTAINER', 'EXECUTE', '&&SchemaName', 'ORDERCONTAINER');
INSERT INTO CS_SECURITY.OBJECT_PRIVILEGES VALUES ('INV_ORDER_CONTAINER', 'SELECT', '&&SchemaName', 'INV_CONTAINER_ORDER_REASON');
INSERT INTO CS_SECURITY.OBJECT_PRIVILEGES VALUES ('INV_ORDER_CONTAINER', 'SELECT', '&&SchemaName', 'INV_CONTAINER_ORDER');

-- INV_REORDER_CONTAINER PRIVS
INSERT INTO CS_SECURITY.OBJECT_PRIVILEGES VALUES ('INV_REORDER_CONTAINER', 'EXECUTE', '&&SchemaName', 'REORDERCONTAINER');
INSERT INTO CS_SECURITY.OBJECT_PRIVILEGES VALUES ('INV_REORDER_CONTAINER', 'SELECT', '&&SchemaName', 'INV_CONTAINER_ORDER');
INSERT INTO CS_SECURITY.OBJECT_PRIVILEGES VALUES ('INV_REORDER_CONTAINER', 'SELECT', '&&SchemaName', 'INV_CONTAINER_ORDER_REASON');

-- INV_CERTIFY_CONTAINER PRIVS
INSERT INTO CS_SECURITY.OBJECT_PRIVILEGES VALUES ('INV_CERTIFY_CONTAINER', 'EXECUTE', '&&SchemaName', 'CERTIFYCONTAINER');

-- INV_APPROVE_CONTAINER PRIVS
INSERT INTO CS_SECURITY.OBJECT_PRIVILEGES VALUES ('INV_APPROVE_CONTAINER', 'EXECUTE', '&&SchemaName', 'APPROVALS');

-- INV_EDIT_EHS_DATA
INSERT INTO CS_SECURITY.OBJECT_PRIVILEGES VALUES ('INV_EDIT_EHS_DATA', 'EXECUTE', '&&SchemaName', 'INSERTHAZMATDATA');
INSERT INTO CS_SECURITY.OBJECT_PRIVILEGES VALUES ('INV_EDIT_EHS_DATA', 'EXECUTE', '&&SchemaName', 'UPDATEHAZMATDATA');
INSERT INTO CS_SECURITY.OBJECT_PRIVILEGES VALUES ('INV_EDIT_EHS_DATA', 'EXECUTE', '&&SchemaName', 'INSERTSUBSTANCEHAZMATDATA');
INSERT INTO CS_SECURITY.OBJECT_PRIVILEGES VALUES ('INV_EDIT_EHS_DATA', 'EXECUTE', '&&SchemaName', 'UPDATESUBSTANCEHAZMATDATA');

-- INV_CREATE_PLATE
INSERT INTO CS_SECURITY.OBJECT_PRIVILEGES VALUES ('INV_CREATE_PLATE', 'EXECUTE', '&&SchemaName', 'COPYPLATE');
INSERT INTO CS_SECURITY.OBJECT_PRIVILEGES VALUES ('INV_CREATE_PLATE', 'EXECUTE', '&&SchemaName', 'CREATEPLATEXML');

-- INV_MOVE_PLATE
INSERT INTO CS_SECURITY.OBJECT_PRIVILEGES VALUES ('INV_MOVE_PLATE', 'EXECUTE', '&&SchemaName', 'MOVEPLATE');
INSERT INTO CS_SECURITY.OBJECT_PRIVILEGES VALUES ('INV_MOVE_PLATE', 'EXECUTE', '&&SchemaName', 'MOVEPLATES');

-- INV_EDIT_PLATE
INSERT INTO CS_SECURITY.OBJECT_PRIVILEGES VALUES ('INV_CREATE_PLATE', 'EXECUTE', '&&SchemaName', 'UPDATEPLATEATTRIBUTES');

-- INV_RETIRE_PLATE
INSERT INTO CS_SECURITY.OBJECT_PRIVILEGES VALUES ('INV_RETIRE_PLATE', 'EXECUTE', '&&SchemaName', 'RETIREPLATE');

-- INV_REQUEST_PLATE

-- INV_DILUTE_PLATE
INSERT INTO CS_SECURITY.OBJECT_PRIVILEGES VALUES ('INV_DILUTE_PLATE', 'EXECUTE', '&&SchemaName', 'SOLVATEPLATES');

-- INV_DELETE_PLATE
INSERT INTO CS_SECURITY.OBJECT_PRIVILEGES VALUES ('INV_DELETE_PLATE', 'EXECUTE', '&&SchemaName', 'DELETEPLATE');
INSERT INTO CS_SECURITY.OBJECT_PRIVILEGES VALUES ('INV_DELETE_PLATE', 'EXECUTE', '&&SchemaName', 'EMPTYTRASH');

-- INV_PRINT_LABEL_PLATE
INSERT INTO CS_SECURITY.OBJECT_PRIVILEGES VALUES ('INV_PRINT_LABEL_PLATE', 'EXECUTE', '&&SchemaName', 'REPORTPARAMS');

-- INV_MANAGE_PLATE_MAPS
INSERT INTO CS_SECURITY.OBJECT_PRIVILEGES VALUES ('INV_MANAGE_PLATE_MAPS', 'EXECUTE', '&&SchemaName', 'CREATEPLATEMAP');
Commit;

Connect &&schemaName/&&schemaPass@&&serverName

--- Grant all object permissiONs to CS_SECURITY   
-- tables
GRANT select on "&&SchemaName".GLOBALS to PUBLIC;
GRANT SELECT ON "&&SchemaName".INV_ALLOWED_CTYPES TO CS_SECURITY WITH GRANT OPTION;
GRANT SELECT ON "&&SchemaName".INV_ALLOWED_LTYPES TO CS_SECURITY WITH GRANT OPTION;
GRANT SELECT ON "&&SchemaName".INV_ALLOWED_PTYPES TO CS_SECURITY WITH GRANT OPTION;
GRANT SELECT ON "&&SchemaName".INV_BARCODE_DESC TO CS_SECURITY WITH GRANT OPTION;
GRANT SELECT ON "&&SchemaName".INV_COMPOUNDS TO CS_SECURITY WITH GRANT OPTION;
GRANT SELECT ON "&&SchemaName".INV_CONTAINERS TO CS_SECURITY WITH GRANT OPTION;
GRANT SELECT ON "&&SchemaName".INV_CONTAINER_STATUS TO CS_SECURITY WITH GRANT OPTION;
GRANT SELECT ON "&&SchemaName".INV_CONTAINER_TYPES TO CS_SECURITY WITH GRANT OPTION;
GRANT SELECT ON "&&SchemaName".INV_ENUMERATION TO CS_SECURITY WITH GRANT OPTION;
GRANT SELECT ON "&&SchemaName".INV_ENUMERATION_SET TO CS_SECURITY WITH GRANT OPTION;
GRANT SELECT ON "&&SchemaName".INV_ENUM_VALUES TO CS_SECURITY WITH GRANT OPTION;
GRANT SELECT ON "&&SchemaName".INV_ESET_TYPE TO CS_SECURITY WITH GRANT OPTION;
GRANT SELECT ON "&&SchemaName".INV_GRID_ELEMENT TO CS_SECURITY WITH GRANT OPTION;
GRANT SELECT ON "&&SchemaName".INV_GRID_FILL_TEMPLATE TO CS_SECURITY WITH GRANT OPTION;
GRANT SELECT ON "&&SchemaName".INV_GRID_FORMAT TO CS_SECURITY WITH GRANT OPTION;
GRANT SELECT ON "&&SchemaName".INV_GRID_POSITION TO CS_SECURITY WITH GRANT OPTION;
GRANT SELECT ON "&&SchemaName".INV_GRID_STORAGE TO CS_SECURITY WITH GRANT OPTION;
GRANT SELECT ON "&&SchemaName".INV_LOCATIONS TO CS_SECURITY WITH GRANT OPTION;
GRANT SELECT ON "&&SchemaName".INV_LOCATION_TYPES TO CS_SECURITY WITH GRANT OPTION;
GRANT SELECT ON "&&SchemaName".INV_PHYSICAL_PLATE TO CS_SECURITY WITH GRANT OPTION;
GRANT SELECT ON "&&SchemaName".INV_PLATES TO CS_SECURITY WITH GRANT OPTION;
GRANT SELECT ON "&&SchemaName".INV_PLATE_ACTIONS TO CS_SECURITY WITH GRANT OPTION;
GRANT SELECT ON "&&SchemaName".INV_PLATE_FORMAT TO CS_SECURITY WITH GRANT OPTION;
GRANT SELECT ON "&&SchemaName".INV_PLATE_HISTORY TO CS_SECURITY WITH GRANT OPTION;
GRANT SELECT ON "&&SchemaName".INV_PLATE_TYPES TO CS_SECURITY WITH GRANT OPTION;
GRANT SELECT ON "&&SchemaName".INV_RESERVATION_TYPES TO CS_SECURITY WITH GRANT OPTION;
GRANT SELECT ON "&&SchemaName".INV_SUPPLIERS TO CS_SECURITY WITH GRANT OPTION;
GRANT SELECT ON "&&SchemaName".INV_SYNONYMS TO CS_SECURITY WITH GRANT OPTION;
GRANT SELECT ON "&&SchemaName".INV_UNITS TO CS_SECURITY WITH GRANT OPTION;
GRANT SELECT ON "&&SchemaName".INV_UNIT_TYPES TO CS_SECURITY WITH GRANT OPTION;
GRANT SELECT ON "&&SchemaName".INV_URL TO CS_SECURITY WITH GRANT OPTION;
GRANT SELECT ON "&&SchemaName".INV_COUNTRY TO CS_SECURITY WITH GRANT OPTION;
GRANT SELECT ON "&&SchemaName".INV_STATES TO CS_SECURITY WITH GRANT OPTION;
GRANT SELECT ON "&&SchemaName".INV_ADDRESS TO CS_SECURITY WITH GRANT OPTION;
GRANT SELECT ON "&&SchemaName".INV_REQUEST_TYPES TO CS_SECURITY WITH GRANT OPTION;
GRANT SELECT ON "&&SchemaName".INV_REQUEST_STATUS TO CS_SECURITY WITH GRANT OPTION;
GRANT SELECT ON "&&SchemaName".INV_REQUEST_SAMPLES TO CS_SECURITY WITH GRANT OPTION;
GRANT SELECT ON "&&SchemaName".INV_ORDER_STATUS TO CS_SECURITY WITH GRANT OPTION;
GRANT SELECT ON "&&SchemaName".INV_ORDERS TO CS_SECURITY WITH GRANT OPTION;
GRANT SELECT ON "&&SchemaName".INV_ORDER_CONTAINERS TO CS_SECURITY WITH GRANT OPTION;
GRANT SELECT ON "&&SchemaName".INV_CONTAINER_CHECKIN_DETAILS TO CS_SECURITY WITH GRANT OPTION;
GRANT SELECT ON "&&SchemaName".INV_REPORTPARAMS TO CS_SECURITY WITH GRANT OPTION;

GRANT SELECT ON "&&SchemaName".INV_VW_ENUMERATED_VALUES TO CS_SECURITY WITH GRANT OPTION;
GRANT SELECT ON "&&SchemaName".INV_VW_GRID_LOCATION TO CS_SECURITY WITH GRANT OPTION;
GRANT SELECT ON "&&SchemaName".INV_VW_GRID_LOCATION_LITE TO CS_SECURITY WITH GRANT OPTION;
GRANT SELECT ON "&&SchemaName".INV_VW_GRID_LOCATION_PARENT TO CS_SECURITY WITH GRANT OPTION;
GRANT SELECT ON "&&SchemaName".INV_VW_NONGRID_LOCATIONS TO CS_SECURITY WITH GRANT OPTION;
GRANT SELECT ON "&&SchemaName".INV_VW_PHYSICAL_PLATE TO CS_SECURITY WITH GRANT OPTION;
GRANT SELECT ON "&&SchemaName".INV_VW_PLATE TO CS_SECURITY WITH GRANT OPTION;
GRANT SELECT ON "&&SchemaName".INV_VW_PLATE_FORMAT TO CS_SECURITY WITH GRANT OPTION;
GRANT SELECT ON "&&SchemaName".INV_VW_PLATE_GRID_LOCATIONS TO CS_SECURITY WITH GRANT OPTION;
GRANT SELECT ON "&&SchemaName".INV_VW_PLATE_HISTORY TO CS_SECURITY WITH GRANT OPTION;
GRANT SELECT ON "&&SchemaName".INV_VW_PLATE_LOCATIONS TO CS_SECURITY WITH GRANT OPTION;
GRANT SELECT ON "&&SchemaName".INV_VW_WELL TO CS_SECURITY WITH GRANT OPTION;
GRANT SELECT ON "&&SchemaName".INV_VW_WELL_FORMAT TO CS_SECURITY WITH GRANT OPTION;
GRANT SELECT ON "&&SchemaName".INV_VW_WELL_FLAT TO CS_SECURITY WITH GRANT OPTION;
GRANT SELECT ON "&&SchemaName".INV_WELLS TO CS_SECURITY WITH GRANT OPTION;
GRANT SELECT ON "&&SchemaName".INV_EXCLUDE_CONTAINER_TYPES TO CS_SECURITY WITH GRANT OPTION;
GRANT SELECT ON "&&SchemaName".INV_PHYSICAL_STATE TO CS_SECURITY WITH GRANT OPTION;
GRANT SELECT ON "&&SchemaName".INV_PICKLISTS TO CS_SECURITY WITH GRANT OPTION;
GRANT SELECT ON "&&SchemaName".INV_REQUESTS TO CS_SECURITY WITH GRANT OPTION;
GRANT SELECT ON "&&SchemaName".AUDIT_COLUMN TO CS_SECURITY WITH GRANT OPTION;
GRANT SELECT ON "&&SchemaName".AUDIT_COMPOUND TO CS_SECURITY WITH GRANT OPTION;
GRANT SELECT ON "&&SchemaName".AUDIT_DELETE TO CS_SECURITY WITH GRANT OPTION;
GRANT SELECT ON "&&SchemaName".AUDIT_ROW TO CS_SECURITY WITH GRANT OPTION; 
GRANT SELECT ON "&&SchemaName".INV_VW_AUDIT_AGGREGATE TO CS_SECURITY WITH GRANT OPTION;
GRANT INSERT ON "&&SchemaName".INV_COMPOUNDS TO CS_SECURITY WITH GRANT OPTION;
GRANT UPDATE ON "&&SchemaName".INV_COMPOUNDS TO CS_SECURITY WITH GRANT OPTION;
GRANT DELETE ON "&&SchemaName".INV_COMPOUNDS TO CS_SECURITY WITH GRANT OPTION;
GRANT SELECT ON "&&SchemaName".INV_REPORTS TO CS_SECURITY WITH GRANT OPTION;
GRANT SELECT ON "&&SchemaName".INV_REPORTTYPES TO CS_SECURITY WITH GRANT OPTION;
GRANT SELECT ON "&&SchemaName".INV_REPORTFORMATS TO CS_SECURITY WITH GRANT OPTION;
GRANT SELECT ON "&&SchemaName".INV_OWNERS TO CS_SECURITY WITH GRANT OPTION;
GRANT INSERT ON "&&SchemaName".INV_USER_PROPERTIES TO CS_SECURITY WITH GRANT OPTION;
GRANT SELECT ON "&&SchemaName".INV_USER_PROPERTIES TO CS_SECURITY WITH GRANT OPTION;
GRANT UPDATE ON "&&SchemaName".INV_USER_PROPERTIES TO CS_SECURITY WITH GRANT OPTION;
GRANT SELECT ON "&&SchemaName".INV_PROJECT_JOB_INFO TO CS_SECURITY WITH GRANT OPTION;
GRANT SELECT ON "&&SchemaName".INV_CONTAINER_ORDER TO CS_SECURITY WITH GRANT OPTION;
GRANT SELECT ON "&&SchemaName".INV_CONTAINER_ORDER_REASON TO CS_SECURITY WITH GRANT OPTION;
GRANT SELECT ON "&&SchemaName".INV_XSLTS TO CS_SECURITY WITH GRANT OPTION;
GRANT SELECT ON "&&SchemaName".INV_XMLDOCS TO CS_SECURITY WITH GRANT OPTION;
GRANT SELECT ON "&&SchemaName".INV_XMLDOC_TYPES TO CS_SECURITY WITH GRANT OPTION;
GRANT SELECT ON "&&SchemaName".INV_SOLVENTS TO CS_SECURITY WITH GRANT OPTION;
GRANT SELECT ON "&&SchemaName".INV_UNIT_CONVERSION TO CS_SECURITY WITH GRANT OPTION;
GRANT SELECT ON "&&SchemaName".INV_WELL_PARENT TO CS_SECURITY WITH GRANT OPTION;
GRANT SELECT ON "&&SchemaName".INV_PLATE_PARENT TO CS_SECURITY WITH GRANT OPTION;
GRANT SELECT ON "&&SchemaName".INV_WELL_COMPOUNDS TO CS_SECURITY WITH GRANT OPTION;

--these are in alpha order as of 8.0
--functions
GRANT EXECUTE ON "&&SchemaName".ASSIGNLOCATIONTOGRID TO CS_SECURITY WITH GRANT OPTION;
GRANT EXECUTE ON "&&SchemaName".ASSIGNPLATETYPESTOLOCATION TO CS_SECURITY WITH GRANT OPTION;
GRANT EXECUTE ON "&&SchemaName".CHECKOUTCONTAINER TO CS_SECURITY WITH GRANT OPTION;
GRANT EXECUTE ON "&&SchemaName".COPYCONTAINER TO CS_SECURITY WITH GRANT OPTION;
GRANT EXECUTE ON "&&SchemaName".COPYPLATE to CS_SECURITY WITH GRANT OPTION;
GRANT EXECUTE ON "&&SchemaName".CREATECONTAINER TO CS_SECURITY WITH GRANT OPTION;
GRANT EXECUTE ON "&&SchemaName".CREATEGRIDFORMAT TO CS_SECURITY WITH GRANT OPTION;
GRANT EXECUTE ON "&&SchemaName".CREATELOCATION TO CS_SECURITY WITH GRANT OPTION;
GRANT EXECUTE ON "&&SchemaName".CREATEPHYSPLATETYPE TO CS_SECURITY WITH GRANT OPTION;
GRANT EXECUTE ON "&&SchemaName".CREATEPLATEFORMAT TO CS_SECURITY WITH GRANT OPTION;
GRANT EXECUTE ON "&&SchemaName".CREATEPLATEMAP to CS_SECURITY WITH GRANT OPTION;
GRANT EXECUTE ON "&&SchemaName".CREATEPLATEXML to CS_SECURITY WITH GRANT OPTION;
GRANT EXECUTE ON "&&SchemaName".CREATETABLEROW to CS_SECURITY WITH GRANT OPTION;
GRANT EXECUTE ON "&&SchemaName".DELETECONTAINER TO CS_SECURITY WITH GRANT OPTION;
GRANT EXECUTE ON "&&SchemaName".DELETELOCATION TO CS_SECURITY WITH GRANT OPTION;
GRANT EXECUTE ON "&&SchemaName".DELETELOCATIONGRID TO CS_SECURITY WITH GRANT OPTION;
GRANT EXECUTE ON "&&SchemaName".DELETEPLATE to CS_SECURITY WITH GRANT OPTION;
GRANT EXECUTE ON "&&SchemaName".DELETEPLATEFORMAT to CS_SECURITY WITH GRANT OPTION;
GRANT EXECUTE ON "&&SchemaName".DELETEPLATES to CS_SECURITY WITH GRANT OPTION;
GRANT EXECUTE ON "&&SchemaName".DELETETABLEROW TO cs_SECURITY WITH GRANT OPTION;
GRANT EXECUTE ON "&&SchemaName".EMPTYTRASH to CS_SECURITY WITH GRANT OPTION;
GRANT EXECUTE ON "&&SchemaName".ENABLEGRIDFORLOCATION to CS_SECURITY WITH GRANT OPTION;
GRANT EXECUTE ON "&&SchemaName".EXCLUDE_CONTAINERTYPES TO CS_SECURITY WITH GRANT OPTION;
GRANT EXECUTE ON "&&SchemaName".GETCOMPOUNDID TO CS_SECURITY WITH GRANT OPTION;
GRANT EXECUTE ON "&&SchemaName".GETCOMPOUNDIDFROMNAME TO CS_SECURITY WITH GRANT OPTION;
GRANT EXECUTE ON "&&SchemaName".GETGRIDFORMATID TO CS_SECURITY WITH GRANT OPTION;
GRANT EXECUTE ON "&&SchemaName".GETGRIDID TO CS_SECURITY WITH GRANT OPTION;
GRANT EXECUTE ON "&&SchemaName".GETGRIDSTORAGEID TO CS_SECURITY WITH GRANT OPTION;
GRANT EXECUTE ON "&&SchemaName".GETLOCATIONPATH TO CS_SECURITY WITH GRANT OPTION;
GRANT EXECUTE ON "&&SchemaName".GETNUMBEROFCOMPOUNDWELLS TO CS_SECURITY WITH GRANT OPTION;
GRANT EXECUTE ON "&&SchemaName".GETPKCOLUMN TO CS_SECURITY WITH GRANT OPTION;
GRANT EXECUTE ON "&&SchemaName".ISDUPLICATECOMPOUND TO CS_SECURITY WITH GRANT OPTION;
GRANT EXECUTE ON "&&SchemaName".ISFROZENLOCATION TO CS_SECURITY WITH GRANT OPTION;
GRANT EXECUTE ON "&&SchemaName".ISGRIDLOCATION TO CS_SECURITY WITH GRANT OPTION;
GRANT EXECUTE ON "&&SchemaName".ISPLATETYPEALLOWED to CS_SECURITY WITH GRANT OPTION;
GRANT EXECUTE ON "&&SchemaName".ISTRASHLOCATION to CS_SECURITY WITH GRANT OPTION;
GRANT EXECUTE ON "&&SchemaName".IS_CONTAINER_TYPE_ALLOWED to CS_SECURITY WITH GRANT OPTION;
GRANT EXECUTE ON "&&SchemaName".LOOKUPVALUE to CS_SECURITY WITH GRANT OPTION;
GRANT EXECUTE ON "&&SchemaName".MOVECONTAINER TO CS_SECURITY WITH GRANT OPTION;
GRANT EXECUTE ON "&&SchemaName".MOVELOCATION TO CS_SECURITY WITH GRANT OPTION;
GRANT EXECUTE ON "&&SchemaName".MOVEPLATE to CS_SECURITY WITH GRANT OPTION;
GRANT EXECUTE ON "&&SchemaName".MOVEPLATES to CS_SECURITY WITH GRANT OPTION;
GRANT EXECUTE ON "&&SchemaName".ORDERCONTAINER TO CS_SECURITY WITH GRANT OPTION;
GRANT EXECUTE ON "&&SchemaName".REORDERCONTAINER TO CS_SECURITY WITH GRANT OPTION;
GRANT EXECUTE ON "&&SchemaName".RETIRECONTAINER TO CS_SECURITY WITH GRANT OPTION;
GRANT EXECUTE ON "&&SchemaName".RETIREPLATE to CS_SECURITY WITH GRANT OPTION;
GRANT EXECUTE ON "&&SchemaName".SELECTHAZMATDATA TO CS_SECURITY WITH GRANT OPTION;
GRANT EXECUTE ON "&&SchemaName".SELECTSUBSTANCEHAZMATDATA TO CS_SECURITY WITH GRANT OPTION;
GRANT EXECUTE ON "&&SchemaName".SOLVATEPLATES to CS_SECURITY WITH GRANT OPTION;
GRANT EXECUTE ON "&&SchemaName".SUBSTANCENAMEEXISTS TO CS_SECURITY WITH GRANT OPTION;
GRANT EXECUTE ON "&&SchemaName".UPDATEALLCONTAINERFIELDS TO CS_SECURITY WITH GRANT OPTION;
GRANT EXECUTE ON "&&SchemaName".UPDATECONTAINER TO CS_SECURITY WITH GRANT OPTION;
GRANT EXECUTE ON "&&SchemaName".UPDATECONTAINERQTYREMAINING TO CS_SECURITY WITH GRANT OPTION;
GRANT EXECUTE ON "&&SchemaName".UPDATECONTAINERSTATUS TO CS_SECURITY WITH GRANT OPTION;
GRANT EXECUTE ON "&&SchemaName".UPDATELOCATION TO CS_SECURITY WITH GRANT OPTION;
GRANT EXECUTE ON "&&SchemaName".UPDATEPHYSPLATETYPE TO CS_SECURITY WITH GRANT OPTION;
GRANT EXECUTE ON "&&SchemaName".UPDATEPLATEATTRIBUTES to CS_SECURITY WITH GRANT OPTION;
GRANT EXECUTE ON "&&SchemaName".UPDATEPLATEFORMAT to CS_SECURITY WITH GRANT OPTION;
GRANT EXECUTE ON "&&SchemaName".UPDATETABLE to CS_SECURITY WITH GRANT OPTION;
GRANT EXECUTE ON "&&SchemaName".UPDATEWELL to CS_SECURITY WITH GRANT OPTION;
GRANT EXECUTE ON "&&SchemaName".UPDATEWELLFORMAT to CS_SECURITY WITH GRANT OPTION;
GRANT EXECUTE ON "&&SchemaName".UPDATEADDRESS to CS_SECURITY WITH GRANT OPTION;
GRANT EXECUTE ON "&&SchemaName".CERTIFYCONTAINER to CS_SECURITY WITH GRANT OPTION;
GRANT EXECUTE ON "&&SchemaName".INSERTCHECKINDETAILS to CS_SECURITY WITH GRANT OPTION;

--procedures
GRANT EXECUTE ON "&&SchemaName".INSERTHAZMATDATA TO CS_SECURITY WITH GRANT OPTION;
GRANT EXECUTE ON "&&SchemaName".INSERTSUBSTANCEHAZMATDATA TO CS_SECURITY WITH GRANT OPTION;
GRANT EXECUTE ON "&&SchemaName".UPDATEHAZMATDATA TO CS_SECURITY WITH GRANT OPTION;
GRANT EXECUTE ON "&&SchemaName".UPDATESUBSTANCEHAZMATDATA TO CS_SECURITY WITH GRANT OPTION;

--packages
GRANT EXECUTE ON "&&SchemaName".BARCODES to CS_SECURITY WITH GRANT OPTION;
GRANT EXECUTE ON "&&SchemaName".CHEMCALCS to CS_SECURITY WITH GRANT OPTION;
GRANT EXECUTE ON "&&SchemaName".COMPOUNDS TO CS_SECURITY WITH GRANT OPTION;
GRANT EXECUTE ON "&&SchemaName".CONSTANTS TO CS_SECURITY WITH GRANT OPTION;
GRANT EXECUTE ON "&&SchemaName".GUIUTILS TO CS_SECURITY WITH GRANT OPTION;
GRANT EXECUTE ON "&&SchemaName".LINKS TO CS_SECURITY WITH GRANT OPTION;
GRANT EXECUTE ON "&&SchemaName".PLATECHEM to CS_SECURITY WITH GRANT OPTION;
GRANT EXECUTE ON "&&SchemaName".PLATESETTINGS TO CS_SECURITY WITH GRANT OPTION;
GRANT EXECUTE ON "&&SchemaName".REFORMAT to CS_SECURITY WITH GRANT OPTION;
GRANT EXECUTE ON "&&SchemaName".REPORTPARAMS TO CS_SECURITY WITH GRANT OPTION;
GRANT EXECUTE ON "&&SchemaName".REQUESTS TO CS_SECURITY WITH GRANT OPTION;
GRANT EXECUTE ON "&&SchemaName".RESERVATIONS TO CS_SECURITY WITH GRANT OPTION;
GRANT EXECUTE ON "&&SchemaName".STRINGUTILS TO CS_SECURITY WITH GRANT OPTION;
GRANT EXECUTE ON "&&SchemaName".XMLUTILS to CS_SECURITY WITH GRANT OPTION;
GRANT EXECUTE ON "&&SchemaName".APPROVALS to CS_SECURITY WITH GRANT OPTION;






