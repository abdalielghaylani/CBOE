CREATE TABLE "INV_ADDRESS"(
	"ADDRESS_ID" NUMBER(4) NOT NULL,
  "CONTACT_NAME" VARCHAR2(255),
	"ADDRESS1" VARCHAR2(255),
	"ADDRESS2" VARCHAR2(255),
	"ADDRESS3" VARCHAR2(255),
	"ADDRESS4" VARCHAR2(255),
	"CITY" VARCHAR2(255),
	"STATE_ID_FK" NUMBER(4),
	"COUNTRY_ID_FK" NUMBER(4),
	"ZIP" VARCHAR2(20),
	"FAX"  VARCHAR2(255),
	"PHONE" VARCHAR2(255),
	"EMAIL" VARCHAR2(255),
  CONSTRAINT "INV_ADDRESS_PK"
		PRIMARY KEY("ADDRESS_ID") USING INDEX TABLESPACE &&indexTableSpaceName,
  CONSTRAINT "INV_ADDRESS_STATEID_FK" 
		FOREIGN KEY("STATE_ID_FK") 
		REFERENCES "INV_STATES"("STATE_ID")
    ON DELETE SET NULL,
  CONSTRAINT "INV_ADDRESS_COUNTRYID_FK" 
		FOREIGN KEY("COUNTRY_ID_FK") 
		REFERENCES "INV_COUNTRY"("COUNTRY_ID")
    ON DELETE SET NULL
	)
;


CREATE INDEX INV_ADDRESS_STATEIDFK_IDX ON INV_ADDRESS(STATE_ID_FK) TABLESPACE &&indexTableSpaceName;    

CREATE INDEX INV_ADDRESS_COUNTRYIDFK_IDX ON INV_ADDRESS(COUNTRY_ID_FK) TABLESPACE &&indexTableSpaceName;    

CREATE SEQUENCE SEQ_INV_ADDRESS INCREMENT BY 1 START WITH 1000 MAXVALUE 99999 MINVALUE 1 NOCYCLE NOCACHE ORDER;

CREATE OR REPLACE TRIGGER "TRG_INV_ADDRESS_ID"
    BEFORE INSERT
    ON "INV_ADDRESS"
    FOR EACH ROW
    begin
		if :new.Address_ID is null then
			select seq_Inv_Address.nextval into :new.Address_id from dual;
		end if;
end;
/