CREATE TABLE "INV_CONTAINER_BATCHES"(
	"BATCH_ID" NUMBER NOT NULL,
	"BATCH_FIELD_1" VARCHAR2(100),
	"BATCH_FIELD_2" VARCHAR2(100),
	"BATCH_FIELD_3" VARCHAR2(100),
	"BATCH_STATUS_ID_FK" NUMBER(4),
	"MINIMUM_STOCK_THRESHOLD" NUMBER,
   	"COMMENTS" CLOB, 
	"FIELD_1" VARCHAR2(2000),
	"FIELD_2" VARCHAR2(2000),
	"FIELD_3" VARCHAR2(2000),
	"FIELD_4" VARCHAR2(2000),
	"FIELD_5" VARCHAR2(2000),
	"DATE_1" DATE,
	"DATE_2" DATE,
    	CONSTRAINT "INV_CONTAINER_BATCHES_PK"
		PRIMARY KEY("BATCH_ID") USING INDEX TABLESPACE &&indexTableSpaceName,
	CONSTRAINT "BATCH_STATUS_ID_FK"
		FOREIGN KEY ("BATCH_STATUS_ID_FK")
		REFERENCES "INV_BATCH_STATUS" ("BATCH_STATUS_ID")
	)
	LOB (COMMENTS) STORE AS(
		DISABLE STORAGE IN ROW
		TABLESPACE &&lobsTableSpaceName
		NOCACHE
		CHUNK 2K
		PCTVERSION 10
		STORAGE(INITIAL &&lobXML NEXT &&lobXML)
	);
	
	
	
CREATE INDEX BATCHES_BATCHSTATUSIDFK_IDX ON INV_CONTAINER_BATCHES(BATCH_STATUS_ID_FK) TABLESPACE  &&indexTableSpaceName;	

CREATE SEQUENCE SEQ_INV_CONTAINER_BATCHES INCREMENT BY 1 START WITH 1;

CREATE OR REPLACE TRIGGER "TRG_INV_CONTAINER_BATCHES_ID"
    BEFORE INSERT
    ON "INV_CONTAINER_BATCHES"
    FOR EACH ROW
BEGIN
	if :new.batch_id is null then
		select SEQ_INV_CONTAINER_BATCHES.nextval into :new.batch_id from dual;
	end if;
END;
/
