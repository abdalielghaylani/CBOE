<script language = "javascript">
//Copyright 1998-2001 CambridgeSoft Corporation All Rights Reserved
//DO NOT EDIT THIS FILE
function buildSelectBox(Name, thestring, blankline, thesize){

if (thesize == null){
	thesize = "1"
}
if (blankline == null){
	blankline = true
}
	
	var blankLine = '--------- Select one ---------'
	document.write ('<select name="' + Name + '" onChange="update' + Name + '()" size ="' + thesize + '">')
	if (blankline == true){
	document.write ('<option>' + blankLine +'</option>')
	}
	if(!thestring == ""){

	temp = thestring.split(",")
	for (i=0;i<temp.length;i++){
		theItems = temp[i].split(":")
		document.write ("<option value=" + theItems[0] + ">")
		document.write (theItems[1])
		document.write ("</option>")
	}
	}
	document.write ("</select>")
	document.write ("<input type='hidden' value='' name='" + Name + "_hidden'" + ">")

}

function getCookie(name){
	var cname = name  + "=";
	var dc= document.cookie;
	if(dc.length > 0){
		begin = dc.indexOf(cname);
		if(begin != -1){
			begin += cname.length;
			end = dc.indexOf(";",begin);
			if(end == -1) end = dc.length;
			temp = unescape(dc.substring(begin,end));
			theResult = temp

			return theResult
		}
	}
	return null;	
}


function  updateroles(){
	RoleID =top.frames["main"].document.forms["user_manager"].elements["roles_hidden"]
	RoleID.value = top.frames["main"].document.forms["user_manager"].elements["roles"].options[top.frames["main"].document.forms["user_manager"].elements["roles"].selectedIndex].value
}

function  updatecurrent_roles(){

RoleID =top.frames["main"].document.forms["user_manager"].elements["current_roles_hidden"]
RoleID.value = top.frames["main"].document.forms["user_manager"].elements["current_roles"].options[top.frames["main"].document.forms["user_manager"].elements["current_roles"].selectedIndex].value

}

function  updateusers(){

Users =top.frames["main"].document.forms["user_manager"].elements["users_hidden"]
Users.value = top.frames["main"].document.forms["user_manager"].elements["users"].options[top.frames["main"].document.forms["user_manager"].elements["users"].selectedIndex].value

}
function check_same(){
	if (document.user_manager.elements["password"].value != document.user_manager.elements["password_confirmed"].value){
		result =  "different"}
	else{
		result = ""}
	return result
}

function submit_request(action, required_fields){
	isfields_ok=""
	thearray = required_fields.split(",")
 
	for (i=0;i<thearray.length;i++){
		thearray2 = thearray[i].split(":")
		var thefield = eval('document.forms[0].elements["' + thearray2[0] + '"]')
		thetest = thefield.value	
		if (thetest ==""){
			if(isfields_ok == ""){
				isfields_ok = thearray2[1]
			}
			else{
				isfields_ok = isfields_ok + "," + thearray2[1]
			}
		}
	}
	if(isfields_ok == ""){
		is_password_ok = check_same()
		if(is_password_ok=="different"){
			alert("confirmation password does not match password, please enter again")
		}
		else{
			var theNameTemp = eval('document.forms[0].elements["user_name"]')
			theName = theNameTemp.value
			if (theName.indexOf(" ") != -1){
				alert("Spaces within user name are not allowed")
			}
			else{
					if (theName.length > 35){
						alert("User name must be less then 36 characters")
					}
					
					else{
						document.user_manager.action = "/<%=Application("AppKey")%>/cs_security/manage_security/manage_users_new.asp?dbname=<%=dbkey%>&formgroup=base_form_group&process_request=" + action
						document.user_manager.submit()
					}
			}
		}
	}
	else{
		alert("the following fields require information: " + isfields_ok)
	}

}

function addCurrentList(){
	addItemtext = top.frames["main"].document.forms[0].elements["roles"].options[top.frames["main"].document.forms["user_manager"].elements["roles"].selectedIndex].text
	if ((addItemtext!= "undefined")||(addItemtext!= null)){
		w_avail_list=removeFromList(addItemtext, w_avail_list)
		w_current_list=addToList(addItemtext, w_current_list)
		fill_lists()
	}
	else{
		alert("please make selection in Available Roles list")
	}
	
	
}

function removeCurrentList(){
	removeItemtext = top.frames["main"].document.forms[0].elements["current_roles"].options[top.frames["main"].document.forms["user_manager"].elements["current_roles"].selectedIndex].text
	if ((removeItemtext!= "undefined")||(removeItemtext!= null)){
		w_current_list=removeFromList(removeItemtext, w_current_list)
		w_avail_list=addToList(removeItemtext, w_avail_list)
		fill_lists()
	}
	else{
		alert("please make selection in Current Roles list")
	}
	
}

function removeFromList(theItem, theList){
	//242
	var thenewlist= ""
	if (theList.length > 0){
		temp = theList.split(",")
		for (i=0;i<temp.length;i++){
			if (temp[i].toLowerCase() != theItem.toLowerCase()){
				if (thenewlist.length >0){
					thenewlist = thenewlist + "," + temp[i]
				}
				else{
				
					thenewlist = temp[i]
				}
			}
		}
	}
	else{
		thenewlist = ""
	}
return thenewlist
}

function addToList(theItem, theList){
	var thenewlist= ""
	var ok_to_add = true
	
	if (theList.length >0 ){
		temp = theList.split(",")
		for (i=0;i<temp.length;i++){
			if (temp[i].toLowerCase() == theItem.toLowerCase()){
				ok_to_add = false
			}
		}
		if(ok_to_add == true){
			if (thenewlist.length = 0){
					thenewlist = theItem
			}
			else{
				thenewlist = theList + "," + theItem
			}
			
		}
		else{
			thenewlist = ""
		}
	}
	else{
		thenewlist = theItem
	}
	
	return thenewlist
}


function fill_lists(){
	fillAvailList()
	fillCurrentList()
	updateHidden()
}

function updateHidden(){

	theavailroles = top.frames["main"].document.forms[0].elements["roles_hidden"]
	thecurrentroles = top.frames["main"].document.forms[0].elements["current_roles_hidden"]
	//294
	theavailroles.value = w_avail_list
	thecurrentroles.value = w_current_list

}

function fillAvailList(){
	temp = w_avail_list.split(",")
	
	top.frames["main"].document.forms[0].elements["roles"].length = 0
	for (i=0;i<temp.length;i++){
		top.frames["main"].document.forms[0].elements["roles"].options[i] = new Option(temp[i])
	}
}

function fillCurrentList(){
	temp = w_current_list.split(",")
	
	top.frames["main"].document.forms[0].elements["current_roles"].length = 0
	for (i=0;i<temp.length;i++){
		top.frames["main"].document.forms[0].elements["current_roles"].options[i] = new Option(temp[i])
	}
}

function doUpdateUser(orig_list, orig_password, user_name){
	bChangeRoles = false
	bChangePassword = false
	bPasswordError = false
	current_roles = top.frames["main"].document.forms[0].elements["current_roles_hidden"].value
	if (current_roles != orig_list){
	bChangeRoles = true
	}

	new_password = top.frames["main"].document.forms[0].elements["password"].value

	if (orig_password !=new_password){
		theval = check_same()
		if (theval ==""){
			bChangePassword = true
			}
		else{
			bPasswordError = true
		}
	}
	if ((bChangeRoles ==true)||(bChangePassword==true)){
		document.user_manager.action = "/<%=Application("AppKey")%>/cs_security/manage_security/manage_users_result_form.asp?change_roles=" + bChangeRoles + "&change_password=" + bChangePassword + "&dbname=<%=dbkey%>&formgroup=base_form_group&process_request=update_user&uniqueid=" + user_name
		document.user_manager.submit()
	}
	else {
		if(bPasswordError = true){
			alert("the password and confirm password fields are not the same")
		}
		else{
			alert("no changes for this user were made")
		}
	}
}

function doUpdateUserPwd(orig_password, user_name){
	
	bChangePassword = false
	bPasswordError = false
	

	new_password = top.frames["main"].document.forms[0].elements["password"].value

	if (orig_password !=new_password){
		theval = check_same()
		if (theval ==""){
			bChangePassword = true
			}
		else{
			bPasswordError = true
		}
	}
	if (bChangePassword==true){
		document.user_manager.action = "/<%=Application("AppKey")%>/cs_security/manage_security/manage_pwd_result_form.asp?change_password=" + bChangePassword + "&dbname=<%=dbkey%>&formgroup=base_form_group&process_request=update_pwd&uniqueid=" + user_name
		document.user_manager.submit()
	}
	else {
		if(bPasswordError = true){
			alert("the password and confirm password fields are not the same")
		}
		else{
			alert("no changes for this user were made")
		}
	}
}

function doDeleteUser(user_name){

	if(confirm("You are about to remove " + user_name + ".  Continue?")){
		document.user_manager.action = "/<%=Application("AppKey")%>/cs_security/manage_security/manage_users_result_form.asp?user_name=" + user_name + "&dbname=<%=dbkey%>&formgroup=base_form_group&process_request=delete_user&uniqueid=" + user_name
		document.user_manager.submit()
	}
	else{
;
	}
}


function doDeleteRole(){
	if(confirm("You are about to remove this role. Continue?")){
		currentRecord =	MainWindow.document.forms["nav_variables"].elements["CurrentRecord"].value
		setCookie( "PagingMove" + MainWindow.dbname + MainWindow.formgroup, "goto_record", 1 )
		setCookie( "GoToValue" + MainWindow.dbname + MainWindow.formgroup, currentRecord, 1 )
		getAllLoadedFields()
		document.cows_input_form.action = "/<%=Application("AppKey")%>/cs_security/manage_security/manage_security_action.asp?dbname=<%=dbkey%>&formgroup=manage_roles_form_group&dataaction=delete_role"
		document.cows_input_form.submit()
	}
	else{
	;
	}
}

function doUpdateRole(){
	currentRecord = MainWindow.document.forms["nav_variables"].elements["CurrentRecord"].value
	setCookie( "PagingMove" + MainWindow.dbname + MainWindow.formgroup, "goto_record", 1 )
	setCookie( "GoToValue" + MainWindow.dbname + MainWindow.formgroup, currentRecord, 1 )
	document.cows_input_form.action = "/<%=Application("AppKey")%>/cs_security/manage_security/manage_security_action.asp?dbname=<%=dbkey%>&formgroup=manage_roles_form_group&dataaction=update_role"
	document.cows_input_form.submit()
}


function doAddRole(role_name){
	getRelationalFields()
	var missingfields = getSearchStrategy()
	if (missingfields == "no_entries"){
		alert("Please enter into one or more fields.")
	}
	else{
		if ((missingfields == "ok_to_submit") || (missingfields == "")){
			theValue = document.cows_input_form.elements["Security_Roles.Role_Name"].value
			theCurrentNames = document.cows_input_form.elements["Current_Role_Names"].value
			if (theCurrentNames.toLowerCase().indexOf(theValue.toLowerCase()) == -1){
				if (theValue.indexOf(" ") != -1){
					alert("Spaces within role name are not allowed")
				}
				else{
					if (theValue.length > 35){
						alert("Role name must be less then 36 characters")
					}
					else{
						document.cows_input_form.elements["Security_Roles.Role_Name"].value= theValue.toUpperCase()
						MainWindow.document.cows_input_form.RelationalSearchFields.value = ""
						MainWindow.document.cows_input_form.RelationalSearchFields.value = relLoadedFields
						currentRecord =	MainWindow.document.forms["nav_variables"].elements["CurrentRecord"].value
						setCookie( "PagingMove" + MainWindow.dbname + MainWindow.formgroup, "goto_record", 1 )
						setCookie( "GoToValue" + MainWindow.dbname + MainWindow.formgroup, currentRecord, 1 )
						document.cows_input_form.action = "/<%=Application("AppKey")%>/cs_security/manage_security/manage_security_action.asp?dbname=<%=dbkey%>&formgroup=manage_roles_form_group&dataaction=add_role&role_name=" + role_name 
						document.cows_input_form.submit()	
					}
				}	
			}
			else{
				alert("The Role name you entered has already been used")
			}		
		}
		else{
			alert("Please enter information for the following required fields :"  + missingfields)
		}
	}
}
</script>

