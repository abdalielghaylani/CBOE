<script language = "javascript">
// Copyright 1998-2002, CambridgeSoft Corp., All Rights Reserved
//DO NOT EDIT THIS FILE

// path to button gifs

//jhs
var TargetForm_ASPPageName = "";

//function for displayign gif for loading sdfile for searching
function getOpenSDFileButton(fieldname){
	var outpuval = ""
	outputval = '<a href="javascript:MainWindow.doOpenSDFileLoadWindow(&quot;' + fieldname + '&quot;)">'
	outputval = outputval + '<img SRC="/cfserverasp/source/graphics/open_file_btn.gif" BORDER="0"></a>'
	document.write(outputval)
}

//function for opening dialog for loading  sdfile for searching
function doOpenSDFileLoadWindow(fieldname){
	var w = ""
	if (w.name == null){		
		var w = window.open("/<%=application("appkey")%>/Load_IDS.asp?dbname=<%=dbkey%>&formgroup=<%=formgroup%>&fieldname=" + fieldname,"load_ids_from_file","width=450,height=30,scrollbars=yes,status=yes,resizable=yes");
		w.focus()}
	else{
		w.focus()}
}


function OpenDialog2(url, name, type)
{
	WindowDef_1 = "height=530, width= 530px, top=50, left=0";
	WindowDef_2 = "height=650, width= 760px, top=0, left=0";
	WindowDef_3 = "height=450, width= 300px, top=50, left=540";	
	WindowDef_4 = "height=350, width= 350px, top=50, left=540";	
	WindowDef_5 = "height=350, width= 350px, top=540, left=540";	
	var WindowDef = eval("WindowDef_" + type);
	var attribs = "toolbar=0,location=0,directories=0,status=0,menubar=0,scrollbars,resizable," + WindowDef;
	var DialogWindow = window.open(url,name,attribs);
	return DialogWindow;
}

function PopUpDate(strControl,fullsourcepath,formname)
{
	//SYAN added 12/15/2003 to fix CSBR-35466
	//append date_format to fullsourcepath. This fix is made this way to avoid 
	//change of function signature. Yuk.
	var quesPos = fullsourcepath.indexOf('?')
	var param;
	if (fullsourcepath.indexOf('?') > 0) {
		param = fullsourcepath.substring(quesPos + 1, fullsourcepath.length);
		fullsourcepath = fullsourcepath.substring(0, quesPos);
	}
	//End of SYAN modification
	
	var browserNetscape = "<%=strTrueFalse(detectNetscape())%>"
	var strURL = fullsourcepath + "?CTRL=" + strControl;
	if (formname !=null){
		var strCurDate = "document.forms[" + formname + "].elements[strControl].value";
	}
	else{
		var strCurDate = document.forms["cows_input_form"].elements[strControl].value;
	}
	if ((strCurDate != null) && (strCurDate != "undefined")) {
		if (strCurDate.length > 0){
			strURL += "&INIT=" + strCurDate;
		}
	}
	
	//SYAN added 12/15/2003 to fix CSBR-35466
	if (param != null) {
		strURL = strURL + '&' + param
	}
	//End of SYAN modification
	
	var windowDatePicker = ""
	if (windowDatePicker.name == null){
		if (browserNetscape.toLowerCase() == "true"){
			windowDatePicker = window.open(strURL,"dp","toolbar=0,location=0,directories=0,status=0,menubar=0,scrollbars=0,resizable=0," + "width=190,height=200");
			windowDatePicker.focus();
			}
		else{
			windowDatePicker = window.open(strURL,"dp","toolbar=0,location=0,directories=0,status=0,menubar=0,scrollbars=0,resizable=0," + "width=190,height=200,left=" + (window.event.screenX - 190) + ",top=" + (window.event.screenY + 20));
			windowDatePicker.focus();
		}
	}
	else{
		windowDatePicker.focus()
	}
	if (Version.indexOf("MSIE 5.0") != -1){
		date_picker_used = true
	}
	return false
}


function getButton(buttonname, formgroup_override, gif_override){
	//set image file for button
	var buttonGifPath = button_gif_path
	var buttonImage = buttonGifPath + buttonname.toLowerCase() + "_btn.gif"	
	//alert(buttonImage);
	
	//button helpstr text
	var new_recordhelpstr = 'change to add record input form'
	var return_to_detailshelpstr = 'return to previous view'
	var cancel_edithelpstr = 'revert to saved record.'
	var add_recordhelpstr = 'add records to database'
	var update_recordhelpstr = 'update record to database'
	var delete_recordhelpstr = 'delete record from database.'
	var registerhelpstr = 'register compound'
	var register_allhelpstr = 'register all non_duplicate compounds'
	var show_makredhelpstr = 'show marked hits'
	var mark_all_recordshelpstr = 'mark all records'
	var save_queryhelpstr = 'save current query for later use'
	var edit_queryhelpstr = 'restore last query for editing'
	var searchhelpstr ='search entire database using entered criteria'
	var helphelpstr = 'open the webserver help file'
	var clear_formhelpstr = 'clear all form contents'
	var abouthelpstr = 'learn about this database and server version'
	var preferenceshelpstr = 'open preferences window to set search and display options'
	var log_offhelpstr = 'leave this web server app and return to main entry page'
	var refinehelpstr = 'enter criteria to search over current result set'
	var applyhelpstr = 'search current result set using entered criteria'
	var undo_refinehelpstr = 'return to results before applying last refine criteria'
	var export_hitshelpstr = 'export current hits as an SD file'
	var new_searchhelpstr = 'discard current results and begin new search'
	var list_viewhelpstr = 'show more than one record per page'
	var form_viewhelpstr = 'show a single record'
	var restore_lasthelpstr = 'Get last structure entered and associated data'
	var retrieve_allhelpstr = 'Retrieve all records'
	var edit_recordhelpstr = 'Edit current record'
	var blueprinthelpstr = 'Print the current page'
	var printhelpstr = 'Print the current page'
	var homehelpstr = 'Go to home page'
	//create button
	helpstr = eval(buttonname + "helpstr")
	var outputval ='<A HREF = "#" onclick= MainWindow.getAction("'
	
	outputval = outputval + buttonname + "&quot;,&quot;" + formgroup_override 
	outputval = outputval + '")'
	outputval = outputval + ' onMouseOver="status=' 
	outputval = outputval + '&quot;' + helpstr + '&quot;'
	if (gif_override !=null){
		outputval = outputval + '; return true;"><IMG SRC="' + gif_override + '" BORDER="0"></A>'
	}
	else{
		outputval = outputval + '; return true;"><IMG SRC="' + buttonImage + '" BORDER="0"></A>'
	}
	outputval = outputval + '<nobr>'
	
	return outputval
}

//functions for changing buttons in nav bar
//functions for changing buttons in nav bar
//excludeButtonList is a comma delimited list of buttons to be exlcluded form the navbar 
function getButtons(excludeButtonList){
	var outputval = ""
	
	if (!excludeButtonList){
		excludeButtonList = ""
	}
	else{	
		excludeButtonList = excludeButtonList.toLowerCase()
	}
	var button_override=MainWindow.button_override
	if (button_override.length > 0) {
		if (excludeButtonList.length>0){
			excludeButtonList = excludeButtonList + "," + button_override.toLowerCase()
		}
		else{
			excludeButtonList =  button_override.toLowerCase()
		}
	}
	
	
	if (formmode.toLowerCase() == "search"){
		if (excludeButtonList.indexOf("search") == -1) outputval = outputval + getButton("search");
		if (excludeButtonList.indexOf("clear_form") == -1) outputval = outputval + getButton("clear_form");
		//if (excludeButtonList.indexOf("restore_last") == -1) outputval = outputval + getButton("restore_last")
		var SHOW_RETRIEVE_ALL_BTN = "<%=APPLICATION("SHOW_RETRIEVE_ALL_BTN")%>"
		if (SHOW_RETRIEVE_ALL_BTN!="0"){
			if (excludeButtonList.indexOf("retrieve_all") == -1) outputval = outputval + getButton("retrieve_all");
		}
	}	
	
	if (formmode.toLowerCase() == "refine"){			
		if (excludeButtonList.indexOf("apply") == -1) outputval = outputval + getButton("apply");
		if (excludeButtonList.indexOf("clear_form") == -1) outputval = outputval + getButton("clear_form");
		if (excludeButtonList.indexOf("new_search") == -1) outputval = outputval + getButton("new_search");
	}
	
	if (formmode.toLowerCase() == "list"){
		if (excludeButtonList.indexOf("new_search") == -1) outputval = outputval + getButton("new_search");
		if (refine_mode== ""){
			//if (excludeButtonList.indexOf("edit_query") == -1) outputval = outputval + getButton("edit_query");
		}
		if ((fEmptyRecordset != "True")||(get_next_count > 0)){
			if (excludeButtonList.indexOf("no_refine_dialog")!= -1){
				no_refine_dialog=true; 
				outputval = outputval + getButton("refine"); 
			}
			else{
				if (excludeButtonList.indexOf("refine") == -1) outputval = outputval + getButton("refine"); 
			
			}
			
			if (excludeButtonList.indexOf("mark_all_records") == -1) outputval = outputval + getButton("mark_all_records");
			

		}
		if (refine_mode== "refine"){		
			if (excludeButtonList.indexOf("undo_refine") == -1) outputval = outputval + getButton("undo_refine");
		}
		if((db_type != "RXN") && (fEmptyRecordset == "False")){
			//if (excludeButtonList.indexOf("export_hits") == -1) outputval = outputval + getButton("export_hits");
		}	
	}
	
	if (formmode.toLowerCase() == "no_nav_view") {
		if (excludeButtonList.indexOf("return_to_details") == -1) outputval = outputval + getButton("return_to_details");		
	}
	
	if (formmode.toLowerCase() == "edit") {	
		if (excludeButtonList.indexOf("new_search") == -1) outputval = outputval + getButton("new_search");
		if (refine_mode== ""){
			//if (excludeButtonList.indexOf("edit_query") == -1) outputval = outputval + getButton("edit_query");
		}
		
		if ((fEmptyRecordset != "True")||(get_next_count > 0)) {
			if (excludeButtonList.indexOf("no_refine_dialog")!= -1){
				no_refine_dialog=true; 
				if (excludeButtonList.indexOf("no_reg_refine_dialog")== -1) outputval = outputval + getButton("refine"); 
			}
			else{
				if (excludeButtonList.indexOf("refine") == -1) outputval = outputval + getButton("refine"); 
			}	
			
			//if (excludeButtonList.indexOf("mark_all_records") == -1) outputval = outputval + getButton("mark_all_records");
			
		}
		if (refine_mode != ""){		
			
			if (excludeButtonList.indexOf("undo_refine") == -1) outputval = outputval + getButton("undo_refine");
		
		}
		if((db_type != "RXN") && (fEmptyRecordset == "False")){
			//if (excludeButtonList.indexOf("export_hits") == -1) outputval = outputval + getButton("export_hits");
		}
		
		if(formgroupflag =="ADD_RECORD"){
			if (excludeButtonList.indexOf("update_record") == -1) outputval = outputval + getButton("update_record");
			if (excludeButtonList.indexOf("delete_record") == -1) outputval = outputval + getButton("delete_record");
		}		
	}
	
	if (formmode.toLowerCase() == "edit_record") {
		if (excludeButtonList.indexOf("update_record") == -1) outputval = outputval + getButton("update_record");
		if (excludeButtonList.indexOf("cancel_edit") == -1) outputval = outputval + getButton("cancel_edit");
		if (excludeButtonList.indexOf("delete_record") == -1) outputval = outputval + getButton("delete_record");
	}
	
	if (formmode.toLowerCase() == "add_record"){
		if (excludeButtonList.indexOf("add_record") == -1) outputval = outputval + getButton("add_record");
		if (excludeButtonList.indexOf("cancel_edit") == -1) outputval = outputval + getButton("cancel_edit");
		if (excludeButtonList.indexOf("clear_form") == -1) outputval = outputval + getButton("clear_form");
		//if (excludeButtonList.indexOf("restore_last") == -1) outputval = outputval + getButton("restore_last");
	}
	
	if (formmode.toLowerCase() == "add_compounds"){
		if(formgroupflag=="ADD_RECORD"){
			if (excludeButtonList.indexOf("update_record") == -1) outputval = outputval + getButton("update_record");
			if (excludeButtonList.indexOf("cancel_edit") == -1) outputval = outputval + getButton("cancel_edit");
			if (excludeButtonList.indexOf("clear_form") == -1) outputval = outputval + getButton("clear_form");
			//if (excludeButtonList.indexOf("restore_last") == -1) outputval = outputval + getButton("restore_last");
		}
	}	
return outputval
}

function getActionTemp(action){
	if ((formgroupflag == "GLOBAL_SEARCH") && ((!action =="list_view") ||(!action =="get_next"))){
		return gs_action_form_path
	}
	else {
		return action_form_path
	}
	
}

function getDBName(action){
	if ((formgroupflag == "GLOBAL_SEARCH") && ((!action =="list_view") ||(!action =="get_next"))){
		return gs_base_db
	}
	else {
		return dbname
	}
}
function handleError(name){
	("the value for searching index only is not set properly,you will not be able to search")
}
//onclick function called when buttons clicked 
function getAction(action, formgroup_override){
	//allow buttons from one formgroup to call other formgroups
	if ((formgroup_override !="") &&(formgroup_override != "undefined")&&(formgroup_override !=null)){
		MainWindow.formgroup = formgroup_override
	}
	
	if	((formmode.toLowerCase() == "register") && (action == "search")){
		action = "register"
	}
	var actiontemp = getActionTemp(action)
	var dbname = getDBName(action)
	//var dbname = document.cowsform.DBName.value
	if (action == "home"){
		top.location.href = "/cs_security/home.asp"
	}
	
	if (action == "edit_query"){
	
		MainWindow.document.cows_input_form.action = actiontemp + "?formgroup=" + formgroup + "&dataaction=" + action + "&dbname=" + dbname+ "&dbsearchnames=" + dbsearchnames + "&refine_mode=" + refine_mode
		MainWindow.document.cows_input_form.submit();
	}
	if (action == "get_next"){
		totalrecords=base_records_found
		var getNextRecords = totalrecords
		setCookie("PagingMove" + MainWindow.dbname + MainWindow.formgroup,"get_more",1)
		setCookie("GoToRecord" + MainWindow.dbname + MainWindow.formgroup,getNextRecords,1)
		MainWindow.document.cows_input_form.action = actiontemp + "?formgroup=" + formgroup + "&dataaction=" + action + "&dbname=" + dbname + "&dbsearchnames=" + dbsearchnames
		MainWindow.document.cows_input_form.submit();
	}
	if (action == "restore_last"){
		MainWindow.document.cows_input_form.action = actiontemp + "?formgroup=" + formgroup + "&dataaction=" + "edit_query" + "&dbname=" + dbname+ "&dbsearchnames=" + dbsearchnames
		MainWindow.document.cows_input_form.submit();
	}
	if (action == "search"){
		setCookie("PagingMove" + MainWindow.dbname + MainWindow.formgroup,"first_record",1)
		if((formgroupflag =="GLOBAL_SEARCH") && (getSearchDB() == "empty")){
		//if((dbname.indexOf(',') > 0) && (formgroupflag =="GLOBAL_SEARCH") && (getSearchDB() == "empty")){
		alert("Please select one or more databases to search")}
		else{
		
		getStructureFields()
		getFormulaFields()
		getMolWeightFields()
		getRelationalFields()
		missingfields = getSearchStrategy()
		MainWindow.document.cows_input_form.action = actiontemp + "?formmode=" + formmode + "&formgroup=" + formgroup + "&dataaction=" + action + "&dbname=" + dbname
		MainWindow.document.cows_input_form.submit();}
	}
	
	if (action == "retrieve_all"){
		setCookie("PagingMove" + MainWindow.dbname + MainWindow.formgroup,"first_record",1)
		if((dbname.indexOf(',') > 0) && (formgroupflag =="GLOBAL_SEARCH") && (getSearchDB() == "empty")){
		alert("Please select one or more databases to search")}
		else{
		MainWindow.document.cows_input_form.action = actiontemp + "?formmode=" + formmode + "&formgroup=" + formgroup + "&dataaction=" + action + "&dbname=" + dbname
		MainWindow.document.cows_input_form.submit();
		}
	}

	if ((action == "add_record")||(action == "add_user")||(action == "add_role")){
		var cpd_counter = ""
		var commit_type = ""
		commit_type = MainWindow.document.forms["nav_variables"].elements["CommitType"].value
		table_name = MainWindow.document.forms["nav_variables"].elements["TableName"].value
		uniqueid = MainWindow.document.forms["nav_variables"].elements["UniqueID"].value
		current_location = MainWindow.document.cows_input_form.CurrentLocation.value
		//MainWindow.document.forms["nav_variables"].elements["Stored_Location"].value=stored_location

		setCookie("PagingMove" + MainWindow.dbname + MainWindow.formgroup,"first_record",1)
		if (commit_type == "full_commit"){
		
		 if(plugin_value.toLowerCase()!="false"){
				getStructureFields()
			}
		}
		if (override_submit == false){
			cpd_counter = MainWindow.cpd_counter
			getRelationalFields()
			var missingfields = getSearchStrategy()
			if (missingfields == "no_entries"){
					alert("Please enter into one or more fields.")
				}
			else{
				if ((missingfields == "ok_to_submit") || (missingfields == "")){
					currentRecord =	MainWindow.document.forms["nav_variables"].elements["CurrentRecord"].value
					setCookie("PagingMove" + MainWindow.dbname + MainWindow.formgroup,"goto_record",1)
					setCookie("GoToValue" + MainWindow.dbname + MainWindow.formgroup,currentRecord,1)
					MainWindow.document.cows_input_form.action = actiontemp + "?formmode=" + formmode + "&formgroup=" + formgroup + "&dataaction=" + action + "&dbname=" + dbname + "&commit_type=" + commit_type + "&cpd_counter=" + cpd_counter + "&table_name=" + table_name
					MainWindow.document.cows_input_form.submit();
					}
				else{
					alert("Please enter information for the following required fields :"  + missingfields)
				}
			}
		}
		//reset so next submit will work
		override_submit =false
	}
	
	if (action == "cancel_edit"){

		current_location = MainWindow.document.cows_input_form.CurrentLocation.value
		if (current_location.indexOf("form_change=true")!= -1){
			if(result_form_view_path.length >0){
			
				new_location = current_location.replace(result_form_view_path, result_form_path)
			}
			else{
				new_location = current_location.replace("result_form.asp", "list.asp")
			}
			
			
			new_location = new_location.replace("&formmode=edit_record", "&formmode=list")
			new_location = new_location.replace("&formmode=add_record", "&formmode=list")
			currentRecord = MainWindow.document.forms["nav_variables"].elements["CurrentRecord"].value
			setCookie("PagingMove" + MainWindow.dbname + MainWindow.formgroup,"goto_record",1)
			setCookie("GoToValue" + MainWindow.dbname + MainWindow.formgroup,currentRecord,1)
		}
		else{
			if(current_location.indexOf("&formmode=edit_record")!= -1){
				new_location = current_location.replace("&formmode=edit_record", "&formmode=edit")
			}
			if(current_location.indexOf("&formmode=add_record")!= -1){
				new_location = current_location.replace("&formmode=add_record", "&formmode=edit")
			}
			if(current_location.indexOf("&formmode=add_compounds")!= -1){
				new_location = current_location.replace("&formmode=add_compounds", "&formmode=edit")
			}
		}
		if(stored_location!=""){
			MainWindow.document.location.href = stored_location
		}
		else{
			MainWindow.document.location.href = new_location
		}
		
		
		
		}
	
	if ((action == "update_record")||(action == "update_user")||(action == "update_role")){
		current_location = MainWindow.document.cows_input_form.CurrentLocation.value
		
		MainWindow.document.forms["nav_variables"].elements["Stored_Location"].value=stored_location
		
		actiontemp = action_form_path
		formmode = formmode.toLowerCase()
		if (formmode == "add_record"){
			action = "add_record"
			commit_type = MainWindow.document.forms["nav_variables"].elements["CommitType"].value
			uniqueid=""
			}
		else{
			commit_type = MainWindow.document.forms["nav_variables"].elements["CommitType"].value
			uniqueid = MainWindow.document.forms["nav_variables"].elements["UniqueID"].value
		}
		if (commit_type ==""){
			commit_type = "full_commit"
		}
		if (commit_type.toLowerCase() == "full_commit"){
			if (formmode == "add_record"){
				if (plugin_value.toLowerCase() != "false"){
					getStructureFields()
				}
			}
			if (formmode == "edit_record"){
				if (plugin_value.toLowerCase() != "false"){
					getStructureFields()
				}
				
			}
		}
		//getRelationalFields()- relational data is gathered as changes are made
		if (override_submit == false){
			var missingfields = getSearchStrategy()
			if (missingfields == "no_entries"){
				alert("Please enter into one or more fields.")
			}
			else{
				if ((missingfields == "ok_to_submit") || (missingfields == "")){
					MainWindow.document.cows_input_form.action = actiontemp + "?formmode=" + formmode + "&formgroup=" + formgroup + "&dataaction=" + action + "&dbname=" + dbname + "&commit_type=" + commit_type + "&unique_id=" + uniqueid 
					MainWindow.document.cows_input_form.submit();
					}
				else{
					alert("Please enter information for the following required fields :"  + missingfields)
				}
			}
		}
		//reset so next submit will work
		override_submit = false
	}
	
	if ((action == "delete_record")||(action == "delete_user")||(action == "delete_role")){

		commit_type = MainWindow.document.forms["nav_variables"].elements["CommitType"].value
		uniqueid = MainWindow.document.forms["nav_variables"].elements["UniqueID"].value

		if ((formgroupflag=="REG_COMMIT")||(formgroupflag=="REG_TEMP")){
			doDeleteRegister_edit()
		}
		else{
			
			if(confirm("All data for this record will be deleted.  Continue?")){
				getAllLoadedFields()
				currentRecord =MainWindow.document.forms["nav_variables"].elements["CurrentRecord"].value
				setCookie("PagingMove" + MainWindow.dbname + MainWindow.formgroup,"goto_record",1)
				setCookie("GoToValue" + MainWindow.dbname + MainWindow.formgroup,currentRecord,1)
				actiontemp = action_form_path
				MainWindow.document.cows_input_form.action = actiontemp + "?unique_id=" + uniqueid + "&field_name=" + struc_fields + "&duplicates_check=false&formmode=" + formmode + "&formgroup=" + formgroup + "&dataaction=" + action + "&dbname=" + dbname 
				MainWindow.document.cows_input_form.submit();
			}
		}
	}
	
	if ((action == "new_record")||(action == "new_compound")){
			MainWindow.document.cows_input_form.action = actiontemp + "?formmode=add_record&formgroup=" + "add_record_form_group" + "&dataaction=db"  + "&dbname=" + dbname+ "&dbsearchnames=" + dbsearchnames
			MainWindow.document.cows_input_form.submit();
	
	}
	if (action == "register"){
		doRegister_edit()
	}
	
	if (action == "register_all"){
		doRegister_All()
	}
	if (action == "mark_all_records"){
		doMarkAll()
	}


	if (action == "refine"){
		if (no_refine_dialog!=true){
			MainWindow.document.cows_input_form.action = actiontemp + "?formgroup=" + formgroup + "&dataaction=" + action + "&dbname=" + dbname+ "&dbsearchnames=" + dbsearchnames
			var w = ""
			if (w.name == null){
			var w = window.open(refine_path + "?dbname=" + dbname + "&totalrecords=" + MainWindow.base_records_found,"refine_options","width=400,height=200,scrollbars=no,status=no,resizable=no");
			w.focus()}
			else{
			w.focus()}
		}
		else{
			MainWindow.document.cows_input_form.action = actiontemp + "?formgroup=" + formgroup + "&dataaction=" + action + "&dbname=" + dbname+ "&dbsearchnames=" + dbsearchnames
			MainWindow.document.cows_input_form.RefineType.value = "partial_refine"
			MainWindow.document.cows_input_form.submit();
		}
	}
	if (action == "undo_refine"){
		MainWindow.document.cows_input_form.action = actiontemp + "?formgroup=" + formgroup + "&dataaction=" + action + "&dbname=" + dbname+ "&dbsearchnames=" + dbsearchnames
		MainWindow.document.cows_input_form.submit();
	}
	if (action == "apply"){

		setCookie("PagingMove" + MainWindow.dbname + MainWindow.formgroup,"first_record",1)
		setCookie("MarkedHitsShown" + MainWindow.dbname + MainWindow.formgroup,"true",1)
		if((formgroupflag =="GLOBAL_SEARCH") && (getSearchDB() == "empty")){
		//if((dbname.indexOf(',') > 0) && (formgroupflag =="GLOBAL_SEARCH") && (getSearchDB() == "empty")){
		alert("Please select one or more databases to search")}
		else{
		getStructureFields()
		getFormulaFields()
		getMolWeightFields()
		getRelationalFields()
		missingfields = getSearchStrategy()
		MainWindow.document.cows_input_form.action = actiontemp + "?formmode=" + formmode + "&formgroup=" + formgroup + "&dataaction=" + action + "&dbname=" + dbname+ "&dbsearchnames=" + dbsearchnames
		MainWindow.document.cows_input_form.submit()}
	}
	if (action == "clear_form"){
		//DGB I don't see a reason for this special case during edit query so I will comment it
		//if (specialmode == "edit_query"){
		//	if (button_override !=""){
		//		MainWindow.document.cows_input_form.action = actiontemp + "?formgroup=" + formgroup + "&dataaction=" + "db" + "&dbname=" + dbname+ "&dbsearchnames=" + dbsearchnames + "&button_override=" + button_override + "&preserve_items=button_override"
		//	}
		//	else{
		//		MainWindow.document.cows_input_form.action = actiontemp + "?formgroup=" + formgroup + "&dataaction=" + "db" + "&dbname=" + dbname+ "&dbsearchnames=" + dbsearchnames
		//	}
		//
		//MainWindow.document.cows_input_form.submit();
		//}
		//else{
	clearAllFields()
		//}
	}
	if (action == "export_hits"){
		var w = ""
		if (w.name == null){		
			var w = window.open(export_hits_path + "?formmode=" + formmode + "&dbname=" + MainWindow.dbname + "&formgroup=" + MainWindow.formgroup,"export_hits","width=500,height=500,scrollbars=yes,status=no,resizable=yes");
			w.focus()}
		else{
			w.focus()}
	}
	if (action == "new_search"){
		MainWindow.document.cows_input_form.action = actiontemp + "?formgroup=" + formgroup + "&dataaction=" + action + "&dbname=" + dbname+ "&dbsearchnames=" + dbsearchnames
		MainWindow.document.cows_input_form.submit();
	}
	
	if (action == "list_view"){
		var path =db_Path + "/" + result_form_path
		
		currentRecord = MainWindow.document.forms["nav_variables"].elements["CurrentRecord"].value
		setCookie("PagingMove" + MainWindow.dbname + MainWindow.formgroup,"goto_record",1)
		setCookie("GoToValue" + MainWindow.dbname + MainWindow.formgroup,currentRecord,1)

		var totalrecords = base_records_found
		thepath = path + "?formgroup=" + formgroup + "&formmode=list" + "&dbname=" + dbname + "&indexvalue=" + currentRecord + "&form_change=true"
		//!DGB! Change the main window back
		MainWindow = <%=Application("mainwindow")%>;

		MainWindow.document.location.href=thepath + "&time=" + theTimer
	}
	
	if (action == "return_to_details"){
		thepath= getCookie("LastLocation" + MainWindow.dbname + MainWindow.formgroup)
		MainWindow.document.location.href=thepath + "&time=" + theTimer
	
		
	}
	
	if (action == "help"){
		var w = ""
		if (w.name == null){
		//var w = window.open(help_path+ "?formgroup=" + formgroup + "&dbname=" + dbname,"help","width=800,height=600,scrollbars=yes,status=no,resizable=yes");
		var w =  window.open(help_path,"help","width=800,height=600,scrollbars=yes,status=no,resizable=yes");
			w.focus()}
		else{
			w.focus()}

	}
	if (action == "about"){
		var w = ""
		if (w.name == null){
		var w = window.open(about_path+ "?formgroup=" + formgroup + "&dbname=" + dbname + "&theTime=" + theTimer,"about","width=560,height=450,status=no,resizable=yes");
			w.focus()}
		else{
			w.focus()}
	}
	if (action == "preferences"){
		var pref_version = "<%=Application("MOLSERVER_VERSION")%>"
		
	
		var w = ""
		if (w.name == null){
			if((pref_version!="7")&&(pref_version!="6")){
				w = window.open(prefs_path+ "?formgroup=" + formgroup + "&dbname=" + dbname + "&defaultNum=" + defaultListView + "&formmode=" + formmode,"prefs","width=450,height=680,status=no,resizable=yes");
			}else{
				w = window.open(prefs_path+ "?formgroup=" + formgroup + "&dbname=" + dbname + "&defaultNum=" + defaultListView + "&formmode=" + formmode,"prefs","width=450,height=580,status=no,resizable=yes");
			}

			w.focus()}
		else{
			w.focus()}
	}
	if ((action == "log_off") || (action == "logoff")){
	
		MainWindow.document.cows_input_form.action = actiontemp + "?formgroup=" + formgroup + "&dataaction=" + action + "&dbname=" + dbname+ "&dbsearchnames=" + dbsearchnames
		MainWindow.document.cows_input_form.submit();
	}
	
	if ((action == "blueprint")||(action=="print")) {
		// Call the Print function for the page - this is the 
		printCurrentPage();
	}	
	if (action == "edit_record") {
			var new_location = ""
			var current_location = MainWindow.document.cows_input_form.CurrentLocation.value
			stored_location=current_location
			if (formmode.toLowerCase()=="edit"){
				if (current_location.indexOf("form_change") == -1){
					current_location = current_location + "&form_change=false"
				}
				else{
					current_location=current_location.replace("&form_change=true","&form_change=false")
					}
				new_location = current_location.replace("&formmode=edit", "&formmode=edit_record")
			}
			if (formmode.toLowerCase()=="list"){
				if (current_location.indexOf("form_change") == -1){
					current_location = current_location + "&form_change=true"
				}
				else{
					current_location=current_location.replace("&form_change=false","&form_change=false")
					}
				new_location = current_location.replace("&formmode=list", "&formmode=edit_record")
			}
			if ((formmode.toLowerCase()!="list")&&(formmode.toLowerCase()!="edit")){
				if (current_location.indexOf("form_change") == -1){
					current_location = current_location + "&form_change=false"
				}
				else{
					current_location=current_location.replace("&form_change=true","&form_change=false")
					}
				new_location = current_location.replace("&formmode=" + MainWindow.formmode, "&formmode=edit_record")
			}
			currentRecord = MainWindow.document.forms["nav_variables"].elements["CurrentRecord"].value
	
	MainWindow.document.location.replace(new_location);
	}
	
	if (action== "query_history"){
		doManageQueries('history',MainWindow.dbname, MainWindow.formgroup)
	}
	
	if (action== "restore_query"){
		doManageQueries('restore_query',MainWindow.dbname, MainWindow.formgroup)
	}
	
	if (action== "save_query"){
		doManageQueries('save_query',MainWindow.dbname, MainWindow.formgroup)
	}
	
	if (action== "manage_queries"){
		doManageQueries('manage_queries',MainWindow.dbname, MainWindow.formgroup)
	}
	
	if (action== "hitlist_history"){
		doManageHitLists('history',MainWindow.dbname, MainWindow.formgroup)
	}
	
	if (action== "restore_hitlist"){
	
		doManageHitLists('restore_hitlist',MainWindow.dbname, MainWindow.formgroup)
	}
	
	if (action== "restore_last_hitlist"){
		MainWindow.document.cows_input_form.action = actiontemp + "?formgroup=" + formgroup + "&dataaction=" + "restore_hitlist" + "&dbname=" + dbname
		MainWindow.document.cows_input_form.submit();
	}
	
	if (action== "save_hitlist"){
		doManageHitLists('save_hitlist',MainWindow.dbname, MainWindow.formgroup)
	}
	
	if (action== "manage_hitlists"){
		doManageHitLists('manage_hitlists',MainWindow.dbname, MainWindow.formgroup)
	}
	if (action =="show_marked"){
		doShowMarkedHits(MainWindow.dbname)
	}
	
	if (action =="clear_marked"){
		doClearMarkedHits(MainWindow.dbname)
	}
	
	if (action =="send_marked"){
		doSendMarkedHits(MainWindow.dbname)
	}
	if (action =="show_last_list"){
		doShowLastList(MainWindow.dbname)
	}
	
return true
}

function printCurrentPage(){
	var IE4browser= "<%=detectIE4%>"
	var NSbrowser = "<%=detectNS%>"
	if (window.print || (NSbrowser.toLowercase == "true")) {
		parent.frames["main"].focus();
		window.print();
	}
	else {
		if (window.print || IE4browser.toLowercase != "true"){
			parent.frames["main"].focus();
			window.print();
			
		}
		else{
			alert('The print button does not work with IE 4, please use Ctrl-P instead');
		}
	}
}
function getRecordsFoundDB2(){
var outputval = ""
if ((formmode.toLowerCase()=="list") && (fEmptyRecordset == "False")){
buttonpath=button_gif_path
	var recordsfoundimg = '<IMG SRC="' + button_gif_path + 'current_db.gif">'
	var currentdb = dbname
	var selectlist = ""	
	
	if (formgroupflag == "GLOBAL_SEARCH"){
		var theNames = app_db_names.split(",")
		selectlist = '<SELECT Name = "DBSearchResults" >'
			for (i=0;i<theNames.length;i++){
			if (theNames[i] == currentdb){
				selectlist = selectlist + '<option value="' + theNames[i] + '" selected>' +  theNames[i] + '</option>'
				}
				else{
					selectlist = selectlist + '<option value="' + theNames[i] + '">' + theNames[i] + '</option>'
				}
			}	
			selectlist = selectlist + '</SELECT>'
	}
	else{
		selectlist = currentdb
	}

	outputval = outputval + "<table border = 0><tr>"
	outputval = outputval + "<td valign=top>" + recordsfoundimg +  "</td>"
	outputval = outputval + "<td valign=top>" + selectlist +  "</td>"
	outputval = outputval + "</tr></table>"
	return outputval
	}
	return  outputval

}	

function getRecordsFoundDB(){
var outputval = ""
if ((formmode.toLowerCase()=="list") && (fEmptyRecordset.toLowerCase() == "false")){
	var recordsfoundimg = '<IMG SRC="' + button_gif_path + 'current_db.gif">'
	var currentdb = dbname
	var selectlist = ""	
	
	if (formgroupflag.toLowerCase() == "global_search"){
		var theNames = app_db_names.split(",")
			for (i=0;i<theNames.length;i++){
			if (theNames[i] == currentdb){
				selectlist = selectlist +  theNames[i] + '<input type="radio" name="SelectDBName" value="'+ theNames[i] + '" checked>' 
				}
				else{
					selectlist  =selectlist +  theNames[i] + '<input type="radio" name="SelectDBName" value="'+ theNames[i] + '">' 
				}
			}	
	}
	else{
		selectlist = currentdb
	}

	outputval = outputval + "<table border = 0><tr>"
	outputval = outputval + "<td valign=top>" + recordsfoundimg +  "</td>"
	outputval = outputval + "<td valign=top>" + selectlist +  "</td>"
	outputval = outputval + "</tr></table>"
	return outputval
	}
	return  outputval

}	
function getResultViewButtons(){
	var outputval = ""
	if (fEmptyRecordset == "False"){
        if(formmode.toLowerCase() != "no_nav_view"){
			if(formmode.toLowerCase() == "edit"){
				 var goLast = MainWindow.last_location
				 var goLastText = MainWindow.last_location_text
				 var excludeButtonList = ""
					var button_override=MainWindow.button_override
					if (button_override.length > 0) {
						if (excludeButtonList.length>0){
							excludeButtonList = excludeButtonList + "," + button_override.toLowerCase()
						}
						else{
							excludeButtonList =  button_override.toLowerCase()
						}
					}
					if ((excludeButtonList.indexOf("list_view") == -1)&&(goLast == "")){
						outputval = outputval + getButton("list_view")
					}
					if (goLast != ""){
						outputval = outputval + '&nbsp;&nbsp;&nbsp;&nbsp;' + '<a href = "#" onClick="MainWindow.location.href=&quot;' + goLast + '&quot;" onMouseOver="status=&quot;' + goLastText + '&quot;; return true;">' + goLastText + '</a>'
					}
			}
		}
	return  outputval 
	}
return outputval
}

function getNoNavMessage(){
	var outputval = ""
	outputval = '<SPAN class=RecordNavText>' + no_nav_message + '</SPAN>'
	return outputval
}
function getCurrentRecord(currentrecord){
	var outputval = ""
	
	//var currecimg2 = '<IMG SRC="' + button_gif_path + 'currentrecord_txt.gif">'	
	outputval = outputval + '<SPAN class=RecordNavText>' +  "Record "  + currentrecord + '</SPAN>'	
	return outputval
}
function getRecordsFound(totalrecords){

	var outputval = ""
	var recfoundimg2 = '<IMG SRC="' + button_gif_path + 'recordsfound_txt.gif">'
	if (more_available == "True"){
		//var of_first = '<IMG SRC="' + button_gif_path + 'of_first.gif">'
		outputval = outputval + '&nbsp;<SPAN class=RecordNavText>' +    "of first" + '&nbsp;</SPAN>' + '<SPAN class=RecordNavText>' + totalrecords + ' hits&nbsp;</SPAN>'	
	}
	else{	
		outputval = outputval + '&nbsp;<SPAN class=RecordNavText>' + "of" + '&nbsp;' + '<SPAN class=RecordNavText>' + totalrecords + ' hits&nbsp;</SPAN>'	
	}
	return outputval
}



function getComment(showgif, addline, showcomment, showtotalhits){
	var outputval = ""
	if ((showgif== null)|| (showgif == "undefined")||(showgif == true)){
		var commentimg = '<IMG SRC="' + button_gif_path + 'comment_txt.gif">'
		outputval = outputval + "<table border = 0><tr>"
		if ((MainWindow.status_comment.length>0 && (showcomment== null)|| (showcomment == "undefined")||(showcomment == true))){
			outputval = outputval + "<td valign=top>" + commentimg +  "</td>"
			if ((addline== null)|| (addline == "undefined")|| (addline == false)){
				outputval = outputval + '<td valign=top><font size="2">' + MainWindow.status_comment +  '</font></td>'
			}
			else{
				outputval = outputval + '</tr><tr><td valign=top><font size="2">' + MainWindow.status_comment +  '</font></td>'
			}
		}
		if ((formmode.toLowerCase() != "search") && (formmode.toLowerCase().indexOf("add_")!=0)){

		
			var totalhitsimg = '<IMG SRC="' + button_gif_path + 'total_hits.gif">'
			outputval = outputval + "</tr><tr><td valign=top>" + totalhitsimg +  "</td>"
			if (more_available == "True"){
				if ((addline== null)|| (addline == "undefined")|| (addline == false)){
					outputval = outputval + '<td valign=top><font size="2"><%=Session("hitlistRecordCount" & dbkey & formgroup)%></font></td>'
				}
				else{
					outputval = outputval + '</tr><tr><td valign=top><font size="2"><%=Session("hitlistRecordCount" & dbkey & formgroup)%></font></td>'
				}
			}
			else
			{
				if ((addline== null)|| (addline == "undefined")|| (addline == false)){
					outputval = outputval + '<td valign=top><font size="3">' + totalrecords +  '</font></td>'
				}
				else{
					outputval = outputval + '</tr><tr><td valign=top><font size="3">' + totalrecords +  '</font></td>'
				}
			}
			}
		outputval = outputval + "</tr></table>"
		}
	else{
		outputval = outputval + "<table border = 0><tr>"
			if ((MainWindow.status_comment.length>0 && (showcomment== null)|| (showcomment == "undefined")||(showcomment == true))){
			outputval = outputval + "<tr><td valign=top>" + "<font face=\"MS Sans Serif\" size=\"1\" color=\"#000000\"><strong>Comment:</strong></font>" + "</td>"
			if ((addline== null)|| (addline == "undefined")|| (addline == false)){
				outputval = outputval + '<td valign=top><font size="2">' + MainWindow.status_comment +  '</font></td></tr>'
			}
			else{
				outputval = outputval + '</tr><tr><td valign=top><font size="2">' + MainWindow.status_comment +  '</font></td></tr>'
			}
		}
		if ((formmode.toLowerCase() != "search") && (formmode.toLowerCase().indexOf("add_")!=0)){
			if ((showtotalhits== null)|| (showtotalhits == "undefined")||(showtotalhits == true)){
				if (more_available == "True"){
					outputval = outputval + "<tr><td valign=top>" + "<font face=\"MS Sans Serif\" size=\"1\" color=\"#000000\"><strong>Total Hits:</strong></font>" + "</td>"
					if ((addline== null)|| (addline == "undefined")|| (addline == false)){
						outputval = outputval + "<td valign=top><font face=\"MS Sans Serif\" size=\"1\" color=\"#000000\">" + <%=Session("hitlistRecordCount" & dbkey & formgroup)%> + "</font></td></tr>"
					}
					else{
						outputval = outputval + "</tr><tr><td valign=top><font face=\"MS Sans Serif\" size=\"1\" color=\"#000000\">" + <%=Session("hitlistRecordCount" & dbkey & formgroup)%> + "</font></td></tr>"
					}
				}
				else
				{
					outputval = outputval + "<tr><td valign=top>" + "<font face=\"MS Sans Serif\" size=\"1\" color=\"#000000\"><strong>Total Hits:</strong></font>" + "</td>"
					if ((addline== null)|| (addline == "undefined")|| (addline == false)){
						outputval = outputval + "<td valign=top><font face=\"MS Sans Serif\" size=\"1\" color=\"#000000\">" + MainWindow.totalrecords + "</font></td></tr>"
					}
					else{
						outputval = outputval + "<td valign=top><font face=\"MS Sans Serif\" size=\"1\" color=\"#000000\">" + MainWindow.totalrecords + "</font></td></tr>"
					}
				}
			}
		}
		outputval = outputval + "</tr></table>"
	}
	return outputval
}



function getTotalDBRecords(showgif,addline){
	var outputval = ""
	if ((formgroup.toLowerCase() == "gs_form_group")&&(formmode.toLowerCase() == "search")){
	 outputval = ""
	 }
	else{
		if ((showgif== null)|| (showgif == "undefined")|| (showgif == true)){
			var totalrecimg2 = '<IMG SRC="' + button_gif_path + 'totalrecords_txt.gif">'
			outputval = outputval + "<table border = 0><tr>"
			outputval = outputval + "<td valign=top>" + totalrecimg2 + "</td>"
			if ((addline== null)|| (addline == "undefined")|| (addline == false)){
				outputval = outputval + "<td valign=top>" + MainWindow.db_record_count + "</td>"
			}
			else{
				outputval = outputval + "</tr><tr><td valign=top>" + MainWindow.db_record_count + "</td>"
			}
			outputval = outputval + "</tr></table>"
		}
		else{
			outputval = outputval + "<table border = 0>"
			outputval = outputval + "<tr><td valign=top>" + "<font face=\"MS Sans Serif\" size=\"1\" color=\"#000000\"><strong>Total Records:</strong></font>" + "</td>"
			if ((addline== null)|| (addline == "undefined")|| (addline == false)){
				outputval = outputval + "<td valign=top><font face=\"MS Sans Serif\" size=\"1\" color=\"#000000\">" + MainWindow.db_record_count + "</font></td></tr>"
			}
			else{
				outputval = outputval + "</tr><tr><td valign=top><font face=\"MS Sans Serif\" size=\"1\" color=\"#000000\">" + MainWindow.db_record_count + "</font></td></tr>"
			}
			outputval = outputval + "</tr></table>"
		}
	}
		return outputval
}



//function forfixed buttons in nav bar
function getFixedButtons(excludeButtonList){
//function for fixed buttons in nav bar
	var outputval = ""
	if (!excludeButtonList){
		excludeButtonList = ""
	}
	else{	
		excludeButtonList = excludeButtonList.toLowerCase()
	}
	var button_override=MainWindow.button_override
		if (button_override.length > 0) {
			if (excludeButtonList.length>0){
				excludeButtonList = excludeButtonList + "," + button_override.toLowerCase()
			}
			else{
				excludeButtonList =  button_override.toLowerCase()
			}
		}
	if (excludeButtonList.indexOf("print") == -1) outputval = outputval + getButton("blueprint") 
	if (excludeButtonList.indexOf("preferences") == -1) outputval = outputval + getButton("preferences") 
	if (excludeButtonList.indexOf("help") == -1) outputval = outputval + getButton("help") 
	if (excludeButtonList.indexOf("about") == -1) outputval = outputval + getButton("about") 
	if (excludeButtonList.indexOf("log_off") == -1) outputval = outputval + getButton("log_off")
	//!DGB!  Home button for global login
	<% if Len(Request.Cookies("CS_SEC_UserName")) > 0 then%>
		if (excludeButtonLis0t.indexOf("home") == -1) outputval = outputval + getButton("home","","/cfserverasp/source/graphics/navbuttons/home_btn.gif")
	<%end if%>
	return outputval
	
}

function submitGotoValue(goto_value){
	var path = path_info
	setCookie("PagingMove" + MainWindow.dbname + MainWindow.formgroup,"goto_record",1)
	setCookie("GoToRecord" + MainWindow.dbname + MainWindow.formgroup,goto_value,1)
	thepath = path + "?formgroup=" + formgroup + "&formmode=" + formmode + "&dbname=" + dbname  + "&BaseRecordCount=" + MainWindow.totalrecords + "&dbsearchnames=" + dbsearchnames
	MainWindow.document.location.href=thepath + "&time=" + theTimer
}

//function for performing actions specified in the record navigation bar
function getRecordAction(inputstr){

	var w = ""
	var path = path_info
	if (inputstr == "goto_record"){
		totalrecords = base_records_found
		if (w.name == null){
			w = window.open(app_Path + "/go_to_record.asp?total_records=" + totalrecords,"go_to_record","width=300,height=100,status=no,resizable=no");
			w.focus()
		}
		else{
			w.focus()
		}
	}
	else
	{
		var currentURL
		currentURL = MainWindow.location.href
		if (currentURL.indexOf("preserve_qs") != -1) {
			var currentPagingMove		
			var newURL
			if (MainWindow.dbname == "biosar_browser")
			{currentPagingMove = getCookie("PagingMove" + MainWindow.dbname)}
			else
			{currentPagingMove = getCookie("PagingMove" + MainWindow.dbname + MainWindow.formgroup)}
			
			currentURL = MainWindow.location.href
			if (currentURL.indexOf("PagingMove") != -1) {
				var newURL = MainWindow.location.href.replace("&PagingMove=" + currentPagingMove ,"&PagingMove=" + inputstr )
			}
			else{
				var newURL = MainWindow.location.href.replace("&dbname=","&PagingMove=" + inputstr + "&dbname=")
			}
			setCookie("PagingMove" + MainWindow.dbname + MainWindow.formgroup,inputstr,1)
			MainWindow.document.location.href=newURL
		}
		else
		{
			thepath = path + "?formgroup=" + formgroup + "&formmode=" + formmode + "&dbname=" + dbname  + "&PagingMove=" + inputstr + "&BaseRecordCount=" + base_records_found+ "&dbsearchnames=" + dbsearchnames
			setCookie("PagingMove" + MainWindow.dbname + MainWindow.formgroup,inputstr,1)
			MainWindow.document.location.href=thepath + "&time=" + theTimer
		}

	}

}

function setCookie(name,value,make_expire){
	
	if (name.indexOf("PagingMovebiosar_browser") == 0)
	{
		name = "PagingMovebiosar_browser";
	}
	
	if (make_expire == 1){
		
		if ((name.indexOf("PagingMoveinvreggs_form_group")== 0) || (name.indexOf("PagingMoveinvacxgs_form_group")== 0))	{
		   document.cookie = name + "="  + escape(value) + "; path=/" + appkey;
		}
		 else{
		    document.cookie = name + "="  + escape(value) ;
		}
	}else
	{
		var nextyear = new Date()
		nextyear.setFullYear(nextyear.getFullYear() +1);
		document.cookie = name  + "="  + escape(value) + "; expires=" + nextyear.toGMTString() + "; path=/" + appkey
	}

	
}



function getCookie(name){
	var cname = name  + "=";
	var dc= document.cookie;
	if(dc.length > 0){
		begin = dc.indexOf(cname);
			if(begin != -1){
				begin += cname.length;
				end = dc.indexOf(";",begin);
					if(end == -1) end = dc.length;
						 var temp = unescape(dc.substring(begin,end));
						 theResult = temp
						 
						  return theResult
			}
		}
	return null;	
}
function doNoNav(){
	
	return outputval
}
function getNavRecordHeader(){
	var outputval = ""
	if(formmode.toLowerCase() =="no_nav_view"){
		outputval =  MainWindow.getNoNavMessage()
	}
	
	if(formmode.toLowerCase() =="edit"){
		recordrange =MainWindow.document.forms["nav_variables"].elements["RecordRange"].value
		recordcount=MainWindow.document.forms["nav_variables"].elements["TotalRecords"].value
		outputval = outputval + MainWindow.getCurrentRecord(recordrange)
		outputval = outputval + MainWindow.getRecordsFound(recordcount)
	}
	if(formmode.toLowerCase() =="edit_record"){
		outputval=""
	}
	if (formmode.toLowerCase() == "list"){
		recordrange =MainWindow.document.forms["nav_variables"].elements["RecordRange"].value
		recordcount=MainWindow.document.forms["nav_variables"].elements["TotalRecords"].value
		outputval = outputval + MainWindow.getCurrentRecord(recordrange)
		outputval = outputval + MainWindow.getRecordsFound(recordcount)
	}
	//alert(recordrange + '/' + recordcount);
	
return outputval
}

function getNavStartButtons(at_start){
	var outputval = ""
	var buttonGifPath = button_gif_path
	if(at_start == "True"){
		first_recordhelpstr = "not available, currently at first record."
		previous_recordhelpstr = "not available, currently at first record."
		first_recordgif =  buttonGifPath + "first_record_dimbtn.gif"
		previous_recordgif = buttonGifPath + "previous_record_dimbtn.gif"
		outputval = outputval + '<A HREF = "#"  onMouseOver="status=&quot;' + first_recordhelpstr + '&quot;; return true;")><IMG SRC="' + first_recordgif + '" BORDER="0"></A>'
		outputval = outputval + '<A HREF = "#"  onMouseOver="status=&quot;' + previous_recordhelpstr +'&quot;; return true;")><IMG SRC="' + previous_recordgif + '" BORDER="0"></A>'
	}
	else {
		first_recordhelpstr = "go to first record of recordset."
		previous_recordhelpstr = "go to first record of recordset."
		var first_recordgif =  buttonGifPath + "first_record_btn.gif"
		var previous_recordgif = buttonGifPath + "previous_record_btn.gif"
		outputval = outputval + '<A HREF = "#"  onclick=MainWindow.getRecordAction("first_record") onMouseOver="status=&quot;' + first_recordhelpstr +'&quot;; return true;")><IMG SRC="' + first_recordgif + '" BORDER="0"></A>'
		outputval = outputval +  '<A HREF = "#"  onclick=MainWindow.getRecordAction("previous_record") onMouseOver="status=&quot;' + previous_recordhelpstr +'&quot;; return true;")><IMG SRC="' + previous_recordgif + '" BORDER="0"></A>'
	}

return outputval
}


function getNavEndButtons(at_end){
	var outputval = ""
	var buttonGifPath = button_gif_path
	if(at_end == "True"){
		next_recordhelpstr = "not available, currently at last record."
		last_recordhelpstr = "not available,  currently at last record."
		var next_recordgif = buttonGifPath + "next_record_dimbtn.gif"
		var last_recordgif =  buttonGifPath + "last_record_dimbtn.gif"
		outputval = outputval +  '<A HREF = "#"  onMouseOver="status=&quot;' + next_recordhelpstr +'&quot;; return true;")><IMG SRC="' + next_recordgif + '" BORDER="0"></A>'
		outputval = outputval +  '<A HREF = "#"  onMouseOver="status=&quot;' + last_recordhelpstr +'&quot;; return true;")><IMG SRC="' + last_recordgif + '" BORDER="0"></A>'
	}
	else {
		next_recordhelpstr = "go to next record of current recordset."
		last_recordhelpstr = "go to last record of current recordset."
		var last_recordgif =  buttonGifPath + "last_record_btn.gif"
		var next_recordgif = buttonGifPath + "next_record_btn.gif"
		outputval = outputval +  '<A HREF = "#"  onclick=MainWindow.getRecordAction("next_record") onMouseOver="window.status=&quot;' + next_recordhelpstr +'&quot;; return true;")><IMG SRC="' + next_recordgif + '" BORDER="0"></A>'
		outputval = outputval +   '<A HREF = "#"  onclick=MainWindow.getRecordAction("last_record") onMouseOver="status=&quot;' + last_recordhelpstr +'&quot;;return true;")><IMG SRC="' + last_recordgif + '" BORDER="0"></A>'
	}
	return outputval
}
function getNavGotoButton(){
	var outputval = ""
	var buttonGifPath = button_gif_path
	rec_numberhelpstr = "specify a record number"
	rec_numbergif = buttonGifPath + "gotorecord_btn.gif"
	outputval = outputval +  '<A HREF = "#"  onclick=MainWindow.getRecordAction("goto_record") onMouseOver="status=&quot;' + rec_numberhelpstr +'&quot;; return true;")><IMG SRC="' + rec_numbergif + '" BORDER="0"></A>'
	return outputval
}
function getNavGetMoreButton(){
	var outputval = ""
	var buttonGifPath = button_gif_path
	if (more_available == "True"){
		var get_nextgif =  buttonGifPath + "get_more_btn.gif"
		get_nexthelpstr = "get next set of hits from current query"
		//outputval = outputval + '<A HREF = "#" onclick=MainWindow.getAction("get_next") onMouseOver="status=&quot;' + get_nexthelpstr +'&quot;; return true;")><IMG SRC="' + get_nextgif + '" BORDER="0"></A>'
		outputval = '<A HREF = "#" onclick=MainWindow.getAction("get_next") onMouseOver="status=&quot;' + get_nexthelpstr +'&quot;; return true;")><IMG SRC="' + get_nextgif + '" BORDER="0"></A>'
	}
	return outputval
}
				
//function for building the buttons in the record navigation bar
// excludeButtonList is used to optionally eliminate some of the buttons
// For example seting it to "Exclude:RecordHeader,ResultView,Goto,GetMore" will make 
// the record header, "list view", "Get more hits" and "Goto Record Nuber" buttons vanish
function getRecordNav(excludeButtonList){
	var outputval = ""
	
	if (!excludeButtonList){
		excludeButtonList = ""
	}
	else{	
		excludeButtonList = excludeButtonList.toLowerCase()
	}
	var button_override=MainWindow.button_override
	if (button_override.length > 0) {
		if (excludeButtonList.length>0){
			excludeButtonList = excludeButtonList + "," + button_override.toLowerCase()
		}
		else{
			excludeButtonList =  button_override.toLowerCase()
		}
	}
		if ((fEmptyRecordset == "False")||(fEmptyRecordset == "false")){
			var buttonGifPath = button_gif_path
			if (excludeButtonList.indexOf("recordheader") == -1) outputval = getNavRecordHeader();

				if((formmode.toLowerCase() == "list")||(formmode.toLowerCase() == "edit")){
					if (base_records_found > 0){
					start_btn_value=MainWindow.document.forms["nav_variables"].elements["AtStart"].value
					outputval=outputval +  getNavStartButtons(start_btn_value)	
					if (excludeButtonList.indexOf("goto") == -1) outputval=outputval +  getNavGotoButton();
					end_btn_value=MainWindow.document.forms["nav_variables"].elements["AtEnd"].value

					outputval=outputval +  getNavEndButtons(end_btn_value)	
					if (excludeButtonList.indexOf("getmore") == -1) outputval=outputval + "&nbsp;" + getNavGetMoreButton();
					}
					if (excludeButtonList.indexOf("resultview") == -1) outputval=outputval + getResultViewButtons();
				}
			return outputval
					
		}
	return ""
	
}



function getMessage(){
alert("sorry, not fully implemented yet")
}

//function for performing actions specified in the record navigation bar
function getSubFormAction(actionstr,origrequest,thetotalrecords,theindex){
	setCookie("SubFormPagingMove" + dbname + MainWindow.formgroup,actionstr,1)
	setCookie("TableCurrentIndex" + dbname + MainWindow.formgroup,theindex,1)
	thepath = path_info + '?' + origrequest
	MainWindow.location.replace(thepath)
	}


//function for building the buttons in the record navigation bar
function getSubFormNav(therecords,thecurrentindex,origrequest){
	var at_first = ""
	var at_end = ""
	var totalrecords = new Number(therecords)
	
	if (totalrecords > 1){
		nextbtn = new Object
		previousbtn = new Object
		at_first = false
		if (thecurrentindex == 1){
			at_first = true
		}
		at_end =false
	
		if (thecurrentindex == therecords){
			at_end = true
		}
			var buttonGifPath = button_gif_path

			if(at_first == true){
				previousbtn.helpstr = "not available, currently at first record."
				previousbtn.name = "previous_record"
				previousbtn.imagepath = buttonGifPath + "previous_record_dimbtn.gif"
				document.write ('<A HREF="#" onMouseOver="window.status=previousbtn.helpstr; return true;")><IMG SRC=' + previousbtn.imagepath+ ' BORDER="0"></A>')

				}
			else {
				previousbtn.imagepath = buttonGifPath + "previous_record_btn.gif"
				previousbtn.helpstr = "go to first record of recordset."
				previousbtn.name = "previous_record"
				document.write ('<A HREF="javascript:getSubFormAction(&quot;' + "previous_record" + '&quot;,&quot;' + origrequest + '&quot;,&quot;'+ totalrecords + '&quot;,&quot;'+ thecurrentindex + '&quot;)" onMouseOver="window.status=previousbtn.helpstr; return true;")><IMG SRC=' + previousbtn.imagepath+ ' BORDER="0"></A>')
			}
			if(at_end == true){
				nextbtn.name = "next_record"
				nextbtn.helpstr = "not available, currently at last record."
				nextbtn.imagepath = buttonGifPath + "next_record_dimbtn.gif"
				document.write ('<A HREF="#" onMouseOver="window.status=nextbtn.helpstr; return true;")><IMG SRC=' + nextbtn.imagepath+ ' BORDER="0"></A>')

			}
			else {
			
				nextbtn.name = "next_record"
				nextbtn.imagepath = buttonGifPath + "next_record_btn.gif"
				nextbtn.helpstr = "go to next record of current recordset."
				document.write ('<A HREF="javascript:getSubFormAction(&quot;' + "next_record" + '&quot;,&quot;' + origrequest + '&quot;,&quot;'+ totalrecords + '&quot;,&quot;'+ thecurrentindex + '&quot;)" onMouseOver="window.status=nextbtn.helpstr; return true;")><IMG SRC=' + nextbtn.imagepath+ ' BORDER="0"></A>')

			}

	}
}


function getRecordNumber(recordid){
	document.write ('<font size="2">Record ' + recordid + ' of ' + base_records_found + '</font>')
}
 
 
function goDetailView(thepath){
	MainWindow.document.location.href=thepath + "&time=" + theTimer
}

function goFormView(thepath,theIndex){
	setCookie("PagingMove" + MainWindow.dbname + MainWindow.formgroup,"goto_record",1)
	if (theIndex=="getBaseActualIndex"){
		theIndex = MainWindow.document.forms["nav_variables"].elements["BaseActualIndex"].value
	}
	setCookie("GoToRecord" + MainWindow.dbname + MainWindow.formgroup,theIndex,1)

	//jhs
	//theform  = getCookie("TargetForm" + MainWindow.dbname + MainWindow.formgroup)
	theform = TargetForm_ASPPageName;
	current_location = MainWindow.document.cows_input_form.CurrentLocation.value
	if (current_location.indexOf(theform)!= -1){
		thepath = thepath + "&indexvalue=" + theIndex + "&form_change=false"
		}
	else{
		thepath = thepath + "&indexvalue=" + theIndex + "&form_change=true"
	}
	MainWindow.document.location.href=thepath + "&time=" + theTimer
}

function goFormViewWithSub(thepath,theIndex){
	setCookie("PagingMove" + MainWindow.dbname + MainWindow.formgroup,"goto_record",1)
	//jhs
	//theform  = getCookie("TargetForm" + MainWindow.dbname + MainWindow.formgroup)
	theform = TargetForm_ASPPageName;
	
	current_location = MainWindow.document.cows_input_form.CurrentLocation.value
	if (current_location.indexOf(theform)!= -1){
		thepath = thepath + "&indexvalue=" + theIndex + "&form_change=false"
		}
	else{
		thepath = thepath + "&indexvalue=" + theIndex + "&form_change=true"
	}
	setCookie("SubFormPagingMove" + + MainWindow.dbname + MainWindow.formgroup,"first_request",1)
	setCookie("TableCurrentIndex" + + MainWindow.dbname + MainWindow.formgroup,"",1)
	MainWindow.document.location.href=thepath + "&time=" + theTimer

}
function goNoNavView(thepath){
	lastLocation = MainWindow.document.cows_input_form.CurrentLocation.value
	setCookie("LastLocation" + MainWindow.dbname + MainWindow.formgroup,lastLocation, 1)
	MainWindow.document.location.href=thepath + "&time=" + theTimer

}

function getFormViewBtn(btnname,formname,currentindex, formmode_name, out_type, formgroup_overide, alt_unique_id){
	if (currentindex == ""){
		currentindex = MainWindow.document.forms["nav_variables"].elements["CurrentIndex"].value
	}
	var uniqueid = currentindex
	var commit_type = ""
	//jhs
	//setCookie("TargetForm" + MainWindow.dbname + MainWindow.formgroup,formname,1)
	TargetForm_ASPPageName = formname;
	//var commit_type=MainWindow.document.forms["nav_variables"].elements["CommitType"].value
	//var uniqueid  =MainWindow.document.forms["nav_variables"].elements["UniqueID"].value

	if ((formgroup_overide != "undefined")&&(formgroup_overide != null)){
		thedbname = "?formgroup=" + formgroup_overide + "&dbname=" + dbname
	}
	else{
		thedbname = "?formgroup=" + formgroup + "&dbname=" + dbname
	}
	theformpath = app_Path + '/' + dbname + '/' + formname + thedbname
	if ((formname.charAt(0) == "/")||(formname.charAt(0) == ".")){
		theformpath = formname + thedbname}
	else{
		theformpath = app_Path + '/' + dbname + '/' + formname + thedbname
	}
	if ((formmode_name == "undefined")||(formmode_name == null)){
		themode = "edit"
	}
	else{
		themode = formmode_name
	}
	theformmode = "&formmode=" + themode
	
	if ((alt_unique_id != "undefined")&&(alt_unique_id != null)){
		recordID = "&unique_id=" + uniqueid + "&commit_type=" + commit_type + "&alt_unique_id=" + alt_unique_id 
	}
	else{
		recordID = "&unique_id=" + uniqueid + "&commit_type=" + commit_type 
	}
	fullpath = theformpath + theformmode + recordID
	var buttonGifPath = ""
	if (btnname.charAt(0) == "/"){
		buttonGifPath=  btnname
	}
	 else{
		buttonGifPath= button_gif_path +  btnname
	}
	if(out_type=="text"){
		textval='<A HREF="javascript:MainWindow.goFormView(&quot;' + fullpath + '&quot;,&quot;'+ currentindex + '&quot;)"><IMG SRC="' +  buttonGifPath  + '" BORDER="0"></A>'
		return textval
	}
	else{

			document.write('<A HREF="javascript:goFormView(&quot;' + fullpath + '&quot;,&quot;'+ currentindex + '&quot;)"><IMG SRC="' +  buttonGifPath  + '" BORDER="0"></A>')
		}

	
}




function getFormViewLink(linkval,formname, currentindex, formmode_name,uniqueid, append_to_query){
	//jhs
	//setCookie("TargetForm" + MainWindow.dbname + MainWindow.formgroup,formname,1)
	TargetForm_ASPPageName = formname;
	setCookie("PagingMove" + MainWindow.dbname + MainWindow.formgroup,"goto_record",1)
	//commit_type=MainWindow.document.forms["nav_variables"].elements["CommitType"].value
	thedbname = "?formgroup=" + formgroup + "&dbname=" + dbname
	if ((formname.charAt(0) == "/")||(formname.charAt(0) == ".")){
		theformpath = formname + thedbname}
	else{
		theformpath = app_Path + '/' + dbname + '/' + formname + thedbname
	}
	
	if ((formmode_name == "undefined")||(formmode_name == null)){
		themode = "edit"
	}
	else{
		themode = formmode_name
	}
	theformmode = "&formmode=" + themode
	recordID =  "&unique_id=" + uniqueid + "&commit_type=" + commit_type
	fullpath = theformpath + theformmode + recordID + append_to_query
	document.write('<A HREF="javascript:goFormView(&quot;' + fullpath + '&quot;,&quot;'+ currentindex + '&quot;)">')
	document.write(linkval)
	document.write('</A>')
	
}

function goFormViewLink(linkval,formname, currentindex, formmode_name,uniqueid, append_to_query){
	//jhs
	//setCookie("TargetForm" + MainWindow.dbname + MainWindow.formgroup,formname,1)
	TargetForm_ASPPageName = formname;
	setCookie("PagingMove" + MainWindow.dbname + MainWindow.formgroup,"goto_record",1)
	commit_type=MainWindow.document.forms["nav_variables"].elements["CommitType"].value
	thedbname = "?formgroup=" + formgroup + "&dbname=" + dbname
	theformpath = app_Path + '/' + dbname + '/' + formname + thedbname
	if ((formmode_name == "undefined")||(formmode_name == null)){
		themode = "edit"
	}
	else{
		themode = formmode_name
	}
	theformmode = "&formmode=" + themode
	recordID =  "&indexvalue=" + currentindex + "&unique_id=" + uniqueid + "&commit_type=" + commit_type
	fullpath = theformpath + theformmode + recordID + append_to_query
	MainWindow.document.location.href=fullpath + "&time=" + theTimer

	goFormView(fullpath,currentindex)
	
}

function getFormViewWithSubBtn(btnname,formname,currentindex,subformcurrentindex){
	//jhs
	//setCookie("TargetForm" + MainWindow.dbname + MainWindow.formgroup,formname,1)
	TargetForm_ASPPageName = formname;
	MainWindow.document.forms["nav_variables"].elements["CurrentRecord"].value = currentindex
	thedbname = "?formgroup=" + formgroup + "&dbname=" + dbname
	theformpath = app_Path + '/' + dbname + '/' + formname + thedbname
	theformmode = "&formmode=edit&TableCurrentIndex=" + subformcurrentindex
	fullpath = theformpath + theformmode 
	var buttonGifPath = button_gif_path + btnname
	document.write('<A HREF="javascript:goFormViewWithSub(&quot;' + fullpath + '&quot;,&quot;'+ currentindex + '&quot;)"><IMG SRC="' +  buttonGifPath  + '" BORDER="0"></A>')
}


function getDetailBtn(btnname,formname,baseid,current_base_record,total_base_records,tableuniqueid,current_table_record){
	//set the current record in the header so that you have access to it always
	MainWindow.document.forms["nav_variables"].elements["CurrentRecord"].value = current_base_record
	thedbname = "?formgroup=" + formgroup + "&dbname=" + dbname
	theformmode = "&formmode=edit"
	theformpath = app_Path + '/' + dbname + '/' + formname + thedbname
	thetableuniqueid= "&TableUniqueID=" + tableuniqueid
	thebaseid = "&BaseID=" + baseid
	thecurrentbaserecord= "&BaseCurrentRecord=" + current_base_record
	var temp = new Number(current_base_record)
	thecurrentbaseindex= "&BaseCurrentIndex=" + temp
	thetotalbaserecords = "&BaseRecordCount=" + total_base_records
	thecurrenttablerecord = "&TableCurrentRecord=" + current_table_record
	fullpath = theformpath   + theformmode  + thebaseid  + thecurrentbaseindex + thecurrentbaserecord + thetotalbaserecords +  thetableuniqueid + thecurrenttablerecord 
	var buttonGifPath = button_gif_path + btnname
	bookmarkhelpstr = "show details of this record in form view"
	document.write('<A HREF="javascript:goDetailView(&quot;'+fullpath+'&quot;)"><IMG SRC="' +  buttonGifPath  + '" BORDER="0"></A>')
	}
	
function getNoNavViewBtn(btnname,formname,no_nav_message,baseid,base_cur_rec){
	//set the current record in the header so that you have access to it always
	thedbname = "?formgroup=" + formgroup + "&dbname=" + dbname
	theformmode = "&formmode=no_nav_view"
	theformpath = app_Path + '/' + dbname + '/' + formname + thedbname
	thebaseid = "&BaseID=" + baseid
	fullpath = theformpath   + theformmode  + thebaseid + "&BaseCurrentRecord=" + base_cur_rec + "&no_nav_message=" + escape(no_nav_message)
	var buttonGifPath = button_gif_path + btnname
	bookmarkhelpstr = "show details of this record in form view"
	document.write('<A HREF="javascript:goNoNavView(&quot;'+fullpath+'&quot;)"><IMG SRC="' +  buttonGifPath  + '" BORDER="0"></A>')
	}
function getMultiSubNoNavBtn(btnname,formname,no_nav_message,baseid,base_cur_rec,subform_names){
	//set the current record in the header so that you have access to it always
	var temp = subform_names.split(',')
	for(i=0;i<temp.length;i++){
		setCookie(temp[i] + "SubFormPagingMove" +  MainWindow.dbname + MainWindow.formgroup,"first_request",1)
		setCookie(temp[i] + "TableCurrentIndex" + MainWindow.dbname + MainWindow.formgroup,"",1)
	}
	thedbname = "?formgroup=" + formgroup + "&dbname=" + dbname
	theformmode = "&formmode=no_nav_view"
	theformpath = app_Path + '/' + dbname + '/' + formname + thedbname
	thebaseid = "&BaseID=" + baseid
	fullpath = theformpath   + theformmode  + thebaseid + "&BaseCurrentRecord=" + base_cur_rec + "&no_nav_message=" + escape(no_nav_message) + "&subform_nav=" + subform_names
	var buttonGifPath = button_gif_path + btnname
	bookmarkhelpstr = "show details of this record in form view"
	document.write('<A HREF="javascript:goNoNavView(&quot;'+fullpath+'&quot;)"><IMG SRC="' +  buttonGifPath  + '" BORDER="0"></A>')
	}	
//function for performing actions specified in the record navigation bar
function getMultSubFormAction(actionstr,origrequest,thetotalrecords,theindex,formname){
	setCookie(formname + "SubFormPagingMove" + MainWindow.dbname + MainWindow.formgroup,actionstr,1)
	setCookie(formname + "TableCurrentIndex" + MainWindow.dbname + MainWindow.formgroup,theindex,1)
	thepath = path_info + '?' + origrequest
	MainWindow.location.replace(thepath)
	}

function getMultiSubFormNav(formname,therecords,thecurrentindex,origrequest){
	var at_first = ""
	var at_end = ""
	var totalrecords = new Number(therecords)
	
	if (totalrecords > 1){
		nextbtn = new Object
		previousbtn = new Object
		at_first = false
		if (thecurrentindex == 1){
			at_first = true
		}
		at_end =false
	
		if (thecurrentindex == therecords){
			at_end = true
		}
			var buttonGifPath = button_gif_path

			if(at_first == true){
				previousbtn.helpstr = "not available, currently at first record."
				previousbtn.name = "previous_record"
				previousbtn.imagepath = buttonGifPath + "previous_record_dimbtn.gif"
				document.write ('<A HREF="#" onMouseOver="window.status=previousbtn.helpstr; return true;")><IMG SRC=' + previousbtn.imagepath+ ' BORDER="0"></A>')

				}
			else {
				previousbtn.imagepath = buttonGifPath + "previous_record_btn.gif"
				previousbtn.helpstr = "go to first record of recordset."
				previousbtn.name = "previous_record"
				document.write ('<A HREF="javascript:getMultSubFormAction(&quot;' + "previous_record" + '&quot;,&quot;' + origrequest + '&quot;,&quot;'+ totalrecords + '&quot;,&quot;'+ thecurrentindex + '&quot;,&quot;'+ formname + '&quot;)" onMouseOver="window.status=previousbtn.helpstr; return true;")><IMG SRC=' + previousbtn.imagepath+ ' BORDER="0"></A>')
			}
			if(at_end == true){
				nextbtn.name = "next_record"
				nextbtn.helpstr = "not available, currently at last record."
				nextbtn.imagepath = buttonGifPath + "next_record_dimbtn.gif"
				document.write ('<A HREF="#" onMouseOver="window.status=nextbtn.helpstr; return true;")><IMG SRC=' + nextbtn.imagepath+ ' BORDER="0"></A>')

			}
			else {
			
				nextbtn.name = "next_record"
				nextbtn.imagepath = buttonGifPath + "next_record_btn.gif"
				nextbtn.helpstr = "go to next record of current recordset."
				document.write ('<A HREF="javascript:getMultSubFormAction(&quot;' + "next_record" + '&quot;,&quot;' + origrequest + '&quot;,&quot;'+ totalrecords + '&quot;,&quot;'+ thecurrentindex + '&quot;,&quot;'+ formname + '&quot;)" onMouseOver="window.status=nextbtn.helpstr; return true;")><IMG SRC=' + nextbtn.imagepath+ ' BORDER="0"></A>')

			}

	}
}
	
	
function goLink(formname,tableuniqueid,baseid, current_base_record,total_base_records ){
	thedbname = "?formgroup=" + formgroup + "&dbname=" + dbname
	theformpath = app_Path + '/' + dbname + '/' + formname + thedbname
	theformmode = "&formmode=edit"
	thetableuniqueid= "&TableUniqueID=" + tableuniqueid
	thebaseid = "&BaseID=" + baseid
	thecurrentbaserecord= "&BaseCurrentRecord=" + current_base_record
	thetotalbaserecords = "&BaseTotalRecords=" + total_base_records
	thecurrenttablerecord = "&TableCurrentRecord=" + current_table_record
	fullpath = theformpath   + theformmode  + thebaseid  + thecurrentbaserecord + thetotalbaserecords +  thetableuniqueid + thecurrenttablerecord 
	MainWindow.document.location.href = fullpath + "&time=" + theTimer

}


//preload images for mark and unmark buttons
	var buttonGifPath = button_gif_path
	var markbtnlist = "mark_record,unmark_record"
	var markbtnArray = markbtnlist.split(",")
	//!DGB! 08/08/2002 allow different markhit images
	if (!markbtnNamelist) var markbtnNamelist = "mark_record,unmark_record";
	var markbtnNameArray = markbtnNamelist.split(",")
	var imageDB = new Array()
	for (i=0;i<markbtnArray.length;i++){
		imageDB[markbtnArray[i]] = new Image()
		imageDB[markbtnArray[i]].src = buttonGifPath + markbtnNameArray[i] + "_btn.gif"
	}
function getMarkBtn(uniqueid){
	var excludeButtonList = ""
	var button_override=MainWindow.button_override
	if (button_override.length > 0) {
		if (excludeButtonList.length>0){
			excludeButtonList = excludeButtonList + "," + button_override.toLowerCase()
		}
		else{
			excludeButtonList =  button_override.toLowerCase()
		}
	}
	if (excludeButtonList.indexOf("mark_record") == -1){
		if (MainWindow.UserInfoWindow != self){
			var inlist=false
			if (marked_hits == ""){
					var temp_marked_hits ="<%Session("MarkedHits" & dbkey & formgroup)%>"
					if ((temp_marked_hits == null)||(temp_marked_hits == -1)){
						marked_hits = ""
					}
					else{
						marked_hits = temp_marked_hits
					}
			}
			temparray = marked_hits.split(",")
			for (i=0;i<temparray.length;i++){
				if (uniqueid==temparray[i]){
				inlist=true}
			}
			if (inlist==false){
				//!DGB! 08/08/2002 allow different markhit images
				var buttonGifPath = imageDB["mark_record"].src
				markhelpstr = "mark/unmark this hit"
				document.write ('<A HREF = "javascript:doMarkHit(' + uniqueid + ')" onMouseOver="window.status='  + "markhelpstr" + '; return true;"><IMG SRC="' +  buttonGifPath  + '" Name=button' + uniqueid + ' BORDER="0"></A>')
			}
			else{
				//!DGB! 08/08/2002 allow different markhit images
				var buttonGifPath = imageDB["unmark_record"].src
				markhelpstr = "mark/unmark this hit"
				document.write ('<A HREF = "javascript:doMarkHit(' + uniqueid + ')" onMouseOver="window.status='  + "markhelpstr" + '; return true;"><IMG SRC="' +  buttonGifPath  + '" Name=button' + uniqueid + ' BORDER="0"></A>')
			}
		}
	}
}


function doMarkHit(uniqueid){
		theWindow =MainWindow.UserInfoWindow
		dbname = MainWindow.dbname
		theBtn = eval('MainWindow.document.images["'+ 'button' +  uniqueid + '"]')
		var UserInfoActionVal = "";
		if((theBtn.src==imageDB["mark_record"].src)||(theBtn.src.indexOf("/mark_record_btn.gif")!=-1)){
			//theWindow.setUserInfoCookie("UserAction" + MainWindow.dbname + MainWindow.formgroup,"doMarkHit")
			UserInfoActionVal = "doMarkHit";
			theBtn.src = imageDB["unmark_record"].src}
		else{
			//theWindow.setUserInfoCookie("UserAction" + MainWindow.dbname + MainWindow.formgroup,"doUnMarkHit")
			UserInfoActionVal = "doUnMarkHit";
			theBtn.src = imageDB["mark_record"].src
		}
		if(MainWindow.UserInfoWindow != self){
			MainWindow.UserInfoWindow.document.location.replace(app_Path + "/user_info.asp?dbname=" + dbname + "&formgroup=" + formgroup+ "&HitID=" + uniqueid + "&UserInfoActionVal=" + UserInfoActionVal)
		}else{
			MainWindow.UserInfoWindow.location.replace(app_Path + "/user_info.asp?dbname=" + dbname + "&formgroup=" + formgroup + "&HitID=" + uniqueid + "&UserInfoActionVal=" + UserInfoActionVal)
		}
}	


function doMarkAll(uniqueid){ 
    theWindow =MainWindow.UserInfoWindow
	dbname = MainWindow.dbname	   
	/* CSBR# - 119688
	   Changed By - Soorya Anwar
       Date - 30-Dec-2010
       Purpose - If the count of records in result set	exceeds the configured maximum limit 
                 for marking records, a relevant pop up message is displayed.       
	*/	
	var MaxMarkedRecordsLimit = parseInt('<%= Application("MARKED_HITS_MAX")%>')
    if (MaxMarkedRecordsLimit != 0){      
         if (MaxMarkedRecordsLimit < base_records_found){         
             alert("Only the first " + MaxMarkedRecordsLimit + " records shall be marked at one time, as your results record count exceeds the maximum configured limit.")
         }        
     }	
	//end of Change for CSBR 119688
	//theWindow.setUserInfoCookie("UserAction" + MainWindow.dbname + MainWindow.formgroup,"doMarkAll")
		var UserInfoActionVal = "doMarkAll";
		if(MainWindow.UserInfoWindow != self){
			MainWindow.UserInfoWindow.document.location.replace(app_Path + "/user_info.asp?dbname=" + dbname + "&formgroup=" + formgroup + "&UserInfoActionVal=" + UserInfoActionVal)
		}else{
			MainWindow.UserInfoWindow.location.replace(app_Path + "/user_info.asp?dbname=" + dbname + "&formgroup=" + formgroup + "&UserInfoActionVal=" + UserInfoActionVal)
		}
}
	
function showImage(){
theDoc = MainWindow.document
theImages=""
for (i=0;i<theDoc.images.length;i++){
theImages = theImages + theDoc.images[i].name}
(theImages)
}


function goOther(fullpath){
	MainWindow.document.location.href = fullpath + "&time=" + theTimer


}



function doEditStructure(field_name,unqiueid){
		var w = ""
		full_field_name = field_name + unqiueid
		getStructureFields_Reg(full_field_name)
		if (w.name == null){
			var w = window.open(edit_structure_path + "?uniqueid=" + uniqueid + "&formmode=" + formmode + "&field_name=" + full_field_name ,"reg_duplicates","width=240,height=280,scrollbars=yes,status=no,resizable=no");
			w.focus()}
		else{
			w.focus()}
	
}

function goRecordEditMode(formname,uniqueid,commit_type, theIndex){

		setCookie("PagingMove" + MainWindow.dbname + MainWindow.formgroup,"goto_record",1)
		setCookie("GoToRecord" + MainWindow.dbname + MainWindow.formgroup,theIndex,1)
		thedbname = "?formgroup=" + formgroup + "&dbname=" + dbname
		theformpath = app_Path + '/' + dbname + '/' + formname + thedbname		
		theformmode = "&formmode=" + "edit_record"
		recordID = "&unique_id=" + uniqueid + "&commit_type=" + commit_type
		fullpath = theformpath + theformmode + recordID
		thepath = fullpath + "&indexvalue=" + theIndex + "&form_change=false"
		MainWindow.location.href = thepath
}


function getEditTempBtn(uniqueid, commit_type) {
	var buttonGifPath = button_gif_path + "editTemp_btn.gif"
	edithelpstr = "edit this record in the temporary table."
	outputval = '<br><A HREF = "javascript:doEditTemp(&quot;' + uniqueid + '&quot;,&quot;' + commit_type + '&quot;)" onMouseOver="window.status=&quot;'  + edithelpstr + '&quot;; return true;"><IMG SRC="' +  buttonGifPath  + '" Name=button' + uniqueid + ' BORDER="0" ALT="Edit the data for this record in the temporary table"></A>'
	document.write(outputval)

}

function getEditBtn(uniqueid, commit_type) {
	thedbname = "?formgroup=" + formgroup + "&dbname=" + dbname
	theformpath = app_Path + '/' + dbname + '/' + formname + thedbname
	theformmode = "&formmode=edit_record"
	fullpath = theformpath + theformmode 

	var buttonGifPath = button_gif_path + btnname
	document.write('<A HREF="javascript:goFormView(&quot;' + fullpath + '&quot;,&quot;'+ currentindex + '&quot;)"><IMG SRC="' +  buttonGifPath  + '" BORDER="0"></A>')

	var buttonGifPath = button_gif_path + "/editTemp_btn.gif"
	edithelpstr = "edit this record in the temporary table."
	outputval = '<br><A HREF = "javascript:goEditRecord(&quot;' + uniqueid + '&quot;,&quot;' + commit_type + '&quot;)" onMouseOver="window.status=&quot;'  + edithelpstr + '&quot;; return true;"><IMG SRC="' +  buttonGifPath  + '" Name=button' + uniqueid + ' BORDER="0" ALT="Edit the data for this record in the temporary table"></A>'
	document.write(outputval)

}
function goEditRecord(uniqueid, commit_type){

	setCookie("PagingMove" + MainWindow.dbname + MainWindow.formgroup,"goto_record",1)
	setCookie("GoToRecord" + MainWindow.dbname + MainWindow.formgroup,theIndex,1)
	thepath = thepath + "&indexvalue=" + theIndex + "&form_change=true"
	MainWindow.document.location.href=thepath + "&time=" + theTimer
	
}

function doEditTemp(uniqueid, commit_type){
	current_location = MainWindow.document.cows_input_form.CurrentLocation.value
	new_location = current_location.replace("&formmode=edit", "&formmode=edit_record")
	MainWindow.document.location.href = new_location
}







function getStructureFields_Reg(structure_field_name){
	getStrucData_Reg(structure_field_name)
	MainWindow.document.cows_input_form.ExactSearchFields.value = structure_field_name
}

function getStrucData_Reg(structure_field_name){
		getData(structure_field_name)

		if (MacNet3 != 1) {
			getPlugVer(structure_field_name);
			MainWindow.document.cows_input_form.Mac3.value = "False"
			}
		else {
			MainWindow.document.cows_input_form.Mac3.value = "True"
		}
	}

function doEditFullScreen(fullfieldname){
	var z = ""
	structure_transfer = getBase64Data(fullfieldname + "_ctrl")
	structure_transfer_name = fullfieldname
	if (z.name == null){
		z = window.open(app_Path + "/edit_structure.asp"+ "?fieldname=" + fullfieldname + "&dbname=" + dbname,"","width=800,height=600,status=yes,resizable=yes");
		z.name = "edit_structure"
		}
	else{
		z.focus()}
	
	

}

function doneStrucEdit(fullfieldname){
	window.setTimeout("doUpdate()",200)
		
}

function doneRegStrucEdit(){
	window.setTimeout("doRegUpdate()",200)

		
}

function doUpdate(){
	strucVar = structure_transfer
	sourceStruc =structure_transfer_name + "_ctrl"
	cd_clear(sourceStruc)
	if (strucVar.length != 0 ){
		cd_putData(sourceStruc, "chemical/x-cdx", strucVar)
	}	
}



function doStructureZoom(fullfieldname){
	z = ""
	structure_transfer = getBase64Data(fullfieldname + "_ctrl")
	structure_transfer_name = fullfieldname
	structure_transfer_name = fullfieldname
	if (z.name == null){
		z = window.open(app_Path + "/zoom_structure.asp"+ "?fieldname=" + fullfieldname + "&dbname=" + dbname,"","width=800,height=600,status=yes,resizable=yes");
		z.name = "zoom_structure"
	}
	else{
		z.focus()
	}
	
}

function doStructureZoomNP(fullfieldname){
	var outputval = ""
	tempPath = Application("TempFileDirectory" & dbkey)
	fileNameRoot = fullfieldname
	rootPath =  tempPath  + fileNameRoot
	zoomGifPath = rootPath +  "zoom.gif"
	closebutton = button_gif_path  + "close_btn.gif"
	
	outputval = "<HTML><HEAD><TITLE>Zoom Structure</TITLE></HEAD><BODY>"
	outputval = outputval + '<A HREF = "javascript:window.close();" onMouseOver="window.status=&quot;' + closehelpstr + '&quot;; return true;"><IMG SRC="' +  closebutton + '" BORDER="0"></A>'
	outputval = outputval + '<IMG SRC= "' + zoomGifPath + '" Border = "0">'
	outputval = outputval + "</BODY></HTML>"

	z = ""
	if (z.name == null){
		z = window.open("", "","width=800,height=600,status=yes,resizable=yes");
		document.write (outputval)
		z.name = "zoom_structure"
	}
	else{
		z.focus()
	}
	
}

function getFullSreenBtn(fullfieldname) {
	var outputval = ""
	var buttonGifPath = button_gif_path + "full_screen_edit_btn.gif"
	outputval = '<A HREF = "javascript:doEditFullScreen(&quot;' + fullfieldname + '&quot;)" onMouseOver="window.status='  + "&quot;edit structure in larger window&quot;" + '; return true;"><IMG SRC="' +  buttonGifPath + '" BORDER="0"></A>'
	document.write (outputval)
}

function getStrucZoomBtn(fullfieldname) {
	var outputval = ""
	var buttonGifPath = button_gif_path + "zoom_btn.gif"
	outputval = '<A HREF = "javascript:doStructureZoom(&quot;' + fullfieldname + '&quot;)" onMouseOver="window.status='  + "&quot;show structure in larger window&quot;" + '; return true;"><IMG SRC="' +  buttonGifPath + '" BORDER="0"></A>'
	document.write (outputval)

}


function getDimmedBtn(btnname,theMsg) {
	var outputval = ""
	var buttonGifPath = button_gif_path + btnname
	document.write('<A HREF="javascript:alert(&quot;' + theMsg + '&quot;)"><IMG SRC="' +  buttonGifPath  + '" BORDER="0"></A>')
	document.write (outputval)
}

function updateSelectedValue(theform,elm){

	var theFieldname = elm.name.replace("list", "")
	var theField = theform.elements[theFieldname]
	var theSelectBox = elm.options[elm.selectedIndex]
	theField.value = theSelectBox.value

	if (MainWindow.formmode.toLowerCase() == "edit_record"){
		UpdateRelUpdateFields2(theform,theFieldname)
		UpdateTable_Row_IDS2(theform,theFieldname)
		UpdateTable_Names2(theform,theFieldname)
	}
	elm.focus()
	//window.focus()
	return true
}

function updateSelectedText(theform,elm){
	var theFieldname = elm.name.replace("list", "")
	var theField = theform.elements[theFieldname]
	var theSelectBox = elm.options[elm.selectedIndex]	
	theField.value = theSelectBox.text
	if (MainWindow.formmode.toLowerCase() == "edit_record"){
		UpdateRelUpdateFields2(theform,theFieldname)
		UpdateTable_Row_IDS2(theform,theFieldname)
		UpdateTable_Names2(theform,theFieldname)
	}
	elm.focus()
	//window.focus()
	return true
}

function UpdateFieldVal(theform,elm){
	var origField = ""
	var submitField = ""
	var theFieldname = elm.name.replace("_orig", "")
	origField = elm
	
	var submitField = theform.elements[theFieldname]
	//var submitField = elm.name.replace("_orig", "")
	
	if (submitField.value!=origField.value){
		submitField.value = origField.value
		UpdateRelUpdateFields2(theform,theFieldname)
		UpdateTable_Row_IDS2(theform,theFieldname)
		UpdateTable_Names2(theform,theFieldname)
	}
	
	//window.focus()
return true
}

function UpdateCBFieldVal(theform,elm){
	var origField = ""
	var submitField = ""
	var fullfieldname = elm.name.replace("_orig","")
	origField = elm
	submitField =theform.elements[fullfieldname]
	theChecked = origField.checked
		if(theChecked == true){
			origValue = 1
		}
		else{
			origValue = 0
		}
	//elm.focus()
	//window.focus()
	if (origValue!=submitField.value){
		submitField.value = origValue
		if (formmode.toLowerCase()=="edit_record"){
			UpdateRelUpdateFields2(theform,fullfieldname)
			UpdateTable_Row_IDS2(theform,fullfieldname)
			UpdateTable_Names2(theform,fullfieldname)
		}
	}
return true
}

function UpdateAddEditVal(fullfieldname){
	
	UpdateRelUpdateFields(fullfieldname)
	UpdateTable_Row_IDS(fullfieldname)
	UpdateTable_Names(fullfieldname)
}

function UpdateRelUpdateFields(fullfieldname){
	var fieldname = MainWindow.document.cows_input_form.RelationalSearchFields
	var currentVal = fieldname.value
	var fieldAlreadyAppended = false;
	tempArr = currentVal.split(",");
	for (i = 0; i < tempArr.length; i++) {
		if ((tempArr[i].indexOf(fullfieldname) != -1) && (tempArr[i].length == fullfieldname.length)) {
			fieldAlreadyAppended = true;
		}
	}
	if (fieldAlreadyAppended == false) {
		if (currentVal.length == 0){
			currentVal =fullfieldname
			}
		else{
			currentVal = currentVal + "," + fullfieldname
		}
		fieldname.value= currentVal
	}
	return true
}

function UpdateTable_Row_IDS(fullfieldname){
	if (fullfieldname.indexOf(":")!=-1){
		var temp = fullfieldname.split(":")
		rowid_temp= temp[0]
		rowid_temp2 = rowid_temp.split(".")
		rowid = rowid_temp2[1]
		if ((temp[1].indexOf("UID")==-1)&&(temp[1]!="")){
			temp2 = temp[1].split(".")
			if (temp2.length ==3){
				tablename = temp2[0] + "." + temp2[1]}
			else{
				tablename = temp2[0]
			}
			var thename = tablename.toLowerCase() + '_ROW_IDS'
			fieldname =MainWindow.document.cows_input_form.elements[thename]
			currentVal = fieldname.value
			if (currentVal.indexOf(rowid)==-1){
				if (currentVal.length == 0){
					new_Val =  rowid
					}
				else{
					new_Val = currentVal + "," + rowid
				}
				
				fieldname.value= new_Val
			}
		}
		return true
	}
}

function UpdateTable_Names(fullfieldname){
	if (fullfieldname.indexOf(":")!=-1){
			var temp = fullfieldname.split(":")
			table_info = temp[1]
			table_info_array = temp[1].split(".")
			if (table_info_array.length ==3){
				tablename = table_info_array[0] + "." + table_info_array[1]
				}
			else{
				tablename = table_info_array[0]
			}
			var thename = 'row_id_table_names'
			fieldname =MainWindow.document.cows_input_form.elements[thename]
			currentVal = fieldname.value
			if (currentVal.indexOf(tablename)==-1){
				if (currentVal.length == 0){
					new_Val =  tablename
					}
				else{
					new_Val = currentVal + "," + tablename
				}
				fieldname.value= new_Val
			}
		return true
	}
}

function UpdateRelUpdateFields2(theform,fullfieldname){
	var fieldname = theform.RelationalSearchFields
	var currentVal = fieldname.value
	var fieldAlreadyAppended = false;
	tempArr = currentVal.split(",");
	for (i = 0; i < tempArr.length; i++) {
		if ((tempArr[i].indexOf(fullfieldname) != -1) && (tempArr[i].length == fullfieldname.length)) {
			fieldAlreadyAppended = true;
		}
	}
	if (fieldAlreadyAppended == false) {
		if (currentVal.length == 0){
			currentVal =fullfieldname
			}
		else{
			currentVal = currentVal + "," + fullfieldname
		}
		fieldname.value= currentVal
	}
	return true
}

function UpdateTable_Row_IDS2(theform,fullfieldname){
	if (fullfieldname.indexOf(":")!=-1){
		var temp = fullfieldname.split(":")
		rowid_temp= temp[0]
		rowid_temp2 = rowid_temp.split(".")
	
		rowid = rowid_temp2[1]
		if ((temp[1].indexOf("UID")==-1)&&(temp[1]!="")){
			temp2 = temp[1].split(".")
			if (temp2.length == 3){
			tablename = temp2[0] + "." + temp2[1]
			}else{
			tablename = temp2[0]}
			var thename = tablename.toLowerCase() + '_ROW_IDS'
			fieldname =theform.elements[thename]
			currentVal = fieldname.value
			if (currentVal.indexOf(rowid)==-1){
				if (currentVal.length == 0){
					new_Val =  rowid
					}
				else{
					new_Val = currentVal + "," + rowid
				}
				
				fieldname.value= new_Val
			}
		}
		return true
	}
}

function UpdateTable_Names2(theform,fullfieldname){
	if (fullfieldname.indexOf(":")!=-1){
			var temp = fullfieldname.split(":")
			table_info = temp[1]
			table_info_array = temp[1].split(".")
			if(table_info_array.length ==3){
			tablename = table_info_array[0] + "." +  table_info_array[1]
			}else{
			tablename = table_info_array[0]}
			var thename = 'row_id_table_names'
			fieldname =theform.elements[thename]
			currentVal = fieldname.value
			if (currentVal.indexOf(tablename)==-1){
				if (currentVal.length == 0){
					new_Val =  tablename
					}
				else{
					new_Val = currentVal + "," + tablename
				}
				fieldname.value= new_Val
			}
		return true
	}
}


function addStrucAppletFields(fullfieldname){
	if(strucAppletFields.length>0){
			strucAppletFields = strucAppletFields + "," + fullfieldname	
		}
		else
		{
			strucAppletFields = fullfieldname
		}
		
}
	
function addRelLoaded(fullfieldname){

		if(relLoadedFields.length>0){
			relLoadedFields = relLoadedFields + "," + fullfieldname		
		}
		else
		{
			relLoadedFields = fullfieldname
		}
}
function AutoFillField(elm, theValField,theTextField, theValsubmit, theTextsubmit){
	var currentVal = elm.options[elm.selectedIndex].value.toLowerCase()
	if	(currentVal!="header"){
		theTextField.value = elm.options[elm.selectedIndex].text
		theTextsubmit.value = elm.options[elm.selectedIndex].text
		theValField.value = elm.options[elm.selectedIndex].value
		theValsubmit.value  = elm.options[elm.selectedIndex].value
		
		UpdateAddEditVal(theValsubmit.name)
		UpdateAddEditVal(theTextsubmit.name)
		elm.selectedIndex=0
		
		theTextField.focus()
		
	}
	elm.focus()
	//window.focus()
return true

}
function setTabIndex(inputstr, startVal){
	var relLoaded_array = inputstr.split(",")
	if (startVal) {
		var indexValue = startVal}
	else{
		var indexValue = 0
	}
	for (i = 0;i<relLoaded_array.length;i++){
		MainWindow.document.cows_input_form.elements[relLoaded_array[i]].tabIndex=indexValue
		indexValue = indexValue + 1
	}
}

function doAltFormGroupSearch( dbkey,dest_formgroup,criteria,formmode_override,button_override_txt,last_location_input,last_location_text){
	
	var formmode = ""
	var return_location = ""
	var action= "?dataaction=search&metadata_directive=blind_gui"
	var dbname = "&dbname=" + dbkey
	var formgroup = "&formgroup=" + dest_formgroup
	var full_criteria = "&" + criteria
	if ((formmode_override != null) && (formmode_override != "undefined")){
		var formmode = "&formmode_override=" + formmode_override
	}
	if ((button_override_txt != null) && (button_override_txt != "undefined")){
		var button_override = "&button_override=" + button_override_txt  + "&preserve_items=button_override,get_last_location,last_location_text"
	}
	if ((last_location_input!= null) && (last_location_input != "undefined")){
		var last_location = "&get_last_location=" + "true"
		setCookie("lastlocation" + dbkey + dest_formgroup, last_location_input,1)
		if ((last_location_text != null) && (last_location_text != "undefined")){
			var last_location = last_location + "&last_location_text=" + last_location_text
		}
		else{
			var last_location = last_location + "&last_location_text=" + "return to last location"
		}
	}
	
	var fullaction = action_form_path + action + dbname + formgroup  + formmode  + full_criteria + button_override + last_location
	
	MainWindow.document.cows_input_form.action = fullaction
	MainWindow.document.cows_input_form.submit();
	return true	
	
}

function doSubmitAltFormGroupSearch(postString){
	MainWindow.document.cows_input_form.action = postString
	MainWindow.document.cows_input_form.submit();
	return true	

}
function doBuildRSSearch(dbkey,dest_formgroup,id_list,formmode_override,button_override_txt,last_location_input,last_location_text){
	
	var formmode = ""
	var return_location = ""
	var action= "?dataaction=build_rs"
	var dbname = "&dbname=" + dbkey
	var formgroup = "&formgroup=" + dest_formgroup
	var full_criteria = "&id_list=" + id_list
	
	if ((formmode_override != null) && (formmode_override != "undefined")){
		var formmode = "&formmode_override=" + formmode_override
	}
	if ((button_override_txt != null) && (button_override_txt != "undefined")){
		var button_override = "&button_override=" + button_override  
	}
	if ((last_location_input!= null) && (last_location_input != "undefined")){
		var last_location = "&get_last_location=" + "true"
		setCookie("lastlocation" + dbkey + dest_formgroup, last_location_input,1)
		if ((last_location_text != null) && (last_location_text != "undefined")){
			var last_location = last_location + "&last_location_text=" + last_location_text
		}
		else{
			var last_location = last_location + "&last_location_text=" + "return to last location"
		}
	}
	
	var fullaction = action_form_path + action + dbname + formgroup  + formmode  + full_criteria + button_override + last_location + "&preserve_items=button_override,get_last_location,last_location_text"
	MainWindow.document.cows_input_form.action = fullaction
	MainWindow.document.cows_input_form.submit();
	return true	
}

function getHelpTopic(help_path, formgroup, dbname){
	var w = ""
	if (w.name == null){
	var w = window.open(help_path+ "?formgroup=" + formgroup + "&dbname=" + dbname,"help","width=800,height=600,scrollbars=yes,status=no,resizable=yes");
		w.focus()}
	else{
		w.focus()}
}
function doManageQueries(manage_query_mode, dbname, formgroup){
	fullpath = '/<%=Application("appkey")%>/save_query.asp?manage_query_mode=' + manage_query_mode + '&dbname=' + dbname + '&formgroup=' + formgroup + '&formmode=' + MainWindow.formmode
	var w = ""
	if (w.name == null){
		var w = window.open(fullpath,"manage_queries","width=450,height=300,status=no,resizable=yes");
		w.focus()}
	else{
		w.focus()
	}
}

function doManageHitLists(manage_hitlist_mode, dbname, formgroup){

		fullpath = '/<%=Application("appkey")%>/save_query.asp?manage_hitlist_mode=' + manage_hitlist_mode + '&dbname=' + dbname + '&formgroup=' + formgroup + '&formmode=' + MainWindow.formmode
		var w = ""
		if (w.name == null){
			var w = window.open(fullpath,"manage_hitlists","width=450,height=300,status=no,resizable=yes");
			w.focus()}
		else{
			w.focus()
		}
}
		
function doShowMarkedHits(dbname){
	var formgroup = "<%=formgroup%>"
	var actiontemp = MainWindow.action_form_path + '?dataaction=' + 'show_marked' + '&dbname=' + dbname + '&formgroup=' + formgroup 
	MainWindow.document.cows_input_form.action = actiontemp
	MainWindow.document.cows_input_form.submit()
}
	
function doShowLastList(dbname){
	var formgroup = "<%=formgroup%>"
	var actiontemp = MainWindow.action_form_path + '?dataaction=' + 'show_last_list' + '&dbname=' + dbname + '&formgroup=' + formgroup
	MainWindow.document.cows_input_form.action = actiontemp
	MainWindow.document.cows_input_form.submit()
}

function doClearMarkedHits(dbname){
	theWindow =MainWindow.UserInfoWindow
	dbname = MainWindow.dbname
	var formgroup = "<%=formgroup%>"
	var UserInfoActionVal = "doClearMarked"
	//theWindow.setUserInfoCookie("UserAction" + MainWindow.dbname + MainWindow.formgroup,"doClearMarked")
	
	if(MainWindow.UserInfoWindow != self){
		MainWindow.UserInfoWindow.document.location.replace(app_Path + "/user_info.asp?dbname=" + dbname + "&formgroup=" + formgroup + "&UserInfoActionVal=" + UserInfoActionVal)
	}else{
		MainWindow.UserInfoWindow.location.replace(app_Path + "/user_info.asp?dbname=" + dbname + "&formgroup=" + formgroup + "&UserInfoActionVal=" + UserInfoActionVal)
	}
	
}



function doSendMarkedHits(){
	OpenDialog2('<%=Application("POST_MARKED_HITS_PAGE")%>', 'MPostMarked', 2)
}





function reloadNavBar(){

	loadNavBarFrame()
}

		
</script>
