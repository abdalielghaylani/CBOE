<%' Copyright 1999-2003 CambridgeSoft Corporation. All rights reserved
'DO NOT EDIT THIS FILE%>

<!--#INCLUDE VIRTUAL = "/cfserverasp/source/ado.inc"-->
<!--#INCLUDE VIRTUAL = "/cfserverasp/source/server_const_vbs.asp"-->
<!--#INCLUDE VIRTUAL = "/cfserverasp/source/search_func_vbs.asp"-->

<%on error resume next
	Response.Expires = -1
	dbkey = request("dbname")
	formgroup= request("formgroup")
	data_type = request("data_type")
	table_name = request("table_name")
	column_name = request("field_name")
	mime_type = request("mime_type")
	unique_id = request("unique_id")
	lob_display = request("lob_display")
	data_type = request("data_type")
	base_column_name = request("base_column")
	get_data = request("get_data")
	'Response.Write mime_type
	'Response.end
	if lcase(mime_type) = "unknown" then
		Response.Write "The content type for this column is unknown.<BR>" 
		Response.Write "Please contact the system administrator to configure the appropriate content type."
		Response.end
	End if	
	select case UCase(get_data)
		case "TRUE"
			set DataConn = getNewConnection(dbkey, formgroup, "base_connection")
			set cmd = server.CreateObject("adodb.command")
			set rs = server.CreateObject("adodb.recordset")

			cmd.ActiveConnection =  DataConn
			cmd.CommandType = adCmdText
			

			sql = "select " & column_name & " from " & table_name & " where " & base_column_name & "=?"
			cmd.CommandText = sql
			cmd.Parameters.Append cmd.CreateParameter("pID", 5, 1, 0, unique_id) 
			RS.Open cmd
			Response.Clear() 	
			response.ContentType=mime_type
			Set Field = RS.Fields(column_name)
			datatype = Field.type
			Select Case datatype
				case 205 'longvarbinary
					'Write the stream out
					BlockSize = 4096
					FileLength = Field.ActualSize
					NumBlocks = FileLength \ BlockSize
					LeftOver = FileLength Mod BlockSize
					Response.BinaryWrite Field.GetChunk(LeftOver)
					For intLoop = 1 To NumBlocks
						Response.Flush	
						Response.BinaryWrite Field.GetChunk(BlockSize)
					Next
					Response.end
				case 201,203 'longvarchar
				
					BlockSize = 4096
					FileLength = Field.ActualSize
					NumBlocks = FileLength \ BlockSize
					LeftOver = FileLength Mod BlockSize
					For intLoop = 1 To NumBlocks
						if str <> "" then
							str = Field.GetChunk(BlockSize)
						else
							str = str & Field.GetChunk(BlockSize)
						end if
					Next
					str =  Field.GetChunk(LeftOver)
					Response.Flush	
					Response.Write str
					Response.end
			end select
			DataConn.close
			rs.Close
		case "FALSE"
			
			select case data_type
				case "binary"
					Response.Flush
					response.ContentType=mime_type
					Response.BinaryWrite session("picture")
					response.end
				case "text"
					response.flush
					response.ContentType=mime_type
					Response.Write session("picture")
					response.end
			end select
		
	end select
	
%>