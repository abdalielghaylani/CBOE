<%'Copyright 1999-2003 CambridgeSoft Corporation. All rights reserved
'DO NOT EDIT THIS FILE%>
<html>

<head>
<title>ChemOffice Enterprise--Export Hits</title>
<!--#INCLUDE VIRTUAL = "/cfserverasp/source/cows_func_vbs.asp" -->
<!--#INCLUDE VIRTUAL = "/cfserverasp/source/manage_user_settings_vbs.asp"-->
<!--#INCLUDE VIRTUAL = "/cfserverasp/source/utility_func_vbs.asp"-->
<script LANGUAGE="javascript" src="/cfserverasp/source/Choosecss.js"></script>


<% 
'stop
dbkey = request("dbname")
formgroup = request("formgroup")
formmode = request("formmode")
manage_template_mode =  request("manage_template_mode")
%>
<script language="javascript">
var dbname = "<%=dbkey%>"
var formmode= "<%=formmode%>"
var formgroup = "<%=formgroup%>"
var exporttest = "<%=export%>"

function checkAllBoxes(){
	if (exporttest == ""){
		f = document.manage_templates
		for (i=0;i<f.length;i++){
			var e = f.elements[i]
			if (e.type == "checkbox"){
			
			e.checked = true
			
			}
		}
	}
}

function clearAllCheckBoxes(){
	if (exporttest == ""){
		f = manage_templates
		for (i=0;i<f.length;i++){
			var e = f.elements[i]
			if (e.type == "checkbox"){
			
			e.checked = false
			
			}
		}
	}
}

function setTemplate(){
	if (this.document.forms['manage_templates'].elements['templateName'].value.length >0 ){
		var action = 'save'}
		else{
		var action = 'temp'
		}
   var actionpath="/<%=Application("appkey")%>/export_hits.asp"
   var actiontemp = actionpath + '?manage_template_mode=' + action + '&dbname=' + dbname + '&formgroup=' + formgroup + "&formmode=" + formmode
	document.manage_templates.action = actiontemp
	document.manage_templates.submit()
}


function cancelTemplate(){
	var actionpath="/<%=Application("appkey")%>/export_hits.asp"
    var actiontemp = actionpath + '?manage_template_mode=cancel&dbname=' + dbname + '&formgroup=' + formgroup + "&formmode=" + formmode
	document.manage_templates.action = actiontemp
	document.manage_templates.submit()
}

function selectTemplate(){
	var templateName = this.document.forms['manage_templates'].elements['saved_templates'].options[this.document.forms['manage_templates'].elements['saved_templates'].selectedIndex].value;
	if (templateName !=0){
		var actionpath="/<%=Application("appkey")%>/export_hits.asp"
		var actiontemp = actionpath + '?manage_template_mode=select&templateName=' + templateName + '&dbname=' + dbname + '&formgroup=' + formgroup + "&formmode=" + formmode
		document.manage_templates.action = actiontemp
		document.manage_templates.submit()
	}
}

function deleteTemplate(){

	var templateName = this.document.forms['manage_templates'].elements['saved_templates'].options[this.document.forms['manage_templates'].elements['saved_templates'].selectedIndex].value;
	if (templateName !=0){
		var actionpath="/<%=Application("appkey")%>/export_hits.asp"
		var actiontemp = actionpath + '?manage_template_mode=delete&templateName=' + templateName + '&dbname=' + dbname + '&formgroup=' + formgroup + "&formmode=" + formmode
		document.manage_templates.action = actiontemp
		document.manage_templates.submit()
	}
}

function editTemplate(){
	var templateName = this.document.forms['manage_templates'].elements['saved_templates'].options[this.document.forms['manage_templates'].elements['saved_templates'].selectedIndex].value;
	if (templateName !=0){
		var actionpath="/<%=Application("appkey")%>/export_hits.asp"
		var actiontemp = actionpath + '?manage_template_mode=edit&templateName=' + templateName + '&dbname=' + dbname + '&formgroup=' + formgroup + "&formmode=" + formmode
		document.manage_templates.action = actiontemp
		document.manage_templates.submit()
	}

}
</script>
</head>
<body>
<form name="manage_templates" action="" method="post">
<input type = "hidden" name = "username" value = "<%=Session("USER_SETTINGS_ID" & dbkey) %>">

<%'stop

isPublicChecked = false
if Request.Form("IsPublicTemplate") = "1" then isPublicChecked = true

select case UCase(manage_template_mode)

case "TEMP"
	'get values from submitted form
	temp = split(session("export_hits_display_names"), ",", -1)
	'create dictionary to check for unique names
	set myDict = server.CreateObject("scripting.dictionary")
	for i = 0 to UBound(temp)
		temp1 = split(temp(i), "|", -1)
		fieldname = temp1(1)
		displayname = request(fieldname)
		
		checkedstate = request(fieldname & "_checkbox")
		if checkedstate = "checked" then
			bchecked=1
		else
			bchecked = 0
		end if
		if new_fullfieldname_list <> "" then
			new_fullfieldname_list = new_fullfieldname_list & "," & displayname & "|" & fieldname & "|" & bchecked
		else
			new_fullfieldname_list = displayname & "|" & fieldname & "|" & bchecked
		end if
		if myDict.Exists(displayname) then
			if dupslist <> "" then
				dupslist = dupslist & "," & displayname
			else
				dupslist = displayname
			end if
		else
			myDict.Add displayname, field
		end if
	next	
	
	'update session variable used by export_hits_dialog box
	session("export_hits_display_names")=new_fullfieldname_list
	if dupslist <> "" then
		returnPath = "/" & Application("appkey") & "/export_hits.asp?manage_template_mode=edit&dupslist=" & dupslist & "&dbname=" & dbkey & "&formgroup=" & formgroup & "&formmode=" & formmode 
		Response.redirect returnPath
	else
		returnPath = "/" & Application("appkey") & "/export_hits.asp?templateName=temp&dbname=" & dbkey & "&formgroup=" & formgroup & "&formmode=" & formmode 
		Response.redirect returnPath
	end if

case "DELETE"
	templateName = request("templateName")
	templateName = replace(templateName, " ", "")
	
	Owner_ID = Ucase(Session("USER_SETTINGS_ID" & dbkey))
	
	if isPublicChecked then 
		User_ID = "PUBLIC"
	else
		User_ID = Owner_ID
	end if
	'remove item from user settings table and dictionary 
	SettingName  = "SDFEXPORTTEMPLATE" &  Owner_ID & UCase(dbkey) &  UCase(formgroup) & ":" & templateName
	deleteCurrentSettings request("dbname"), request("formgroup"), SettingName, User_ID
	
	'remove from dictionary 
	if Session("ExportTemplateDict").Exists(templateName) then
		Session("ExportTemplateDict").Remove(templateName)
	end if
	
	returnPath = "/" & Application("appkey") & "/export_hits.asp?manage_templates_mode=manage&dbname=" & dbkey & "&formgroup=" & formgroup & "&formmode=" & formmode 
	Response.redirect returnPath

case "CANCEL"
	session("export_hits_display_names")=session("orig_export_hits_display_names")
	returnPath = "/" & Application("appkey") & "/export_hits.asp?templateName=temp&dbname=" & dbkey & "&formgroup=" & formgroup & "&formmode=" & formmode 
	Response.redirect returnPath


case "SELECT"
	templateName = request("templateName")
	templateName = replace(templateName, " ", "")
	returnPath = "/" & Application("appkey") & "/export_hits.asp?templateName=" & templateName & "&dbname=" & dbkey & "&formgroup=" & formgroup & "&formmode=" & formmode 
	Response.redirect returnPath

case "SAVE"
	templateName = request("templateName")
	templateName = replace(templateName, " ", "")
	originalTemplateName = request("originalTemplateName")
	if Trim(originalTemplateName) <> "" then
		if Not (UCase(templateName) = UCase(originalTemplateName)) then
			bDelete=true
		else
			'SYAN modified on 11/7/2005 to fix CSBR-59885
			'bDelete=false
			bDelete=true
			'End of SYAN modification
		end if
	else
		bDelete=false
	end if
	templateDescription=request("templateDescription")
	'get values from submitted form
	temp = split(session("export_hits_display_names"), ",", -1)
	nameAndDesc = templateName & ":|:" & templateDescription & ":|:"
	'create dictionary to check for unique names
	set myDict = server.CreateObject("scripting.dictionary")
	
	for i = 0 to UBound(temp)
		temp1 = split(temp(i), "|", -1)
		fieldname = temp1(1)
		displayname = request(fieldname)
		
		checkedstate = request(fieldname & "_checkbox")
		if checkedstate = "checked" then
			bchecked=1
		else
			bchecked = 0
		end if
		
		if new_fullfieldname_list <> "" then
			new_fullfieldname_list = new_fullfieldname_list & "," & displayname & "|" & fieldname & "|" & bchecked
			'if not len(nameAndDesc & new_fullfieldname_list) > 4000 then
				new_fullfieldname_list_trunc = new_fullfieldname_list_trunc & "," & displayname & "|" & fieldname & "|" & bchecked
			'end if
		else
			new_fullfieldname_list = displayname & "|" & fieldname & "|" & bchecked
			new_fullfieldname_list_trunc =  displayname & "|" & fieldname & "|" & bchecked
		end if
		if myDict.Exists(displayname) then
			if dupslist <> "" then
				dupslist = dupslist & "," & displayname
			else
				dupslist = displayname
			end if
		else
			myDict.Add displayname, fieldname
		end if
	next	
	'update session variable used by export_hits_dialog box
	session("export_hits_display_names")=new_fullfieldname_list
	if not dupslist <> ""  then
		SettingNamePrefix = "SDFEXPORTTEMPLATE"
		Owner_ID = Ucase(Session("USER_SETTINGS_ID" & dbkey))
	
		if isPublicChecked then 
			User_ID = "PUBLIC"
			if NOT inStr(1,templateDescription,"(Public) ") > 0 then
				templateDescription = "(Public) " & templateDescription
			end if
		else
			User_ID = Owner_ID
		end if
		
		'create full item description for updating the user settings table and for updating the dictionary
		fullItemDescription =  templateName & ":|:" & templateDescription & ":|:" & new_fullfieldname_list
		fullItemDescription_trunc =  templateName & ":|:" & templateDescription & ":|:" & new_fullfieldname_list_trunc
					
		'remove item from user settings table and dictionary since the template name changed
		if bDelete = true then
			'delete record if bdelete= true
			SettingName  = SettingNamePrefix &  Owner_ID & UCase(dbkey) &  UCase(formgroup) & ":" & originalTemplateName
			deleteCurrentSettings request("dbname"), request("formgroup"), SettingName, User_ID
			'remove from dictionary 
			if Session("ExportTemplateDict").Exists(originalTemplateName) then
				Session("ExportTemplateDict").Remove(originalTemplateName)
			end if
		end if
	
		'insert into usersettings table
		SettingValue = fullItemDescription_trunc
		SettingName  = SettingNamePrefix &  Owner_ID & UCase(dbkey) &  UCase(formgroup) & ":" & templateName
		insertCurrentSettings request("dbname"), request("formgroup"), SettingName, User_ID,  SettingValue
	
		'add to dictionary
		if Session("ExportTemplateDict").Exists(templateName) then
			Session("ExportTemplateDict").Item(templateName) =fullItemDescription
		else
			Session("ExportTemplateDict").Add templateName, fullItemDescription
		end if
		
		returnPath = "/" & Application("appkey") & "/export_hits.asp?templateName=" & templateName & "&dbname=" & dbkey & "&formgroup=" & formgroup & "&formmode=" & formmode 
		Response.redirect returnPath
	else
		returnPath = "/" & Application("appkey") & "/export_hits.asp?manage_template_mode=edit&dupslist=" & dupslist & "&dbname=" & dbkey & "&formgroup=" & formgroup & "&formmode=" & formmode 
		Response.redirect returnPath
	end if

case "EDIT"
'buttons for editting templates%>
<table><tr><td valign="top"><a HREF="javascript:setTemplate()" border="0">
<img SRC="<%=Application("NavButtonGifPath") & "OK.gif"%>" border="0"></a> </td><td valign="top"><a HREF="javascript:cancelTemplate()" alt="cancel template action"><img SRC="<%=Application("NavButtonGifPath") & "Cancel.gif"%>" border="0" alt="close window without changes"></a></td>
<td valign="top"><a href="javascript:clearAllCheckBoxes()"><img SRC="<%=Application("NavButtonGifPath") & "Clear_all_btn.gif"%>" border="0" alt="clear all checkboxes"></a></td><td valign="top"><a href="javascript:checkAllBoxes()"><img SRC="<%=Application("NavButtonGifPath") & "Select_all_btn.gif"%>" border="0" alt="select all checkboxes"></a></td></tr></table>

<%
'stop
if isPublicChecked then CheckThePublicBox = " checked "
templateName = request("templateName")
templateName = replace(templateName, " ", "")
dupslist = request("dupslist")
if templateName <> "" then
	fullTemplate=Session("ExportTemplateDict").Item(templateName)
	temp = split(fullTemplate, ":|:", -1)
	templateName = temp(0)
	templateDescription = temp(1)
	fullfieldname_list=temp(2)
	session("export_hits_display_names")=fullfieldname_list
	originalTemplateName = templateName
else
	originalTemplateName = ""
	templateName = ""
	templateDescription = ""
	temp_fullfieldname_list=session("export_hits_display_names")
	if not request("dupslist") <> "" then
		session("orig_export_hits_display_names") = temp_fullfieldname_list
	end if
	'update checked state from export_dialog
	temp = split(temp_fullfieldname_list, ",", -1)
	
	set myDict = server.CreateObject("scripting.dictionary")
	for i = 0 to UBound(temp)
		if inStr(temp(i), "|")>0 then
			temp1 = split(temp(i), "|", -1)
			displayname=temp1(0)
		else
			displayname=temp(i)
		end if
		displayname = replace(displayname, "<sup>", "")
		displayname = replace(displayname, "</sup>", "")
		displayname = replace(displayname, "<sub>", "")
		displayname = replace(displayname, "</sub>", "")
		fieldname=temp1(1)
		
		checkedstate = request(fieldname & "_checkbox")
		
		if checkedstate = "checked" then
			bchecked="1"
		else
			bchecked="0"
		end if
		
	
		if myDict.Exists(displayname) then
			'SYAN modified on 6/28/2005 to fix CSBR-54692
			if dupslist <> "" then
				dupslist = dupslist & "," & displayname
			else
				dupslist = displayname
			end if
			'test = split(fieldname, ".", -1)
			'displayname=test(Ubound(test))
			'myDict.Add displayname, fieldname
			'End of SYAN modification
		else
			myDict.Add displayname, fieldname
		end if
		if new_fullfieldname_list <> "" then
			new_fullfieldname_list=new_fullfieldname_list & "," & displayname & "|" & fieldname & "|" & bchecked
		else
			new_fullfieldname_list=displayname & "|" & fieldname & "|" & bchecked
		end if
	next
	fullfieldname_list = new_fullfieldname_list
	session("export_hits_display_names")=fullfieldname_list
	
end if 
	tables_string = session("export_hits_table_display_names")%>
			<script language="javascript">
			var allfields = "<%=fullfieldname_list%>"
			//var bshowstruct = "<%=session("bShowStruc")%>"
			var alltables = "<%=tables_string%>"
			var dupslist = "<%=dupslist%>"

			myarray = allfields.split(",")
			mytables = alltables.split(",")
			document.write('<table ><tr><td>Edit field names and click OK to use in your current sdfile export. Field names must be unique.</td></tr><tr><td>To save the template for repeated use, enter a short template name (no spaces in name), description and specify checked state before clicking OK.</td></tr></table>')
			if (dupslist.length > 0){
			document.write('<table><tr><td><font color = "red" size = 2>Template Error: Names must be unique.</td></tr><tr><td><font color = "red" size = 2>Please correct field names bordered in red.</font></tr></td></table>')
			}
			
			document.write('<table bgcolor="#CCCCCC" border = "0" width ="100%"><tr>');
			document.write("<td width = \"150\"><b>Template Name</b></td><td><input type=\"hidden\" name=\"originalTemplateName\" value=\"<%=originalTemplateName%>\"><input type=\"text\" name=\"templateName\" value=\"<%=templateName%>\"><strong>")
			document.write('&nbsp; Public<input onClick="if (!this.checked) document.manage_templates.templateDescription.value=document.manage_templates.templateDescription.value.replace(\'(Public) \',\'\')" type=checkbox name=isPublicTemplate value=1 <%=CheckThePublicBox%>>');
			document.write('</td></tr><tr><td width = "150"><b>Template Description</b></td><td><input type="text" name="templateDescription" size = "50" value="<%=templateDescription%>"><strong>')
			document.write('</td></tr></table>')
			document.write('<table bgcolor="#CCCCCC" border = "0" width = 100%><tr><td><table border = "0"><tr>')
			document.write('<td width="100" valign="middle"  height="20"><strong>&nbsp;</strong></td>')
			document.write('<td width="100" valign="middle"  height="20"><strong>&nbsp;</strong>')
			document.write('</td><td width="250" valign="middle" height="20" align="center" ><strong>')
			document.write('Export</strong></td></tr>')
			strucDisplay = myarray[0].split("|")
		
			var checkedState = ""
			var bcheckstate =  strucDisplay[2]
			
			if (bcheckstate == 1){
				checkedState = " checked"
			}else{
				checkedState= ""
			}
			
			document.write ('<tr><td>&nbsp;</td><td width="225" valign="top"  height="30">STRUCTURE,MW,FORMULA</td>')
			document.write ('<td width="100" valign="top" align= "center" height="30"><input type="checkbox" ' + checkedState + ' name="exp_struc_data_checkbox" value="checked"></td></tr>')
			

			for (i=0;i<mytables.length;i++){
				var current_table_temp = mytables[i].split("|")
				var current_table = current_table_temp[1]
				var display_table_name = current_table_temp[0]
				document.write('<tr><td colspan="3"><font size="2"><b>' + display_table_name.toUpperCase() + '</b></font></td></tr>')
				
				for (j=1;j<myarray.length;j++){
				do_output = false
					temp_display =  myarray[j].split("|")
					display_name = temp_display[0]
					bcheckstate = temp_display[2]
					
					if (bcheckstate == 1){
						checkedState = "checked"
					}else{
						checkedState= ""
					}
					
					temp2 = temp_display[1].split(".")
					if (temp2.length == 3){
						test_table = temp2[0] + '.' + temp2[1]
						if ( test_table.toLowerCase() == current_table.toLowerCase()){
							
							displayval =display_name
							
							hiddenval =  temp_display[1].toUpperCase()
							do_output = true
						}
					}else{
						if (temp2[0].toLowerCase() == current_table.toLowerCase()){
								displayval =display_name
							
							hiddenval = temp_display[1].toUpperCase()
							do_output = true
						}
					}
					if(do_output == true){
						
						if (dupslist.length > 0) {
							var dupslistarray = dupslist.split(",")
							bFlag = false
							for(m=0;m<dupslistarray.length;m++){
								if (displayval == dupslistarray[m]){
									bFlag = true
								}
							}
							if(bFlag == true){
							
								document.write('<tr><td>&nbsp;</td><td bgcolor = "red"><input type=text size="50" name="' + hiddenval + '" value="' + displayval + '"></td><td width="100" valign="top" align= "center" height="30"><input type="checkbox" ' + checkedState + ' name="' + hiddenval + '_checkbox" value="checked"></td> ')

							}else{
								document.write('<tr><td>&nbsp;</td><td ><input type=text size="50" name="' + hiddenval + '" value="' + displayval + '"></td><td width="100" valign="top" align= "center" height="30"><input type="checkbox" ' + checkedState + ' name="' + hiddenval + '_checkbox" value="checked"></td> ')
							}
						}
						else{
							document.write('<tr><td>&nbsp;</td><td ><input type=text size="50" name="' + hiddenval + '" value="' + displayval + '"></td><td width="100" valign="top" align= "center" height="30"><input type="checkbox" ' + checkedState + ' name="' + hiddenval + '_checkbox" value="checked"></td> ')

						}
					}
				}
			}
			document.write ('</td></tr></table></td></tr></table>')
			</script>
<%
case "MANAGE"
'buttons for selecting templates%>
<table><tr><td valign="top">
<a HREF="javascript:selectTemplate()" border="0"><img SRC="<%=Application("NavButtonGifPath") & "OK_dialog_btn.gif"%>" border="0"></a></td><td valign="top">
<a HREF="javascript:cancelTemplate()" border="0"><img SRC="<%=Application("NavButtonGifPath") & "cancel_dialog_btn.gif"%>" border="0"></a></td><td valign="top">
<a HREF="javascript:editTemplate()" border="0"><img SRC="<%=Application("NavButtonGifPath") & "edit_btn.gif"%>" border="0"></a> </td><td valign="top">
<a HREF="javascript:deleteTemplate()" border="0"><img SRC="<%=Application("NavButtonGifPath") & "delete_btn.gif"%>" border="0"></a> </td></tr></table>
<%	

if isObject(Session("ExportTemplateDict")) then
		vItemArray =Session("ExportTemplateDict").Items
		For i =0 to Session("ExportTemplateDict").Count -1
			TemplateValue= vItemArray(i)
			temp = split(TemplateValue, ":|:", -1)
			tempoption_entry = temp(0) & ": " & temp(1)
			if Len(tempoption_entry) > 30 then
				option_entry=left(tempoption_entry, 50-3) & "..."
			else
				option_entry=tempoption_entry
			end if
			if savedTemplateNames <> "" then
				savedTemplateNames = savedTemplateNames & "<option value=""" & temp(0) & """>" & option_entry & "</option>"
			else
				savedTemplateNames = "<option value=""" & temp(0) & """>" & option_entry & "</option>"
			end if
		next
	end if
%>
<table border=0><tr><td><select name='saved_templates' onChange="if (this.options[this.options.selectedIndex].text.indexOf('(Public)') >= 0) isPublicTemplate.value=1"><option value="0">--Select a template---</option><%=savedTemplateNames%></select></td></tr></table>
<input type="hidden" name="isPublicTemplate" value="">
<%End select%>
</form></body>
</html>
