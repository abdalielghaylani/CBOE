<%'Copyright 1999-2003 CambridgeSoft Corporation. All rights reserved%>
<%'DO NOT EDIT THIS FILE%>
<%
' RAS 30-Nov-2000 Add DisplayAltIDs function to cope with situations where there
' are more than one identifier for a given batch
Sub DisplayAltIDs(ByVal laRS, ByVal laSeperator)
	Dim first
	
	first=1
	do while Not laRS.EOF=True
		if first=1 then
			first=0
		else
			Response.Write laSeperator
		end if
		Response.Write laRS("identifier").Value
		laRS.MoveNext
	loop
	laRS.MoveFirst
end Sub

Sub GetMultiDBSelectList()
	multi_dbnames = Application("DBNames")
	if Application("GlobalSearchDisplayText") <> "" then
		display_text = Application("GlobalSearchDisplayText")
	else
		display_text = "Select the databases to search"
	end if
	multi_dbnames_array = split(multi_dbnames, ",", -1)
	Response.Write "<table border = ""0"" bgcolor=""#D1D1D1"" width = ""100%""><tr><td>"
	Response.Write "<small>" & display_text & "</small><br>"
		' !DGB! 11/21/02
		' Allow selected checkboxes to be controlled by ini setting and remembered from previous seacrh
		selectedGlobalSearchDBs = Session("selectedGlobalSearchDBs")
		if selectedGlobalSearchDBs = "" then selectedGlobalSearchDBs = Application("selectedGlobalSearchDBs")
		'CBOE-1034 SJ To fix the global search schema check box issue. 
		if ucase(dbkey)="CHEMINV" then
			if not (isEmpty(Session("Search_Reg" & dbkey) and isEmpty(Session("BROWSE_ACX" & dbkey)))) then
				Session("Search_Reginvreg")=Session("Search_Reg" & dbkey)
				Session("BROWSE_ACXinvacx")=Session("BROWSE_ACX" & dbkey)
				hideRegSearch = not Session("Search_Reg" & dbkey)
				hideACXSearch = not Session("BROWSE_ACX" & dbkey)
			else
				hideRegSearch = true
				hideACXSearch = true
			end if
		else
			if not isEmpty(Session("Search_Reginvreg")) then
				hideRegSearch = not Session("Search_Reginvreg")
			else
				hideRegSearch = true
			end if
			if not isEmpty(Session("BROWSE_ACXinvacx")) then
				hideACXSearch = not Session("BROWSE_ACXinvacx")
			else
				hideACXSearch = true    
			end if
		end if
		for i= 0 to UBound(multi_dbnames_array)
			isDisabled = ""
			if (ucase(multi_dbnames_array(i)) = "INVREG" and hideRegSearch) then isDisabled = " disabled"
            if (ucase(multi_dbnames_array(i)) = "INVACX" and hideACXSearch) then isDisabled = " disabled"
			isChecked = ""
			if InStr("," & ucase(selectedGlobalSearchDBs) & "," , "," & ucase(multi_dbnames_array(i) & ",")) > 0 and isDisabled = "" then isChecked = "Checked" 
			Response.Write "<small>" & Application("DisplayName" & multi_dbnames_array(i))  & "</small><input type = checkbox name=" & multi_dbnames_array(i) & " value=""" & multi_dbnames_array(i) & """ " &  isChecked & isDisabled & ">"
		next
	Response.Write "<input type = ""hidden"" name = ""DBSearchNames"" value = >"
	Response.Write "</td></tr></table>"
End Sub



Sub GetMultiDBResultList(ByVal formmode, ByVal formgroup)
	multi_dbnames = Session("SearchData" & "SearchDBNames")
	multi_dbnames_array = split(multi_dbnames, ",", -1)
	
	if Application("GlobalSearchResultText") <> "" then
		display_text = Application("GlobalSearchResultText")
	else
		display_text = "Click a button to view the results for that database:"
	end if
	
	Response.Write "<table border = ""0"" bgcolor=""#D1D1D1"" width = ""100%""><tr><td>"
	Response.Write "<small>" & display_text & "</small><br>"
	for i= 0 to UBound(multi_dbnames_array)
		theName = multi_dbnames_array(i)
		displayname = Application("DisplayName" & theName)
		recordsfound = Session("hitlistrecordcount" & theName & formgroup)
		'!DGB! 10/08/02 added checkbox images
		if recordsfound then
			chkboxImage = "cb_checked.gif"
			disableradio = ""
		Else
			chkboxImage = "cb_not_checked.gif"
			disableradio = "disabled"
		End if
		if strTrueFalse(Session("MoreMolids" & theName & formgroup)) then
			fulldisplay = displayname & "(first " & recordsfound & "of " & Session("hitlistRecordCount" & theName & formgroup) & " found)"
		else
			fulldisplay = displayname & "(" & recordsfound & " found)"
		end if
		temp_result = GetFormGroupVal(theName, formgroup, kResultFormPath)
		if instr(temp_result, ";")>0 then
			result_forms = split(temp_result, ";", -1)
			result_list_view = result_forms(0)
			result_form_view = result_forms(1)
		else
			result_list_view = temp_result
			result_form_view = replace(result_list_view, "_result_list.asp", "_form.asp")
		end if
		If UCase(formmode) = "LIST" then
			resultformpath= result_list_view
		else
			resultformpath=result_form_view
		end if
		
		thePath = Application("AppPathHTTP") & "/" & theName & "/" & resultformpath
		thePath= thePath & "?formmode=" & formmode & "&dbname=" & theName & "&formgroup=" & formgroup & "&dbsearchnames=" & multi_dbnames & "&BaseRecordCount=" & Session("Base_RSRecordCount" & theName) & "&BaseCurrentIndex=1"
		'!DGB! 10/08/02 added checkbox images
		if theName = Request("dbname") then
			Response.Write  "<Input " & disableradio & " type= ""radio""  name=""dbnames"" Value=" & theName &  " onClick = ""goOther(&quot;" & thePath & "&quot;)"" checked>" & "<img src=""/cfserverasp/source/graphics/" & chkboxImage & """><small>" & fulldisplay & "</small>" & DBResultListBrake
		else
			Response.Write  "<Input " & disableradio & " type= ""radio"" name=""dbnames"" Value=" & theName & " onClick = ""goOther(&quot;" & thePath & "&quot;)"" >" & "<img src=""/cfserverasp/source/graphics/" & chkboxImage & """><small>" & fulldisplay & "</small>" & DBResultListBrake
		end if
	next
	Response.Write "</td></tr></table>"
End Sub

Sub GetMultiDBResultList2()
	multi_dbnames = Session("SearchData" & "SearchDBNames")
	Response.Write multi_dbnames
	multi_dbnames_array = split(multi_dbnames, ",", -1)
	Response.Write "<Select name = ""dbnames"">"
	for i= 0 to UBound(multi_dbnames_array)
		displayname = Application("DisplayName" & multi_dbnames_array(i))
		recordsfound =Session("BaseRSRecordCount" & multi_dbnames_array(i))
		if multi_dbnames_array = dbkey then
				Response.Write "<Option Selected Value=" & multi_dbnames_array(i) & " Selected>" & displayname & "(" & recordsfound & " found)"  & "</Option>"
		else
				Response.Write "<Option Value=" & multi_dbnames_array(i) & " Selected>" & displayname & "(" & recordsfound & " found)"  & "</Option>"
		end if
	next
End Sub


Sub ShowResult(ByVal dbkey, ByVal formgroup, ByRef rsname, ByVal fullfieldname, ByVal displaytype, ByVal specifier, ByVal height)
	
	theResult = getShowResult( dbkey,  formgroup,  rsname,  fullfieldname,  displaytype,  specifier,  height)
	Response.Write theResult
end Sub
'showresult from recordset
function getShowResult(ByVal dbkey, ByVal formgroup, ByRef rsname, ByVal fullfieldname, ByVal displaytype, ByVal specifier, ByVal height)
		formmode = Ucase(request("formmode"))
		
		displaytype = UCase(displaytype)
		if Instr(UCase(formmode),"ADD_")>0 AND Not instr(UCase(displaytype), "NO_EDIT")> 0 then
			width = specifier
			width = getAdjustedWidth(width)
			if (displaytype = "CDXOBJ" or displaytype = "BASE64CDX")then
				AddtoRelLoadedFields(fullfieldname)
				theReturn = getShowStrucInputField (dbkey,  formgroup,  fullfieldname,  "1",  width, height,"exact", "SelectList")
			else
				if Not width <> "" then width = height
				AddtoRelLoadedFields(fullfieldname)
				
				theReturn = getShowInputField(dbkey,  formgroup,  fullfieldname,  width, height)
				
			end if
		else
			on error resume next
			rs_open = false
			if Not(rsname.bof and rsname.eof) then
				rs_open = true
			end if
			if rs_open = true then
	
				'if a user passes a table with the field it needs to be split to just a field. ADO field collection will only accept fieldname
				temp = split(fullfieldname, ".", -1)
				if Ubound(temp) = 2 then
					tablename = temp(0) & "." & temp(1)
					fieldname = temp(2)
				else
					tablename = temp(0)
					fieldname = temp(1)
				end if
				'LJB 12_30_2003 support output of images from databases - blobs and clobs
				if Instr(displaytype, "PICTURE")> 0 then
					storedisplaytype=displaytype
					displaytype = "PICTURE"
				end if
				
				Select Case displaytype
				
				case "PICTURE"
			
					primarykey= GetTableVal(dbkey, tablename, kPrimaryKey)
					on error resume next
					uniqueID = rsname(primarykey)
					temp = split(storedisplaytype, ":", -1)
					mime_type=temp(1)
					on error resume next
					lob_display = temp(2)
					if not lob_display <> "" then
						lob_display = "IN_LINE"
					end if
					output_type = replace(lcase(temp(1)), "image/", "")
					BlockSize = 102400
					
					ColSize  = rsname(fieldname).ActualSize
					datatype = rsname(fieldname).type
					NumBlocks = ColSize \ BlockSize
					LeftOver = ColSize Mod BlockSize
					Select Case datatype
						case 205 'longvarbinary
							if NumBlocks = 0 then
								set mstream = server.CreateObject("adodb.stream")
								mstream.Type = 1 ' adTypeBinary= 1 OR adTypeText=2
								mstream.Open
								mstream.Write rsname.Fields(fieldname).Value
								'Very important to rewind to the begining of the stream
								mstream.Position = 0
								relresult=mstream.Read
								displaytype = "PICTURE" & ":" & mime_type & ":" & lob_display & ":binary"
								theReturn=getDisplayData(dbkey, formgroup, displaytype, fullfieldname, relresult, specifier, height)
								
							else
								displaytype = "PICTURE_GET_LOB" & ":" & mime_type & ":" & lob_display & ":binary" & ":" & primarykey & ":" & uniqueid
								theReturn=getDisplayData(dbkey, formgroup, displaytype, fullfieldname, relresult, specifier, height)
								
							end if
						case 201 'longvarchar
							if NumBlocks = 0 then
								set mstream = server.CreateObject("adodb.stream")
								mstream.Type = 2 ' adTypeBinary= 1 OR adTypeText=2
								mstream.Open
								mstream.Write rsname.Fields(fieldname).Value
								'Very important to rewind to the begining of the stream
								mstream.Position = 0
								relresult=mstream.Read
								displaytype =  "PICTURE" & ":" & mime_type & ":" & lob_display & ":text"
								theReturn=getDisplayData(dbkey, formgroup, displaytype, fullfieldname, relresult, specifier, height)
								
							else
								displaytype = "PICTURE_GET_LOB" & ":" & mime_type & ":" & lob_display & ":binary" & ":" & primarykey & ":" & uniqueid
								theReturn=getDisplayData(dbkey, formgroup, displaytype, fullfieldname, relresult, specifier, height)
								
							end if
						
					end select
					
				Case "CDXOBJ", "CDXOBJ_NO_EDIT"
					width = specifier
					width = getAdjustedWidth(width)
					primarykey= GetTableVal(dbkey, tablename, kPrimaryKey)
					on error resume next
					uniqueID = rsname(primarykey)
					on error goto 0
					if UCase(formmode) = "EDIT_RECORD" then
						fullfieldname = "UID." & uniqueid & ":" & fullfieldname
						AddtoRelLoadedFields(fullfieldname)
					end if
					CDXWrite  dbkey, formgroup, rsname, fullfieldname, displaytype, uniqueid, width, height
				Case "BASE64CDX", "BASE64CDX_NO_EDIT"
					width = specifier
					width = getAdjustedWidth(width)
					override = "false"
					if UCase(displaytype )= "BASE64CDX_NO_EDIT" then
					override = "true"
					%>
					<script language="javascript">
						override = "<%=override%>"
						if (override.toLowerCase() == "true"){
						editStrucOverride=true
						}else{
						editStrucOverride=false
						}
					</script>
					<%end if
					primarykey= GetTableVal(dbkey, tablename, kPrimaryKey)
					on error resume next
					uniqueID = rsname(primarykey)
					on error goto 0

					if UCase(formmode) = "EDIT_RECORD"  then
						fullfieldname = "UID." & uniqueid & ":" & fullfieldname
						AddtoRelLoadedFields(fullfieldname)
					end if
					theReturn = getBase64Decode(dbkey, formgroup, rsname, fullfieldname, displaytype, uniqueid, width, height)
				
					
				Case Else
					if Instr(specifier, "PICKLIST") then
						temp_pick = split(specifier, ":", -1)
						pickList = temp_pick(1)
						bpickList = true
					end if
				
					width = specifier
					width = getAdjustedWidth(width)
					primarykey= GetTableVal(dbkey, tablename, kPrimaryKey)
					
					on error resume next
					uniqueID = rsname(primarykey)
					
					on error goto 0
					if UCase(formmode) = "EDIT_RECORD" then
				
						fullfieldname = "UID." & uniqueid & ":" & fullfieldname
						AddtoRelLoadedFields(fullfieldname)
					end if
					on error resume next
					if Not UCase(fieldname) = "DUMMY_FIELD" then
							'relresult = rsname(fieldname)
							
							'SYAN changed 12/16/2003 to fix CSBR-35466
							if rsname(fieldname).Type = adDBTimeStamp or rsname(fieldname).Type = adDate then
								relresult = ConvertDateToStr(Application("DATE_FORMAT"), rsname(fieldname).Value)
							else
								relresult = rsname(fieldname)
							end if
							'End of SYAN modification
							
							if err.number <> 0 and  isEmpty(relresult) then
								err.clear
								relresult =  rsname(tablename & "." & fieldname)
							end if
					end if
					on error goto 0
						if bpicklist = true then
							makelist_temp = split(pickList, "!", -1)
							makelist = makelist_temp(0) 'get rid of feault value for making picklist
							theReturn=getshowLookupList(dbkey, formgroup, rsname, fullfieldname, makePickList(makelist), relresult, relresult, "0",true,"text",relresult)
						else
							
							theReturn=getDisplayData(dbkey, formgroup, displaytype, fullfieldname, relresult, specifier, height)
						end if
				End Select
			end if
			if err.number <> 0 then LogAction(err.number & err.description & err.source)
			err.clear()
		end if
		if Not instr(UCase(formmode), "EDIT_") > 0 then
			if instr(theReturn, chr(12)) > 0 then
				theReturn = replace(theReturn, chr(12),"<br>")
			end if
			if instr(theReturn, chr(10)) > 0 then
				theReturn = replace(theReturn, chr(10),"<br>")
			end if
		end if
		getShowResult = theReturn
		
End Function




Sub ShowHyperlinkResult(ByVal dbkey, ByVal formgroup, ByRef rsname, ByVal fullfieldname, ByVal hyperlinkfield, ByVal resultform, ByVal width, ByVal height)
	rs_open = false
	if Not(rsname.eof and rsname.bof)then
		rs_open = true
	end if
	if rs_open = true then
		temp = split(fullfieldname, ".", -1)
		if Ubound(temp) = 2 then
			tablename = temp(0) & "." & temp(1)
			fieldname = temp(2)
		else
			tablename = temp(0)
			fieldname = temp(1)
		end if
	
		relresult = rsname(fieldname)
		temp = split(hyperlinkfield, ".", -1)
		if Ubound(temp) = 2 then
			tablename = temp(0) & "." & temp(1)
			fieldname = temp(2)
		else
			tablename = temp(0)
			fieldname = temp(1)
		end if
		hyperlinkresult = rsname(fieldname)
		DisplayHyperlinkData dbkey, formgroup, relresult, hyperlinkresult, resultform, width, height 
	end if
End Sub



Sub DisplayHyperlinkData(ByVal dbkey, ByVal formgroup, ByVal relresult, Byval hyperlinkresult, ByVal resultform, ByVal width, ByVal height)
	jsfunction = "goHyperlink(&quot;" & resultform & "&quot;," & hyperlinkresult 
	jsfunction = jsfunction & ")"
	Response.Write "<A href=""javascript:" & jsfunction & """>" & relresult & "</a>"
		
End Sub

Sub ShowChemResultTable(ByVal dbkey, ByVal formgroup, ByRef rsname, ByVal displaytype, ByVal tablewidth, ByVal tableborder, ByVal TableName, ByVal UniqueID, ByVal StrucWidth, ByVal StrucHeight, ByVal NumStrucs, ByVal ChemShow)
	rs_open = false
	if Not(rsname.eof and rsname.bof) then
		rs_open = true
	end if
if rs_open = true then
	if Not isObject(rsname) then exit sub
	ChemShow = UCase(ChemShow)
	showFormula = False
	showStructure = False
	showMW = False
	if inStr(ChemShow, "STRUC")> 0 then showStructure = True
	if inStr(ChemShow, "FORM")> 0 then showFormula = True
	if inStr(ChemShow, "MOL")> 0 then showMW = True
	if inStr(ChemShow, "MW")> 0 then showMW = True


	displaytype = UCase (displaytype)
	on error resume next
		Select Case displaytype
			Case "TABLE_ACROSS_HEADINGS"
			
			Response.Write "<table border =" & quotedString(tableborder) & "width=" & quotedstring(tablewidth) & "><tr>"
			'column headings
				for each Field in rsname.Fields
					If UCase(Field.Name) = UCase(UniqueID) then
						if showStructure = True then
							Response.Write "<strong>"
							if showStructure = True then Response.Write "<td>&nbsp;</td>"
							if showFormula = True then Response.Write "<td>Formula</td>"
							if showMW = True then Response.Write "<td>MW</td><td>"
							Response.Write "</strong>"
						else
							if Not UCase(Field.Name) = "MOL_ID" then
								Response.Write "<strong><td>" & Field.Name & "</td></strong>"
							end if
						end if
					end if
				next
				Response.Write "</tr><tr>"
				rsname.MoveFirst
			Do While Not rsname.eof
				for each Field in rsname.Fields
					If UCase(Field.Name) = UCase(UniqueID) then
						StrucID = Field.Value
						if showStructure = True then
							Response.Write "<td>"
								DisplayCFWStructure dbkey, formgroup, TableName & "." & "Structure", TableName, "Structure", StrucID, "cdx", StrucWidth, StrucHeight
							Response.Write "</td>"
						end if
						if showFormula = True then
							Response.Write "<td>"
								ShowCFWChemResult dbkey, formgroup, "Formula", TableName & ".Formula", StrucID, "raw", 1,"62"
							Response.Write "</td>"
						end if
						if showMW = True then
							Response.Write "<td>"
								ShowCFWChemResult dbkey, formgroup, "MolWeight",TableName & ".MolWeight", StrucID, "raw", 1,"62"
							Response.Write "</td>"
						end if
					else
						if Not UCase(Field.Name) = "MOL_ID" then
							Response.Write "<td>" & Field.Value & "</td>"
						end if
					end if
				next
				Response.Write "<tr>"
				rsname.MoveNext
			loop
			Response.Write "</tr></table>"
			
			Case "TABLE_ACROSS"
				Response.Write "<table border =" & quotedString(tableborder) & "width=" & quotedstring(tablewidth) & "><tr>"
				rsname.MoveFirst
				Do While Not rsname.eof
					for each Field in rsname.Fields
						If UCase(Field.Name) = UCase(UniqueID) then
							StrucID = Field.Value
							if showStructure = True then
								Response.Write "<td>"
									DisplayCFWStructure dbkey, formgroup, TableName & "." & "Structure", TableName, "Structure", StrucID, "cdx", StrucWidth, StrucHeight
								Response.Write "</td>"
							end if
							if showFormula = True then
								Response.Write "<td>"
									ShowCFWChemResult dbkey, formgroup, "Formula", TableName & ".Formula", StrucID, "raw", 1,"62"
								Response.Write "</td>"
							end if
							if showMW = True then
								Response.Write "<td>"
									ShowCFWChemResult dbkey, formgroup, "MolWeight",TableName & ".MolWeight", StrucID, "raw", 1,"62"
								Response.Write "</td>"
							end if
						else
							if Not UCase(Field.Name) = "MOL_ID" then
								Response.Write "<td>" & Field.Value & "</td>"
							end if
						end if
					next
					Response.Write "<tr>"
					rsname.MoveNext
				loop
				Response.Write "</tr></table>"
			Case "TABLE_ACROSS_MULTI_STRUC"
				Response.Write "<table border =" & quotedString(tableborder) & "width=" & quotedstring(tablewidth) & "><tr>"
				rsname.MoveFirst
				
				Do While Not rsname.eof
					for each Field in rsname.Fields
						If UCase(Field.Name) = UCase(UniqueID) then
							StrucID = Field.Value
							StrucNums = Split(NumStrucs, ",", -1)
	
							for i = 0 to UBound(StrucNums)
								entryTemp = StrucNums(i)
								if entryTemp = 0 then 
									entryNum = "" 
								else
									entryNum = entryTemp
								end if
								Response.Write "<td>"
								if showStructure = True then
									DisplayCFWStructure dbkey, formgroup, TableName & "." & "Structure" & entryNum, TableName, "Structure" & entryNum, StrucID, "cdx", StrucWidth, StrucHeight
									Response.Write "</td><td>"
								end if
								if showFormula = True then
									ShowCFWChemResult dbkey, formgroup, "Formula", TableName & ".Formula" & entryNum, StrucID, "raw", 1,"62"
									Response.Write "</td><td>"
								end if
								if showMW = True then
									ShowCFWChemResult dbkey, formgroup, "MolWeight",TableName & ".MolWeight" & entryNum, StrucID, "raw", 1,"62"
									Response.Write "</td>"
								end if
							next
						else
							if Not InStr(UCase(Field.Name), "MOL_ID")>0 then
								Response.Write "<td>" & Field.Value & "</td>"
							end if
						end if
						
						
					next
					Response.Write "<tr>"
					rsname.MoveNext
				loop
				Response.Write "</tr></table>"
			
		end Select
	end if 'rs_open = true
End Sub
'output the results of an recordset using the GetString method of the recordset object
Sub ShowResultTable(ByVal dbkey, ByVal formgroup, ByRef rsname, ByVal displaytype, ByVal cellwidth, ByVal tablewidth, ByVal tableborder)
		displaytype = UCase (displaytype)
		rs_open = false
		on error resume next		
		if Not(rsname.eof and rsname.bof) then
			rs_open = true
		end if
		if rs_open = true then
			on error resume next
			Select Case displaytype
				Case "TABLE_DOWN"
					columndelimeter = "</td><td nowrap valign = ""top"" align= ""left"" width =" & QuotedString(cellwidth) & ">"
					rowdelimeter = "</td></tr><tr><td nowrap  valign = ""top"" align= ""left"" width =" & QuotedString(cellwidth) & ">"
					Response.write  "<table width =" & QuotedString(tablewidth) &  " border =" & QuotedString(tableborder) & "><tr><td>"
					Response.write  rsname.GetString(,-1,columndelimeter,rowdelimeter,NBSPACE)
					Response.write  "</td></tr></table>"
				Case "TABLE_ACROSS"
					columndelimeter = "</td><td nowrap  valign = ""top"" align= ""left"" width =" & QuotedString(cellwidth) & ">"
					rowdelimeter = "</td></tr><tr><td nowrap valign = ""top"" align= ""left"" width =" & QuotedString(cellwidth) & ">"
					Response.write "<table width =" & QuotedString(tablewidth) &  " border =" & QuotedString(tableborder) & "><tr><td>"
					Response.write  rsname.GetString(,-1,columndelimeter,rowdelimeter,NBSPACE)
					Response.write  "</td></tr></table>"
				Case "TEXTAREA"
					Response.write "<TextArea rows=" & QuotedString(cellwidth) & " cols =" & QuotedString(tablewidth) & ">"
					Response.write rsname.GetString(,-1,,,NBSPACE)
					Response.Write "</textarea>"
					
				Case "TABLE_ACROSS_HEADINGS"
					Response.write  "<table width =" & QuotedString(tablewidth) &  " border =" & QuotedString(tableborder) & "><tr>"
					for each Field in rsname.Fields
						Response.Write "<strong><td>" & Field.Name & "</td></strong>"
					next
					Response.Write "</tr><tr><td>"
					columndelimeter = "</td><td nowrap  valign = ""top"" align= ""left"" width =" & QuotedString(cellwidth) & ">"
					rowdelimeter = "</td></tr><tr><td nowrap  valign = ""top"" align= ""left"" width =" & QuotedString(cellwidth) & ">"
					Response.write  rsname.GetString(,-1,columndelimeter,rowdelimeter,NBSPACE)
					Response.write  "</td></tr></table>"
			Case "LIST"
					while not rsname.EOF
						for each Field in rsname.Fields
							Response.Write rsname(Field.Name) & "<BR>"
						next
					rsname.MoveNext
					Wend
					
			Case "SELECT_LIST"
					Response.write "<Form id=form1 name=form1>"
					Response.Write "<select name=the_list size=10>"
					while not rsname.EOF
						for each Field in rsname.Fields
							Response.Write "<option>" & rsname(Field.Name) & "</option>"
						next
						rsname.MoveNext
					Wend
					Response.Write "</select>"
					Response.Write "</Form>"
					
			Case "TABLE_DOWN_W_TBLDATA"
					columndelimeter = "</div>" & "</td><td nowrap valign = ""top"" align= ""left"" width =" & QuotedString(cellwidth) & ">" & "<div class=tbldata>"
					rowdelimeter = "</div>" & "</td></tr><tr><td nowrap  valign = ""top"" align= ""left"" width =" & QuotedString(cellwidth) & ">" & "<div class=tbldata>"
					'Response.write  "<table width =" & QuotedString(tablewidth) &  " border =" & QuotedString(tableborder) & "><tr><td>" & "<div class=tbldata>"
					Response.write  "<tr><td>" & "<div class=tbldata>"
					Response.write  rsname.GetString(,-1,columndelimeter,rowdelimeter,NBSPACE)
					'Response.write  "</div>" & "</td></tr></table>"
					Response.write  "</div>" & "</td></tr>"
				
			
			End Select
		end if 'rs_open = true
End Sub



Sub ShowResultHyperlinkTable(ByVal dbkey, ByVal formgroup, ByRef rsname, ByVal field, ByVal cellwidth, ByVal tablewidth, ByVal tableborder, ByVal form, ByVal BaseID, ByVal BaseCurRecord, ByVal BaseTotalReocrds)
	displaytype = UCase (displaytype)
	rs_open = false
	if Not(rsname.eof and rsname.bof) then
		rs_open = true
	end if
	if rs_open = true then
		on error resume next
		rowsarray = rsname.GetRows()
		rsname.MoveFirst
		numColumn = UBound(rowsarray, 1)
		numRow = UBound(rowsarray, 2)
		Response.Write "<Table border =" & QuotedString(tableborder) & "width =" & QuotedString(tablewidth) & ">"
		Response.Write "<tr><td width =" & QuotedString(cellwidth) & ">"
		for intRow = 0 to numRow
		Response.Write "<tr>"
		for intColumn = 0 to numCol
			Response.Write "<td width =" & QuotedString(cellwidth) & ">"
			Response.Write "<A href=""javascript:goLink(" & QuotedString(form) & "," & QuotedString(rsname(field)) & "," & QuotedString(BaseID)& "," & QuoteString(BaseCurRecord)& "," & QuotedString(BaseTotalRecords) & ")"">"
			response.write rowsarray(intColumn, intRow) 
			response.write "</A>"
			Response.Write "</td>"
			next
			Response.Write "</tr>"
			rsname.MoveNext
		next
		Response.Write "</table>"
	end if 'rs_open = ture
End Sub



Sub ShowInputField(ByVal dbkey, ByVal formgroup, ByVal fullfieldname, ByVal fieldtype, ByVal width)
	theReturn = getShowInputField( dbkey,  formgroup,  fullfieldname,  fieldtype,  width)
	Response.Write theReturn
end Sub
'show  input field text box
Function getShowInputField(ByVal dbkey, ByVal formgroup, ByVal fullfieldname, ByVal fieldtype, ByVal width)
	'fullfieldname = LCase(fullfieldname)
	'DJP support for any form name and passed in field value: ex. fieldName:formName:value
	'LJB corrected above change so that aliases names (:&) are not parsed
	
	if instr(fullfieldname,":") > 0 and not (instr(fullfieldname,":&")>0 or instr(fullfieldname,"NEW.")>0 or instr(fullfieldname,"UID.")>0) then
		arrFullFieldName = split(fullfieldname,":")
		fullfieldname = arrFullFieldName(0)
		if len(arrFullFieldName(1)) > 0 then
			formName = arrFullFieldName(1)
		end if
		if ubound(arrFullFieldName) > 1 then
			if len(arrFullFieldName(2)) > 0 then
				givenFieldValue = arrFullFieldName(2)
			else
				givenFieldValue = null
			end if
		end if
	end if
	if formName = "" then formName = "cows_input_form"
	
	width = getAdjustedWidth(width)
	if inStr(width, ":")> 0 then
		temp_width = split(width, ":", -1)
		addMaxWithScript = "checkWidth(this," & temp_width(1) & ")"
		width = temp_width(0)
	end if 
	special_flag = Request.QueryString("special")
	if instr(fieldtype, "!") > 0 then
		if (instr(fieldtype, "!")> 0 AND (Instr(UCase(formmode), "ADD_") > 0) OR Instr(UCase(formmode), "EDIT_RECORD")) AND NOT UCase(special_flag) = "EDIT_QUERY" then
			
			thearray = split(fieldtype, "!", -1)
			count = UBound(thearray)
			default_value = thearray(count)
			
			special_flag = "default_value"
			fieldtype = thearray(0)
			
		else
			thearray = split(fieldtype, "!", -1)
			fieldtype = thearray(0)
			default_value =""
		end if
	else
		default_value =""
	end if
	
	formmode = UCase(Request("formmode"))
	
			if instr(formmode,"ADD_" )>0 and not UCase(fieldtype) = "HIDDEN" then
				if (UCase(fieldtype) = "RAW_NO_EDIT" OR UCase(fieldtype) = "PLAIN_NO_EDIT")then
					output = output &  "&nbsp;"
					exit function
				end if
				add_required_coding = getRequiredHighlight(formmode, fullfieldname)
			end if
	if add_required_coding <> "" then
		
			output = output & "<table " & add_required_coding & "><tr><td>"
		
	end if
	if len(givenFieldValue) > 0 then
		fieldvalue = givenFieldValue
	else
		Select Case UCase(special_flag)
			Case "EDIT_QUERY"
				fieldvalue = Session("SearchData" & fullfieldname &  dbkey & formgroup)
			Case "RESTORE_QUERY"
				queryname = Request.QueryString("queryname")
				fieldvalue = Request.Cookies(queryname & dbkey & formgroup)(fullfieldname)
			Case "DEFAULT_VALUE"
				fieldvalue = default_value	
			Case Else
				fieldvalue = ""
		end Select
	end if
			if Instr(fieldtype, ":VALIDATE:") > 0 then
				thetemptype = split(fieldtype, ":VALIDATE:", -1)
				fieldtype = thetemptype(0)
				theAddScript = thetemptype(1)
			end if
			if Instr(default_value, ":VALIDATE:") > 0 then
				thetemptype = split(default_value, ":VALIDATE:", -1)
				default_value = thetemptype(0)
				theAddScript = thetemptype(1)
			end if
			if theAddScript <> "" then
				theAddScript_orig = theAddScript
				theAddScript = ";" & theAddScript
			end if
			if addMaxWithScript <> "" then
				if theAddScript <> "" then
					theAddScript = ";" & addMaxWithScript
				else
					theAddScript = addMaxWithScript
				end if
			end if
			thetype = split(fieldtype, ":", -1)
			
			select case UCase(thetype(0))
			
				Case "PICKLIST"
					if theAddScript <> "" then 
						AddParameter = ":VALIDATE:" & theAddScript_orig
					else
						AddParameter = ""
					end if
						if default_value <> "" then
							makelist_temp = split(thetype(1), "!", -1)
							makelist = makelist_temp(0) 'get rid of feault value for making picklist
							output = getShowLookUpList(dbkey, formgroup, "", fullfieldname, makePickList(makelist), "", "", "0",false,"text" & AddParameter,default_value)
						else
							makelist_temp = split(thetype(1), "!", -1)
							makelist = makelist_temp(0) 'get rid of feault value for making picklist
							output = getShowLookUpList(dbkey, formgroup, "", fullfieldname, makePickList(thetype(1)), "", "", "0",true,"text" & AddParameter,default_value)
						end if
				Case "CHECKBOX"
					if Not UCase(special_flag) = "EDIT_QUERY" then
						if Not inStr(UCase(Formmode),"ADD_")>0  then
							if thetype(1) = 0 then
								checked = False
								'fieldvalue = "0"
							else
								checked = True
								'fieldvalue = "1"
							end if
					
						else
							'SYAN modified on 10/15/2004 to fix CSBR-48389
							'if thetype(1) = 0 then
							'	checked = False
							'	fieldvalue = "0"
							'else
							'	checked = True
							'	fieldvalue = "1"
							'end if
							
							if fieldvalue <> "" then
								if fieldvalue = "0" then
									checked = false
								elseif fieldvalue = "1" then
									checked = true
								end if					
							else
								if thetype(1) = 0 then
									checked = False
									fieldvalue = "0"
								else
									checked = True
									fieldvalue = "1"
								end if
							end if
							'End of SYAN modification
						end if
						if checked = True then 
							checkedValue = " checked"
							
						else
							checkedValue = ""
							
						end if
					
					else
						
						if fieldvalue = "1" then
					
							checked = true
							
						else
							checked = false
							'fieldvalue = "0"
						end if
						if checked = True then 
							checkedValue = " checked"
							
						else
							checkedValue = ""
							
						end if
					
					end if
					if instr(UCase(formmode), "ADD_")>0 or instr(UCase(formmode), "SEARCH")>0 then
							if detectIE = true then
								ScriptVal = " onClick=""UpdateCBFieldVal(this.form,this)"""
							else
								ScriptVal = " onBlur=""UpdateCBFieldVal(this.form,this)"""
							end if

						output = output &  "<input type=""checkbox"" id=""" & fullfieldname & "_orig" & """ name=""" & fullfieldname & "_orig" & """ value="
						output = output &  QuotedString(fieldvalue)
						output = output &  " " & ScriptVal & checkedValue & ">"
						output = output &  "<input type=""hidden"" id=""" & fullfieldname  & """ name=""" & fullfieldname  & """ value="""
						output = output &  fieldvalue
						output = output &  """>"
					else
						output = output &  "<input type=""checkbox"" id=""" & fullfieldname & """ name=""" & fullfieldname & """  value="
						output = output &  QuotedString(fieldvalue)
						output = output &  checkedValue &  ">"
						
					end if
				Case "HIDDEN"
					output = output &  "<input type =""hidden"" id=""" & fullfieldname & """ name=""" & fullfieldname & """ value = """& fieldvalue & """>"

				Case "SCRIPT"
					script_name =theType(1)
					if detectIE() = true then
						output = output &  "<input type =""text"" id=""" & fullfieldname & """ name=""" & fullfieldname & """ value = """& fieldvalue & """ size = """ & width & """ onBlur=""" & script_name & """>"
					else
						output = output &  "<input type =""text"" id=""" & fullfieldname & """ name=""" & fullfieldname & """ value = """& fieldvalue & """ size = """ & width & """ onChange=""" & script_name & """>"
					end if
				Case "TEXTAREA"
					height = theType(1)
					output = output &  "<TEXTAREA id=""" & fullfieldname & """ name=""" & fullfieldname & """ cols=" & QuotedString(width) & " rows=" & QuotedString(height) 
					output = output &   " wrap= ""soft"""
					if theAddScript<> "" then
						if detectIE = true then
							output = output & " onBlur=""" &  theAddScript_orig & """>"
						else
							output = output & " onChange=""" &  theAddScript_orig& """>"
						end if
					else
						output = output &  ">"
					end if
					output = output &  fieldvalue
					output = output &  "</textarea>"
				
				Case "TEXTAREA_HARD"
					height = theType(1)
					output = output &  "<TEXTAREA id=""" & fullfieldname & """ name=""" & fullfieldname & """ cols=" & QuotedString(width) & " rows=" & QuotedString(height) 
					output = output &   " wrap= ""hard"""
					if theAddScript<> "" then
						if detectIE = true then
							output = output & " onBlur=""" & theAddScript_orig & """>"
						else
							output = output & " onChange=""" &  theAddScript_orig & """>"
						end if
					else
						output = output &  ">"
					end if
					output = output &  fieldvalue
					output = output &  "</textarea>"
					
				Case "TEXTAREA_DEFAULT"
					height = theType(1)
					output = output &  "<TEXTAREA id=""" & fullfieldname & """ name=""" & fullfieldname & """ cols=" & QuotedString(width) & " rows=" & QuotedString(height) 
					if theAddScript <> "" then
						if detectIE = true then
							output = output & " onBlur=""" & theAddScript_orig & """>"
						else
							output = output & " onChange=""" &  theAddScript_orig & """>"
						end if
					else
						output = output &  ">"
					end if
					output = output & fieldvalue
					output = output &  "</textarea>"
					
				Case "TEXTAREA_NOWRAP"
					height = theType(1)
					output = output &  "<TEXTAREA id=""" & fullfieldname & """ name=""" & fullfieldname & """ cols=" & QuotedString(width) & " rows=" & QuotedString(height) 
					output = output &   " wrap= ""off"""
					if theAddScript<> "" then
						if detectIE = true then
							output = output & " onBlur=""" &  theAddScript_orig & """>"
						else
							output = output & " onChange=""" &  theAddScript_orig & """>"
						end if
					else
						output = output &  ">"
					end if
					
					output = output &  fieldvalue
					output = output &  "</textarea>"
					
				Case "DATE_PICKER"
					if inStr(theType(1), ",")> 0 then
						thearray = split(theType(1), ",", -1)
						theDateType = thearray(0)
						theFullSourcePath = thearray(1)
						theFullGifPath = thearray(2)
					else
						theDataType = theType(1)
						theFullGifPath = "/cfserverasp/source/graphics/navbuttons/icon_mview.gif"
						theFullSourcePath = "/cfserverasp/source/month_view1.asp"
					end if
					if detectIE5() = true then
						'SYAN 12/12/2003 to fix CSBR-35466
						'output = output &  "<input type=""text"" name=""" & fullfieldname & """ size=""" & width & """ value=""" & fieldvalue & """ onBlur=""isValid(this, " & thetype(1) & ")"">"
						output = output &  "<input type=""text"" id=""" & fullfieldname & """ name=""" & fullfieldname & """ size=""" & width & """ value=""" & fieldvalue & """ onBlur=""isValid(this, " & Application("DATE_FORMAT") & ")"">"
						
						'SYAN 12/12/2003 to fix CSBR-35466
						'output = output & "<a href="" ""  onclick=""return PopUpDate(&quot;" & fullfieldname & "&quot;,&quot;" & theFullSourcePath & "&quot;)"">"
						output = output & "<a href="" "" onclick=""return PopUpDate(&quot;" & fullfieldname & "&quot;,&quot;" & theFullSourcePath & "?date_format=" & Application("DATE_FORMAT") & "&amp;formName=" & formName & "&quot;,&quot;" & formName & "&quot;)"">"
						output = output & "<img src=""" & theFullGifPath & """ height=""16"" width=""16"" border=""0""></a>"
					else
						'SYAN 12/12/2003 to fix CSBR-35466
						'output = output &  "<input type=""text"" name=""" & fullfieldname & """ size=""" & width & """ value=""" & fieldvalue & """ onChange=""isValid(this, " & thetype(1) & ")"">"
						output = output &  "<input type=""text"" id=""" & fullfieldname & """ name=""" & fullfieldname & """ size=""" & width & """ value=""" & fieldvalue & """ onChange=""isValid(this, " & Application("DATE_FORMAT") & ")"">"

						'SYAN 12/12/2003 to fix CSBR-35466
						'output = output & "<a href="" "" onclick=""return PopUpDate(&quot;" & fullfieldname & "&quot;,&quot;" & theFullSourcePath & "&quot;)"">"
						output = output & "<a href="" "" onclick=""return PopUpDate(&quot;" & fullfieldname & "&quot;,&quot;" & theFullSourcePath & "?date_format=" & Application("DATE_FORMAT") & "&amp;formName=" & formName & "&quot;,&quot;" & formName & "&quot;)"">"
						output = output & "<img src=""" & theFullGifPath & """ height=""16"" width=""16"" border=""0""></a>"
					end if
				
				'SYAN modified on 10/7/2005 to fix CSBR-58866	
				'Case "TEXT", "HYPERLINK"
				Case "TEXT"
					'stop
				'End of SYAN modification
					output = output &  "<input type=""text"" name=" & QuotedString(fullfieldname)
					output = output &  " id=" & QuotedString(fullfieldname)
					output = output &  " SIZE=" & QuotedString(width)
					output = output &  " value=" & QuotedString(fieldvalue) 
					fieldtype = theType(1)
					if theAddScript <> "" then
						theAddScript_orig = theAddScript
						theAddScript = ";" & theAddScript
					end if
					
					if detectIE() = true then
							Select Case fieldtype
								Case "0", "TEXT"
									if theAddScript <> "" then
										output = output & " onBlur=""" & theAddScript_orig & """>"
									else
										output = output & ">"
									end if
								Case "1", "INTEGER"
									output = output &     " onBlur=""isValid(this, 1)" & theAddScript & """>"
								Case "2", "LONG"
									output = output &     " onBlur=""isValid(this, 2)"& theAddScript & """>"
								Case "3", "POS_INTEGER"
									output = output &     " onBlur=""isValid(this, 3)" & theAddScript & """>"
								Case "5", "MW", "POS_FLOAT"
									output = output &   " onBlur=""isValid(this, 5)" & theAddScript & """>"
								Case "7", "MEMO"
									output = output   &    " >"	
								Case "8", "DATE"
									output = output &    " onBlur=""isValid(this, 8)" & theAddScript & """>"
									'output = output & " onBlur=""isValid(this, " & Application("DATE_FORMAT") & ")" & theAddScript & """>"
								Case "9", "DATE2"
									output = output &    " onBlur=""isValid(this, 9)" & theAddScript & """>"
									'output = output & " onBlur=""isValid(this, " & Application("DATE_FORMAT") & ")" & theAddScript & """>"
								Case "10", "RANGE"
									output = output &    " onBlur=""isRange(this, strFntNo)" & theAddScript & """>"
								Case "21", "CAS_NO"
									output = output &    " onBlur=""isValid(this, 21)" & theAddScript & """>"
								Case "24", "FORMULA"
									output = output &    " onBlur=""isValid(this, 24)" & theAddScript & """>"
								Case "25", "FullText"
									output = output &    " onBlur=""isValid(this, 25)" & theAddScript & """>"
								Case "36", "DatePicker"
									'Response.Write " onBlur=""isValid(this, 25)"">"
								Case Else
									if theAddScript <> "" then
										output = output & " onBlur=""" & theAddScript_orig & """>"
									else
										output = output & ">"
									end if
							End select
						else
							Select Case fieldtype
								Case "0", "TEXT"
									if theAddScript <> "" then
										output = output & " onChange=""" & theAddScript_orig & """>"
									else
										output = output & ">"
									end if
								Case "1", "INTEGER"
									output = output &    " onChange=""isValid(this, 1)" & theAddScript & """>"
								Case "2", "LONG"
									output = output &     " onChange=""isValid(this, 2)" & theAddScript & """>"
								Case "3", "POS_INTEGER"
									output = output &    " onChange=""isValid(this, 3)" & theAddScript & """>"
								Case "5", "MW", "POS_FLOAT"
									output = output &    " onChange=""isValid(this, 5)" & theAddScript & """>"
								Case "7", "MEMO"
									output = output &    " >"	
								Case "8", "DATE"
									output = output &   " onChange=""isValid(this, 8)" & theAddScript & """>"
									'output = output & " onChange=""isValid(this, " & Application("DATE_FORMAT") & ")" & theAddScript & """>"
								Case "9", "DATE2"
									output = output &   " onChange=""isValid(this, 9)" & theAddScript & """>"
									'output = output & " onChange=""isValid(this, " & Application("DATE_FORMAT") & ")" & theAddScript & """>"
								Case "10", "RANGE"
									output = output &    " onChange=""isRange(this, strFntNo)" & theAddScript & """>"
								Case "21", "CAS_NO"
									output = output &    " onChange=""isValid(this, 21)" & theAddScript & """>"
								Case "24", "FIRST_NOT_INT"
									output = output &    " onChange=""isValid(this, 24)" & theAddScript & """>"
								Case "25", "FullText"
									output = output &   " onChange=""isValid(this, 25)" & theAddScript & """>"
								Case "36", "DatePicker"
								Case Else
									if theAddScript <> "" then
										output = output & " onChange=""" & AddScript_orig & """>"
									else
										output = output & ">"
									end if
							End select
						end if
				'SYAN added on 10/7/2005 to fix CSBR-58866	
				Case "HYPERLINK"
					output = output &  "<input type=""text"" name=" & QuotedString(fullfieldname) 
					output = output &  " id=" & QuotedString(fullfieldname)
					output = output &  " SIZE=" & QuotedString(width)
					output = output &  " value=" & QuotedString(fieldvalue)
					fieldtype = theType(1)
					if theAddScript <> "" then
						theAddScript_orig = theAddScript
						theAddScript = ";" & theAddScript
					end if
					
					output = output & " accept=""image/jpeg"""
					if detectIE() = true then
						if theAddScript <> "" then
							output = output & " onBlur=""" & theAddScript_orig & """>"
						else
							output = output & ">"
						end if
					else
						if theAddScript <> "" then
							output = output & " onChange=""" & AddScript_orig & """>"
						else
							output = output & ">"
						end if
					end if
					'End of SYAN modification
			Case Else
					
					output = output &  "<input type=""text"" name=" & QuotedString(fullfieldname)
					output = output &  " id=" & QuotedString(fullfieldname)
					output = output &  " SIZE=" & QuotedString(width)
					output = output &  " value=" & QuotedString(fieldvalue) 
						if detectIE() = true then
							Select Case fieldtype
								Case "0", "TEXT"
									if theAddScript <> "" then
										output = output & " onBlur=""" & theAddScript_orig & """>"
									else
										output = output & ">"
									end if
								Case "1", "INTEGER"
									output = output &    " onBlur=""isValid(this, 1)" & theAddScript & """>"
								Case "2", "LONG"
									output = output &    " onBlur=""isValid(this, 2)" & theAddScript & """>"
								Case "3", "POS_INTEGER"
									output = output &     " onBlur=""isValid(this, 3)" & theAddScript & """>"
								Case "5", "MW", "POS_FLOAT"
									output = output &    " onBlur=""isValid(this, 5)" & theAddScript & """>"
								Case "7", "MEMO"
									output = output &    " >"	
								Case "8", "DATE"
									output = output &    " onBlur=""isValid(this, 8)" & theAddScript & """>"
									'output = output & " onBlur=""isValid(this, " & Application("DATE_FORMAT") & ")" & theAddScript & """>"
								Case "9", "DATE2"
									output = output &    " onBlur=""isValid(this, 9)" & theAddScript & """>"
									'output = output & " onBlur=""isValid(this, " & Application("DATE_FORMAT") & ")" & theAddScript & """>"
								Case "10", "RANGE"
									output = output &    " onBlur=""isRange(this, strFntNo)" & theAddScript & """>"
								Case "21", "CAS_NO"
									output = output &    " onBlur=""isValid(this, 21)" & theAddScript & """>"
								Case "24", "FORMULA"
									output = output &     " onBlur=""isValid(this, 24)" & theAddScript & """>"
								Case "25", "FullText"
									output = output &    " onBlur=""isValid(this, 25)" & theAddScript & """>"
								Case "36", "DatePicker"
									'output = output &  " onBlur=""isValid(this, 25)"">"
								Case Else
									if theAddScript <> "" then
										output = output & " onBlur=""" & theAddScript_orig & """>"
									else
										output = output & ">"
									end if
							End select
						else
							Select Case fieldtype
								Case "0", "TEXT"
									if theAddScript <> "" then
										output = output & " onChange=""" & theAddScript_orig & """>"
									else
										output = output & ">"
									end if
								Case "1", "INTEGER"
									output = output &    " onChange=""isValid(this, 1)" & theAddScript & """>"
								Case "2", "LONG"
									output = output &      " onChange=""isValid(this, 2)" & theAddScript & """>"
								Case "3", "POS_INTEGER"
									output = output &     " onChange=""isValid(this, 3)" & theAddScript & """>"
								Case "5", "MW", "POS_FLOAT"
									output = output &    " onChange=""isValid(this, 5)" & theAddScript & """>"
								Case "7", "MEMO"
									output = output &    " >"	
								Case "8", "DATE"
									output = output &   " onChange=""isValid(this, 8)" & theAddScript & """>"
									'output = output & " onChange=""isValid(this, " & Application("DATE_FORMAT") & ")" & theAddScript & """>"
								Case "9", "DATE2"
									output = output &    " onChange=""isValid(this, 9)" & theAddScript & """>"
									'output = output & " onChange=""isValid(this, " & Application("DATE_FORMAT") & ")" & theAddScript & """>"
								Case "10", "RANGE"
									output = output &    " onChange=""isRange(this, strFntNo)" & theAddScript & """>"
								Case "21", "CAS_NO"
									output = output &   " onChange=""isValid(this, 21)" & theAddScript & """>"
								Case "24", "FIRST_NOT_INT"
									output = output &   " onChange=""isValid(this, 24)" & theAddScript & """>"
								Case "25", "FullText"
									output = output &   " onChange=""isValid(this, 25)" & theAddScript & """>"
								Case "36", "DatePicker"
								Case Else
									if theAddScript <> "" then
										output = output & " onChange=""" & theAddScript_orig & """>"
									else
										output = output & ">"
									end if
							End select
						end if
				
				end select
		if add_required_coding <> "" then
			if Not(UCase(thetype(0)) = "PICKLIST") then
				output = output &  "</td></tr></table>"
			end if
		end if		
		getShowInputField = output
		
End Function




'displays a plugin box and adds applet code to the calling html form
Sub ShowStrucEditField(ByVal dbkey, ByVal formgroup, ByVal fullfieldname, ByVal BaseId, ByVal idnumber, ByVal width, ByVal height, ByVal searchoptions, ByVal display)	
	tempStrucTable = Application(formgroup & dbkey & "RegTempBaseTable")
	tempStrucName = tempStrucTable & "Structure_"
	cdxpath = Application("TempFileDirectoryHTTP" & dbkey) & tempStrucName & BaseID & ".cdx"
	Response.Write " <table cellpadding = ""2"" cellspacing = ""2"" border = ""0""><tr><td valign = ""top"">"
	GetSearchOptions dbkey, formgroup, fullfieldname, searchoptions, display
	Response.Write "</td></tr><tr><td><table border = ""1""><tr><td>"
	Response.Write "<embed src=" & QuotedString(cdxpath)
	'Response.Write " align=""baseline"""
	Response.Write " border=""0"""
	Response.Write " width=" & QuotedString(width)
	Response.Write " height=" & QuotedString(height)
	special_flag = Request.QueryString("special")
	If Not (special_flag = "edit_query" or special_flag = "restore_query")then
		Response.Write " ID=""" & idnumber & """ name=""CDX"" type=""chemical/x-cdx"">"
	Else
		if special_flag = "edit_query" then
			Session("baseString" & fullfieldname & dbkey & formgroup) = Session("SearchData" & fullfieldname & dbkey & formgroup)
		end if
		if special_flag = "restore_query" then
			query_name = Request("queryname")
			Session("baseString" & fullfieldname & dbkey & formgroup) = Request.Cookies(query_name & dbkey & formgroup)(fullfieldname)
		end if
		if Not Session("baseString" & fullfieldname & dbkey & formgroup) <> "" then
			Response.Write " id=""" & idnumber & """ name=""CDX"" type=""chemical/x-cdx"">"
		Else
			Response.Write " id =""" &  idnumber
			Response.Write """ name=""CDX"" type=""chemical/x-cdx"" dataurl="
			Response.Write Application("ActionForm" & dbkey) & "?dbname=" & dbkey & "&formgroup=" & formgroup & "&fullfieldname=" & fullfieldname & "&dataaction=get_encoded_string"				
			Response.Write ">"
		End if
	End if
	Response.Write "<Input type=""hidden"" name = """ & fullfieldname & """ value = ></td></tr></table></td></tr></table>"
	'AddToAppletArray fullfieldname, idnumber

End Sub

Sub GetSearchOptions(ByVal dbkey, ByVal formgroup, ByVal fullfieldname,ByVal searchoptions, ByVal display)
	theReturn = getGetSearchOptions( dbkey,  formgroup,  fullfieldname, searchoptions,  display)
	Response.Write theReturn
End Sub
Function getGetSearchOptions(ByVal dbkey, ByVal formgroup, ByVal fullfieldname,ByVal searchoptions, ByVal display)
	special_flag = Request.QueryString("special")
	formmode = UCase(Request("formmode"))
		Select Case special_flag
				Case "edit_query"
						if Session("SearchData" & "Similarity" & dbkey & formgroup) <> "" then searchtype = "3"
						if Session("SearchData" & "Exact" & dbkey & formgroup)<> "" then searchtype = "1"
						if Session("SearchData" & "SubStructure" & dbkey & formgroup)<> "" then searchtype = "0"
						if Session("SearchData" & "Identity" & dbkey & formgroup)<> "" then searchtype = "2"
				Case "restore_query"
						queryname = Request.QueryString("queryname")
						if Request.Cookies(queryname & dbkey & formgroup)("SearchData" & "Similarity" & dbkey & formgroup) <> "" then searchtype = "3"
						if Request.Cookies(queryname & dbkey & formgroup)("SearchData" & "Exact" & dbkey & formgroup)<> "" then searchtype = "1"
						if Request.Cookies(queryname & dbkey & formgroup)("SearchData" & "SubStructure" & dbkey & formgroup)<> "" then searchtype = "0"
						if Request.Cookies(queryname & dbkey & formgroup)("SearchData" & "Identity" & dbkey & formgroup)<> "" then searchtype = "2"
				Case ""
						searchtype = ""
			end Select
	
	searchoptions = UCase(searchoptions)
	display = UCase(display)
	Select Case searchoptions
		Case "ALLOPTIONS"
			Select Case display
				Case "NONE"
				Case "SELECTLIST"
							output = output & "<small><strong><font face=""arial"">SearchType</font></strong></small><br>"
							output = output & "<select name=""" & fullfieldname & ".sstype""size=""1"">"
						
							if (searchtype = "0"  OR  searchtype = "") then
								output = output & "<option selected value=""0"">Substructure</option>"
							else
		
								output = output & "<option  value=""0"">Substructure</option>"
							end if
							if searchtype = "1"  then
								output = output & "<option selected value=""1"">Full Structure</option>"
							else
								output = output & "<option value=""1"">Full Structure</option>"
							end if
							if searchtype = "2"  then
								output = output & "<option selected value=""2"">Exact Structure</option>"
							else
								output = output & "<option value=""2"">Exact Structure</option>"
							end if
							if searchtype = "3"  then
								output = output & "<option selected value=""3"">Tanimoto Similarity</option>"
							else
								output = output & "<option value=""3"">Tanimoto Similarity</option>"
							end if
						
							output = output & "</select>"
				Case "SELECTLIST_EXACT"
							output = output & "<small><strong><font face=""arial"">SearchType</font></strong></small><br>"
							output = output & "<select name=""" & fullfieldname & ".sstype""size=""1"">"
							if searchtype = "0"   then
								output = output & "<option selected value=""0"">Substructure</option>"
							else
		
								Response.Write "<option  value=""0"">Substructure</option>"
							end if
							if (searchtype = "1"  OR  searchtype = "") then
								output = output & "<option selected value=""1"">Full Structure</option>"
							else
								output = output & "<option value=""1"">Full Structure</option>"
							end if
							if searchtype = "2"  then
								output = output & "<option selected value=""2"">Exact Structure</option>"
							else
								output = output & "<option value=""2"">Exact Structure</option>"
							end if
							if searchtype = "3"  then
								output = output & "<option selected value=""3"">Tanimoto Similarity</option>"
							else
								output = output & "<option value=""3"">Tanimoto Similarity</option>"
							end if
							
							Response.Write "</select>"
				Case "SELECT_LIST_EDIT"
							output = output & "<small><strong><font face=""arial"">SearchType</font></strong></small><br>"
							output = output & "<select name=""" & fullfieldname & ".sstype""size=""1"">"
							if (searchtype = "0"  OR  searchtype = "") then
								output = output & "<option selected value=""0"">Substructure</option>"
							else
		
								output = output & "<option  value=""0"">Substructure</option>"
							end if
							if searchtype = "1"  then
								output = output & "<option selected value=""1"">Full Structure</option>"
							else
								output = output & "<option value=""1"">Full Structure</option>"
							end if
							if searchtype = "2"  then
								output = output & "<option selected value=""2"">Exact Structure</option>"
							else
								output = output & "<option value=""2"">Exact Structure</option>"
							end if
							if searchtype = "3"  then
								output = output & "<option selected value=""3"">Tanimoto Similarity</option>"
							else
								output = output & "<option value=""3"">Tanimoto Similarity</option>"
							end if
						
							output = output & "</select>"
							if Not DetectNS4 = true then
								output = output & "<script language = ""javascript"">getFullSreenBtn("""& fullfieldname & """)</script>"
							end if
			End Select
		Case "SUBSTRUCTURE"
			output = output & "<input type = ""hidden"" name = " & fullfieldname &".sstype value =""0"">"
		Case "EXACT"
			output = output & "<input type = ""hidden"" name = " & fullfieldname &".sstype value =""1"">"
		Case "IDENTITY"
			output = output & "<input type = ""hidden"" name = " & fullfieldname &".sstype value =""2"">"
		Case "SIMILARITY"
			output = output & "<input type = ""hidden"" name = " & fullfieldname &".sstype value =""3"">"
	
	End Select
	getGetSearchOptions=output
End Function



'add applet inforamtion to the applet array used by WriteAppletCode to output the applet embed information
'into the html form
Sub AddToAppletArray(ByVal fullfieldname, ByVal idnumber)
	if  UCase(Session("chemdraw_ctrl")) = "PLUGIN" then
		addCandidate =  fullfieldname & ";" & idnumber
		if not Instr(UCase(Session("AppletArray")), UCase(addCandidate)) > 0 then
			if Session("AppletArray") <> "" then
				Session("AppletArray") = Session("AppletArray") & "," & addCandidate
			else
				Session("AppletArray") =addCandidate
			end if
		end if
	end if
End Sub



'write the applet code
Sub WriteAppletCode()
	'if Session("AppletArray")<> "" then
		'temparray = Split(Session("AppletArray"), ",", -1)
		'For i = 0 to UBound(temparray)
			'temparray2 = split(temparray(i), ";", -1)
			'Response.Write "<applet code=""camsoft.cdp.CDPHelperAppSimple"" width=""10"" height=""0"""
			'Response.write " name=""" & temparray2(0) & "_ctrl" & """ archive=""/cfserverasp/camsoft.jar"">"
			'Response.write "<param name=""ID"" value=""" & temparray2(1) & """>"
			'Response.write "<param name=""CABBASE"" value=""" & Application("CD_PLUGIN7_CAB_LOCATION") & """></applet>"
		'Next
		'Session("AppletArray") = ""
	'end if
End Sub

Sub ShowCFWChemResult(ByVal dbkey, ByVal formgroup, ByVal chemtype, ByVal fullfieldname, ByVal uniqueid, ByVal displaytype, ByVal width, ByVal height)
	
		thereturn =	getShowCFWChemResult( dbkey,  formgroup,  chemtype,  fullfieldname,  uniqueid,  displaytype,  width,  height)
		Response.Write thereturn
	
End Sub

'called from form to display results from chemfinder.  this function calls displaycfwstructure in
'the case of structures, and getcfwchemdata for MW and Formula
Function getShowCFWChemResult(ByVal dbkey, ByVal formgroup, ByVal chemtype, ByVal fullfieldname, ByVal uniqueid, ByVal displaytype, ByVal width, ByVal height)
	formmode = Ucase(request("formmode"))
	if formgroup = "" then
		formgroup = Request("formgroup")
	end if
	chemtype = UCase(chemtype)
	temparray = Split(fullfieldname, ".", -1)
	if Ubound(temparray) = 2 then
		tablename = temparray(0) & "." & temparray(1)
		fieldname = temparray(2)
	else
		tablename = temparray(0)
		fieldname = temparray(1)
	end if
	Select Case chemtype
		Case "STRUCTURE"	
			if (inStr(UCase(formmode),"ADD_"))>0  then
				output_string = getShowStrucInputField(dbkey,  formgroup,  fullfieldname,  "1",  width, height,"exact", "SelectList")
			else
				if UseCartridge(dbkey, formgroup) then
					if UCase(formmode)="EDIT_RECORD" then
						fullfieldname = "UID." & uniqueid & ":" & fullfieldname
						output_string=getBase64Decode(dbkey, formgroup,  "dummy",  fullfieldname,  displaytype,   uniqueid,  width,  height)
					else
						output_string=getBase64Decode(dbkey, formgroup,  "dummy",  fullfieldname,  displaytype,   uniqueid,  width,  height)
					end if
				else
					if UCase(formmode)="EDIT_RECORD" then
						fullfieldname = "UID." & uniqueid & ":" & fullfieldname
						'AddToAppletArray fullfieldname & uniqueid,uniqueid 
						output_string = getDisplayCFWStructure(dbkey, formgroup, fullfieldname, tablename, fieldname, uniqueid, displaytype, width, height)
					else
						output_string = getDisplayCFWStructure(dbkey, formgroup, fullfieldname, tablename, fieldname, uniqueid, displaytype, width, height)
				
					end if
				end if
			end if
		Case "FORMULA", "MW", "MOLWEIGHT"
	
			output_string = GetCFWChemDataString(dbkey, formgroup, chemtype, fullfieldname, tablename, fieldname, uniqueid, displaytype, width, height)
	End Select
	getShowCFWChemResult = output_string
End Function



'check whether ini variables have been set to specifically overrid cdx display
Function OverrideToGif(byval formmode)
	on error resume next
	override = false
	if CBool(Application("Display_Gifs_Only_FORM_NS")) = True and UCase(formmode) = "EDIT" AND detectNS4 = true then
		override = true
	end if	
	if CBool(Application("Display_Gifs_Only_FORM_NS6")) = True and UCase(formmode) = "EDIT" AND detectNS6 = true then
		override = true
	end if	
	if CBool(Application("Display_Gifs_Only_List_NS")) = True and UCase(formmode) = "LIST" AND detectNS4 = true  then
		override = true
	end if
	if CBool(Application("Display_Gifs_Only_List_NS6")) = True and UCase(formmode) = "LIST" AND detectNS6 = true then
		override = true
	end if
	if CBool(Application("Display_Gifs_Only_FORM_IE")) = True and UCase(formmode) = "EDIT" AND detectIE = true then
		override = true
	end if
	if CBool(Application("Display_Gifs_Only_LIST_IE")) = True and UCase(formmode) = "LIST" AND detectIE = true then
		override = true
	end if
	if err.number <> 0 then override = false
	OverrideToGif = override
End Function


Sub AddtoStrucAppletFields(fullfieldname)
	%>
		<script language="javascript">
			addStrucAppletFields("<%=fullfieldname%>")
		</script>
	
	<%	
End Sub

Sub AddtoRelLoadedFields(fullfieldname)
	%>
		<script language="javascript">
			addRelLoaded("<%=fullfieldname%>")
		</script>
	<%	
End Sub
'Show cdx stored in mdb file
Sub CDXWrite(ByVal dbkey, formgroup, ByRef rsname, ByVal fullfieldname, ByVal displaytype,  ByVal uniqueid, ByVal width, ByVal height)
	rs_open = false
	if Not(rsname.eof and rsname.bof) then
		rs_open = true
	end if
	if rs_open = true then
		temp = split(fullfieldname, ".", -1)
		if UBound(temp) = 2 then
			tablename = temp(0) & "." & temp(1)
			fieldname = temp(2)
		else
			tablename = temp(0)
			fieldname = temp(1)
		end if
		filetype = ".cdx"
		Dim CDXObject
		on error resume next
		CDXObject = rsname(fieldname)
		myDir = Application("TempFileDirectory" & dbkey)  & tablename & fieldname & "_" & uniqueid & filetype
		Set cdxout= Server.CreateObject("cowsUtils.ObjRetrieve")
		success = cdxout.ObjWrite(CDXObject, myDir)
			if success = True then	
				DisplayCFWStructure dbkey, formgroup, fullfieldname, tablename, fieldname, uniqueid, displaytype, width, height 	
			else
				oldpath = Application("TempFileDirectory" & dbkey)   &   "nostructure" & ".cdx" 
				newpath = Application("TempFileDirectory" & dbkey)  & tablename & fieldname & "_" & uniqueid & ".cdx"  	
				on error resume next
				Set theFile = Server.CreateObject("Scripting.FileSystemObject")
				theFile.CopyFile oldpath, newpath
				Set theFile = Nothing
				theFile = ""
				DisplayCFWStructure dbkey, formgroup, fullfieldname, tablename, fieldname, uniqueid, displaytype, width, height 	
			end if	
	end if 'rs_open = true
	
End Sub
'LJB 12_30_2003 support output of images from databases - blobs and clobs
Function ImageWrite(ByVal dbkey, formgroup, ByRef rsname, ByVal fullfieldname, ByVal displaytype,  ByVal uniqueid, ByVal width, ByVal height, filetype)
	
	rs_open = false
	if Not(rsname.eof and rsname.bof) then
		rs_open = true
	end if
	if rs_open = true then
		temp = split(fullfieldname, ".", -1)
		if UBound(temp) = 2 then
			tablename = temp(0) & "." & temp(1)
			fieldname = temp(2)
		else
			tablename = temp(0)
			fieldname = temp(1)
		end if
		
		Dim CDXObject
		on error resume next
		CDXObject = rsname(fieldname)
		myDir = Application("TempFileDirectory" & dbkey)  & tablename & fieldname & "_" & uniqueid & "." & filetype
		Set cdxout= Server.CreateObject("cowsUtils.ObjRetrieve")
		success = cdxout.ObjWrite(CDXObject, myDir)
			
	end if 'rs_open = true
	if success = true then
		ImageWrite = myDir
	else
		ImageWrite = ""
	end if
End Function
Sub Base64Decode(ByVal dbkey, formgroup, ByRef rsname, ByVal fullfieldname, ByVal displaytype,  ByVal uniqueid, ByVal width, ByVal height)
	theReturn = getBase64Decode( dbkey, formgroup,  rsname,  fullfieldname,  displaytype,   uniqueid,  width,  height)
	Response.Write theReturn
End Sub

'Show cdx stored in mdb file
Function getBase64Decode(ByVal dbkey, formgroup, ByRef rsname, ByVal fullfieldname, ByVal displaytype,  ByVal uniqueid, ByVal width, ByVal height)
		session("base64cdx")=""
			Dim Base64Str	
			decodesuccess = true	
			
			if inStr(fullfieldname, "UID")> 0 then
				temp = split(fullfieldname, ":", -1)
				temp_name = temp(1)
			else
				temp_name = fullfieldname
			end if
				
			temp = split(temp_name, ".", -1)
			if UBound(temp) = 2 then
				fieldname = temp(2)
				tablename = temp(0) & "." & temp(1)
			else
				fieldname = temp(1)
				tablename = temp(0)
			end if
			filetype = ".cdx"		
				
				
			rs_open = false
			
			
				if UseCartridge(dbkey, formgroup) = true then
					if not isObject(rsname) then
						orig_fieldname = fieldname
						
						fieldname = replace(UCase(fieldname), "STRUCTURE", "BASE64_CDX")

						strucIDField = GetTableVal(dbkey, tablename, kStrucFieldID)
						
						'sql = "SELECT " & fieldname & "," & _
						'		" CsCartridge.MolWeight(" & fieldname & ")  molweight," &_
						'		" CsCartridge.Formula(" & fieldname & ",'SORTABLE=YES') formula" &_
						'		" FROM " & tablename & " WHERE " & strucIDField & "= ?"
						
						'JHS 1/9/2008 - Sortable=yes messes up dipslay
						sql = "SELECT " & fieldname & "," & _
						" CsCartridge.MolWeight(" & fieldname & ")  molweight," &_
						" CsCartridge.Formula(" & fieldname & ",'SORTABLE=NO') formula" &_
						" FROM " & tablename & " WHERE " & strucIDField & "= ?"
						
						Session("ContentsField" & dbkey & formgroup) = ""

						if isObject(existingConnection) then
							if existingConnection.state = 0  then
								Set existingConnection = GetNewConnection(dbkey, formgroup, "base_connection")
							end if
						else
							Set existingConnection = GetNewConnection(dbkey, formgroup, "base_connection")
						end if
						Set rs = server.createobject("adodb.recordset")
						Set Cmd = Server.CreateObject("ADODB.Command")
						Cmd.ActiveConnection = existingConnection
						Cmd.CommandType = adCmdText
						Cmd.Parameters.Append Cmd.CreateParameter("strucid", adNumeric, 1, 0, uniqueid)	
						cmd.CommandText = sql
						Trace "GetBase64Decode sql: " & sql & " (" & uniqueid & ")", 19
						t0 = timer
						Set rs = cmd.execute
						Trace "GetBase64Decode Time to fetch structure: " & timer - t0 & " seconds." , 9
						if not rs.eof then
							rs_open = true	
						end if
						if UCase(orig_fieldname) = "STRUCTURE" then
							mw_fieldname = "MOLWEIGHT"
							formula_fieldname = "FORMULA"
						else
							mw_fieldname = fieldname & "_MOLWEIGHT"
							formula_fieldname = fieldname & "_FORMULA"
						end if
						'DGB molweight and formula fields returned are not properly typed by the cartridge
						'must cast explicitly
					'******************CSBR ID - 111467**************************
					'Changed By - Manoj Unnikrishnan
					'Date - 09-Aug-2010
					'Purpose - Checking whether these fields contains value, before calling the Cdbl() and CStr() functions
						if not (isnull(rs("molweight")) and isempty(rs("molweight"))) then
							theMW = Cdbl(rs("molweight").value)
						end if
						if not (isnull(rs("formula")) and isempty(rs("formula"))) then
							theFormula = CStr(rs("formula").Value)
						end if
					'**************End of Change -CSBR ID - 111467****************		
						Base64Str = rs(fieldname).Value
						
						
						rs.close
				
					else
						on error resume next
						if isObject(rsname) then
							if Not(rsname.bof and rsname.eof) then
								rs_open = true
							end if
							mw_fieldname = fieldname
							formula_fieldname = fieldname
						end if
						if rs_open = true then
							on error resume next
							
							Base64Str = rsname(fieldname)
							theMW = ConvertBase64toMW(Base64Str)
							on error goto 0
						end if
							
						
					end if
				else
					on error resume next
					if isObject(rsname) then
						if Not(rsname.bof and rsname.eof) then
							rs_open = true
						end if
					
					mw_fieldname = fieldname
					formula_fieldname = fieldname
					end if
					if rs_open = true then
						on error resume next
						
						Base64Str = rsname(fieldname)
						
						on error goto 0
					end if
				end if
			
			
			
			on error goto 0
			'Response.Write " "
			
			if Len(Base64Str) > 0 then
			
			
				
				
				
				if UseCartridge(dbkey, formgroup) then
					on error resume next
					if (isEmpty(theMW) or theMW = 0) and Application("NON_CHEMICAL_SUBMIT")="DISALLOW" then
						decodesuccess = false
					else
						decodesuccess = true
						Session("base64cdx") = Base64Str
					end if
					if Not Session("MW"& dbkey & formgroup & tablename & mw_fieldname & uniqueid)<> "" then
						Session("MW"& dbkey & formgroup & tablename & mw_fieldname & uniqueid)  = theMW
						Session("Formula"& dbkey & formgroup & tablename & formula_fieldname & uniqueid) = theFormula
					end if
					
				else
					if Not Session("MW"& dbkey & formgroup & tablename & "MolWeight" & uniqueid)<> "" then
						CSDOGetChemData dbkey, formgroup, tablename, mw_fieldname, uniqueid, "molweight",""
						CSDOGetChemData dbkey, formgroup, tablename, formula_fieldname, uniqueid, "formula",""
					end if
				end if
			else
				decodesuccess = false
			end if
			
			If decodesuccess = true then
			
				theOutput = getDisplayCFWStructure(dbkey, formgroup, fullfieldname, tablename, fieldname, uniqueid, displaytype, width, height) 	
				Session("base64cdx")=""
			else
				myDir = Application("TempFileDirectory" & dbkey)  & tablename & fieldname & "_" & uniqueid & filetype
				oldpath = Application("TempFileDirectory" & dbkey)   &   "nostructure" & ".cdx" 
				newpath = Application("TempFileDirectory" & dbkey)  & tablename & fieldname & "_" & uniqueid & ".cdx"  	
				oldpath2 = Application("TempFileDirectory" & dbkey)   &   "nostructure" & ".gif" 
				newpath2 = Application("TempFileDirectory" & dbkey)  & tablename & fieldname & "_" & uniqueid & ".gif"  	
				on error resume next
				Set theFile = Server.CreateObject("Scripting.FileSystemObject")
				theFile.CopyFile oldpath, newpath
				theFile.CopyFile oldpath2, newpath2
				Set theFile = Nothing
				theFile = ""
				'add highlighting
				theOutput = getDisplayCFWStructure(dbkey, formgroup, fullfieldname, tablename, fieldname, uniqueid, displaytype, width, height) 	
				Session("base64cdx")=""
			end if	
		
			if UCase(formmode) = "EDIT_RECORD" then
				fullfieldname_temp = replace(fullfieldname, "BASE64_CDX", "structure")
				add_required_coding = getRequiredHighlight(formmode, fullfieldname_temp)
				if add_required_coding <> "" then
					theOutput =  "<table " & add_required_coding & "><tr><td>" & theOutput & "</td></tr></table>"
				end if
			end if
			getBase64Decode = theOutput
End Function

Sub Base64DecodeDirect(ByVal dbkey, formgroup, Base64Str, ByVal fullfieldname,ByVal baseid, ByVal uniqueid, ByVal specifier, ByVal height)
	theReturn = getBase64DecodeDirect( dbkey, formgroup, Base64Str,  fullfieldname, baseid,  uniqueid,  specifier,  height)
	Response.Write theReturn
End Sub
'Show cdx stored in mdb file
Function  getBase64DecodeDirect(ByVal dbkey, formgroup, Base64Str, ByVal fullfieldname,ByVal baseid, ByVal uniqueid, ByVal specifier, ByVal height)
			session("base64cdx")=""
			if inStr(specifier, ":")>0 then
				temp_display_type = split(specifier, ":", -1)
				width = temp_display_type(0)
				displaytype= temp_display_type(1)
			else
				width = specifier
				displaytype = "BASE64CDX"	
			end if
			temp = split(fullfieldname, ".", -1)
			if UBound(temp) = 2 then
				fieldname = temp(2)
				tablename = temp(0) & "." & temp(1)
			else
				fieldname = temp(1)
				tablename = temp(0)
			end if
			filetype = ".cdx"
				
			if UCase(formmode) = "EDIT_RECORD" then
				fullfieldname = "UID." & baseid & ":" & fullfieldname
			end if
				
			if Len(Base64Str) > 0 then
				myDir = Application("TempFileDirectory" & dbkey)  & tablename & fieldname & "_" & uniqueid & filetype
					'If not isObject(Application("myDecoder"))then
					'Set Application("myDecoder") = Server.CreateObject("Base64Decode.Decode")
					Session("base64cdx") = Base64Str
				'End If
				'decodesuccess = Application("myDecoder").Decode(Base64Str, myDir)
				decodesuccess = true
				else
				decodesuccess= false
			end if
			If decodesuccess = true then
				theReturn=getDisplayCFWStructure(dbkey, formgroup, fullfieldname, tablename, fieldname, uniqueid, displaytype, width, height)
				Session("base64cdx")=""
			else
				oldpath = Application("TempFileDirectory" & dbkey)   &   "nostructure" & ".cdx" 
				newpath = Application("TempFileDirectory" & dbkey)  & tablename & fieldname & "_" & uniqueid & ".cdx"  	
				oldpath2 = Application("TempFileDirectory" & dbkey)   &   "nostructure" & ".gif" 
				newpath2 = Application("TempFileDirectory" & dbkey)  & tablename & fieldname & "_" & uniqueid & ".gif"  	
			
				on error resume next
				Set theFile = Server.CreateObject("Scripting.FileSystemObject")
				theFile.CopyFile oldpath, newpath
				theFile.CopyFile oldpath1, newpath2
				Set theFile = Nothing
				theFile = ""
				theReturn = getDisplayCFWStructure( dbkey, formgroup, fullfieldname, tablename, fieldname, uniqueid, displaytype, width, height)	
				Session("base64cdx")=""
			end if	
			'AddToAppletArray fullfieldname, uniqueid
			getBase64DecodeDirect = theReturn
End Function

Sub GetCFWChemData(ByVal dbkey, formgroup, ByVal datatype,ByVal fullfieldname, ByVal tablename, ByVal fieldname, ByVal uniqueid, ByVal displaytype, ByVal width, ByVal height)
	theReturn = GetCFWChemDataString( dbkey, formgroup,  datatype, fullfieldname,  tablename,  fieldname,  uniqueid,  displaytype,  width,  height)
	Response.Write theReturn
End Sub
'get chemical data from chemfinder other than structure called by showinput
Function GetCFWChemDataString(ByVal dbkey, formgroup, ByVal datatype,ByVal fullfieldname, ByVal tablename, ByVal fieldname, ByVal uniqueid, ByVal displaytype, ByVal width, ByVal height)
	datatype = UCase(datatype)
	if dbkey = "reg" then
		Session("Formula" & dbkey & formgroup & tablename & fieldname & uniqueid) = ""
		Session("MW" & dbkey & formgroup & tablename & fieldname & uniqueid) = ""
	end if
	Select Case datatype
		Case "FORMULA"
		
			If (Session("Formula" & dbkey & formgroup & tablename & fieldname & uniqueid) = "") then
				
				CSDOGetChemData dbkey, formgroup, tablename, fieldname, uniqueid, "formula", ""
			End if
			chemresult = Trim(Session("Formula" &  dbkey & formgroup & tablename & fieldname & uniqueid))
			if CBool(Application("Format_Formula")) = True then
				chemresult = GetHTMLStringForFormula(chemresult)
			end if
		Case "MW", "MOLWEIGHT"
			If (Session("MW" & dbkey & formgroup & tablename & fieldname & uniqueid) = "") then
			
				CSDOGetChemData dbkey, formgroup, tablename, fieldname, uniqueid, "molweight",""
			End if
			chemresult = Session("MW" & dbkey & formgroup & tablename & fieldname & uniqueid)
			
	End Select
	theReturn = getDisplayData(dbkey, formgroup, displaytype, fullfieldname, chemresult, width, height)
	GetCFWChemDataString = theReturn
End Function

Sub ShowLookUpList (ByVal dbkey, ByVal formgroup, ByRef rsname, ByVal fullfieldname, ByVal inputstr,  ByVal selected_value, ByVal selected_text, ByVal size, ByVal blankline_add, ByVal getType, ByVal default_value)
	output_string=getShowLookUpList ( dbkey,  formgroup,  rsname,  fullfieldname,  inputstr,   selected_value,  selected_text,  size,  blankline_add,  getType,  default_value)
	Response.Write output_string
End Sub
	
Function getShowLookUpList (ByVal dbkey, ByVal formgroup, ByRef rsname, ByVal fullfieldname, ByVal inputstr,  ByVal selected_value, ByVal selected_text, ByVal size, ByVal blankline_add, ByVal getType, ByVal default_value)
		
		special_flag = Request.QueryString("special")
		formmode = UCase(Request("formmode"))
			Select Case special_flag
				Case "edit_query"
					fieldvalue = Session("SearchData" & fullfieldname &  dbkey & formgroup)
				Case "restore_query"
					queryname = Request.QueryString("queryname")
					fieldvalue = Request.Cookies(queryname & dbkey & formgroup)(fullfieldname)
				Case ""	
					if instr(UCase(formmode),"ADD_") > 0 and UCase(blankline_add) = "FALSE"then
						fieldvalue = default_value
					else
						fieldvalue = ""
					end if
			end Select
	if instr(formmode,"ADD_")>0 OR UCase(formmode) = "EDIT_RECORD" then
		append_required_highlight = getRequiredHighlight(formmode, fullfieldname)
		if append_required_highlight <> "" then
			output_str = output_str &  "<table " & append_required_highlight & "><tr><td>"
		end if
	end if
	origgetType = getType
	
	if UCase(formmode) = "EDIT_RECORD" then
		temp1=split(fullfieldname, ".", -1)
		if UBound(temp1) = 2 then
			tablename = temp1(0)& "." & temp1(1)
		else
			tablename = temp1(0)
		end if
		primarykey= GetTableVal(dbkey, tablename, kPrimaryKey)
		on error resume next
		uniqueID = rsname(primarykey)
		on error goto 0
		if not Instr(UCase(fullfieldname), "UID.")> 0 then
			fullfieldname = "UID." & uniqueid & ":" & fullfieldname
		end if
	end if
	if Not((formmode = "LIST") or (formmode = "EDIT"))then
		if Len(inputstr)>0 then

			if (thesize = "")then
				thesize = "1"
			end if
			blankLine_text = "-- Select one --"
			if inStr(UCase(getType),"VALIDATE")>0 then
				theArray = Split(origgetType, ":", -1)
				theValScript = theArray(2)
				if inStr(UCase(getType),"VALUE")>0  then
				
				
					output_str = output_str &  "<select  name=""" & fullfieldname & "list"" onChange=""updateSelectedValue(this.form,this);"& theValScript & """ size =""" & thesize &""">"
			
				else
					output_str = output_str &  "<select  name=""" & fullfieldname & "list"" onChange=""updateSelectedText(this.form,this);"& theValScript & """  size =""" & thesize &""">"
				end if
			else
				if inStr(UCase(getType),"VALUE")>0  then
			
					output_str = output_str &  "<select  name=""" & fullfieldname & "list"" onChange=""updateSelectedValue(this.form,this)"" size =""" & thesize &""">"
			
				else
					output_str = output_str &  "<select  name=""" & fullfieldname & "list"" onChange=""updateSelectedText(this.form,this)"" size =""" & thesize &""">"
				end if
			end if
			if inputstr <> "" then
			
				if Not((UCase(formmode) = "LIST") or (UCase(formmode) = "EDIT") or (UCase(formmode) = "EDIT_RECORD"))then
					
					if blankline_add = true or UCase(blankline_add) = "TRUE"then
						output_str = output_str & "<option>" & blankLine_text  & "</option>"
						'SYAN modified on 8/22/2007 for CARA. To remember the selected compound_type as a pass in parameter
						'There is no reason to wipe out the selected_value if there is a value passed in
						if selected_value = "" then 
							selected_value = ""
						end if
						'End of SYAN modification
					else
						selected_value = default_value
					end if
				end if
				if UCase(formmode) = "EDIT_RECORD" then
					if isEmpty(selected_text)  then
						'if blankline_add = true or UCase(blankline_add) = "TRUE"then
							output_str = output_str & "<option>" & blankLine_text  & "</option>"
							selected_value = ""
						'end if
					end if
				end if
				
				temp = Split(inputstr, ",", -1)
				on error resume next
				for i=0 to Ubound(temp)
					
					theItems = split(temp(i),":",-1)
					if inStr(UCase(getType),"VALUE")>0 then
						'if this is edit_query or restore query, fieldvalue might be populated so check
						if fieldvalue <> "" then
							input_src = fieldvalue
							list_src =  theItems(0)
						else	
							input_src = selected_value
							list_src =  theItems(0)	
						end if					
					else
						if fieldvalue <> "" then
							'if this is edit_query or restore query, fieldvalue might be populated so check
							input_src = fieldvalue
							list_src =  theItems(1)
						else
							input_src = selected_text
							list_src =  theItems(1)
						end if
					end if
				
					if Trim(UCase(input_src)) = Trim(UCase(list_src)) then
						output_str = output_str &  "<option value=" & list_src &  " selected>"
					else
						output_str = output_str &  "<option value=" & list_src &  ">"
					end if
					if inStr(theItems(1), "&comma;") then
						theDisplayOption = replace(theItems(1), "&comma;", ",")
					else
						theDisplayOption = theItems(1)
					end if
					output_str = output_str &  theDisplayOption
					output_str = output_str &  "</option>"
					
				Next
				on error goto 0
			End if
			output_str = output_str &  "</select>"
			if append_required_highlight <> "" then
				output_str = output_str &  "</td></tr></table>"
			end if
		else
			' RAS - inputstr in this case has a zero length!
			' So why are we trying to split it?
			' temp = Split(inputstr, ":", -1)
			' Response.Write temp(1)
			' if inStr(getType,"VALUE")>0 then
				' selected_value = temp(0)
			' else
				' selected_value = temp(1)
			' end if
			output_str = output_str &  "<FONT FACE=""Arial"" SIZE=""1"" COLOR=""Red"">--NONE FOUND--</FONT>"
			if instr(formmode,"ADD_" )>0 OR UCase(formmode) = "EDIT_RECORD"  then
				if append_required_highlight <> "" then
					output_str = output_str &  "</td></tr></table>"
				end if
			end if
		end if
		if fieldvalue <> "" then
			selected_value = fieldvalue
		end if
		
	
		output_str = output_str &  "<input type=""hidden"" name=""" & fullfieldname & """ value=""" & selected_value & """ >"
		' RAS DEBUG input field... Response.write "<input type=""text"" value=""" & selected_value & """ name=""" & fullfieldname & """>"
		
	else
		if instr(selected_text, "&comma;")> 0 then
			selected_text = replace(selected_text, "&comma;", ",")
		end if
		output_str = output_str &  selected_text
	end if
	if Not(output_str) <> "" then
		output_str = "&nbsp;"
	end if
	getShowLookUpList = output_str
End Function

Sub ShowAutoFillLookUpList (ByVal dbkey, ByVal formgroup, ByRef rsname, ByVal fullfieldname, ByVal inputstr,  ByVal size, ByVal blank_line_text, ByVal Value_field, ByVal Text_field)
	If (Instr(UCase(formmode),"EDIT_")> 0 OR Instr(UCase(formmode),"SEARCH")> 0 OR Instr(UCase(formmode),"ADD_")> 0)then 
		

		if Len(inputstr)>0 then
			if (thesize = "")then
				thesize = "1"
			end if
			
			if UCase(formmode) = "EDIT_RECORD" then
				temp1=split(fullfieldname, ".", -1)
				if UBound(temp1) = 2 then
					tablename = temp1(0) & "." & temp1(1)
				else
					tablename = temp1(0)
				end if
				primarykey= GetTableVal(dbkey, tablename, kPrimaryKey)
				on error resume next
				uniqueID = rsname(primarykey)
				on error goto 0
				Value_field = "UID." & uniqueid & ":" & Value_field & "_orig"
				Text_field = "UID." & uniqueid & ":" & Text_field & "_orig"
				fullfieldname = fullfieldname & "_orig"
			end if

			Response.Write "<select name=""" & fullfieldname & "list"" onChange=""" & "AutoFillField(this,this.form.elements['" & text_field & "'],this.form.elements['" & value_field & "'],this.form.elements['" & replace(text_field, "_orig", "") & "'],this.form.elements['" & replace(value_field, "_orig", "") & "'])" & """ size =""" & thesize &""">"
			
			if inputstr <> "" then
				if blank_line_text <> "" then
					Response.Write "<option value=""header"">" & blank_line_text  & "</option>"
					selected_value = ""
				else
					blank_line_text = "-Select for Autofill-"
					Response.Write "<option value=""header"">" & blank_line_text  & "</option>"
					selected_value = ""
				end if
				'SYAN modified 9/27/2004 to fix CSBR-46729
				if Application("FLOAT_FORMAT") = "9" And Instr(inputstr, "|") > 0 then
					temp = Split(inputstr, "|", -1)
				Else
					temp = Split(inputstr, ",", -1)
				End if
				'End of SYAN modification
				
				for i=0 to Ubound(temp)
					theItems = split(temp(i),":",-1)
					Response.write "<option value=" & theItems(0) &  ">"
					if inStr(theItems(1), "&comma;") then
						theDisplayOption = replace(theItems(1), "&comma;", ",")
					else
						theDisplayOption = theItems(1)
					end if
					Response.write theDisplayOption
					Response.write "</option>"
				Next
			End if
			Response.write "</select>"
		else
			Response.write "<FONT FACE=""Arial"" SIZE=""1"" COLOR=""Red"">--NONE FOUND--</FONT>"
		end if
		
	else
		exit sub
	end if

End Sub

'display the resulting data from the recordset, or from chemfinder (other than structure)
Sub DisplayData(ByVal dbkey, formgroup, ByVal displaytype, ByVal fullfieldname, ByVal inputstr,  ByVal specifier, ByVal width)
	the_output = getDisplayData( dbkey, formgroup,  displaytype,  fullfieldname,  inputstr,   specifier,  width)
	Response.Write the_output
End Sub

'JHS 1/18/2008 - Use arithmatic rounding instead of bankers (which is what the round function uses)
Function MathRound(number,decPoints) 
	decPoints = 10^decPoints 
	MathRound = round(number*decPoints+0.1)/decPoints 
End Function

Function getDisplayData(ByVal dbkey, formgroup, ByVal displaytype, ByVal fullfieldname, ByVal inputstr,  ByVal specifier, ByVal width)
	orig_specifier = specifier
	Session("Picture") = ""
	Session("mime_type") = ""
	if inStr(displaytype, "PICTURE:")>0 then
		temp = split(displaytype, ":", -1)
		displaytype = temp(0)
		mime_type = temp(1)
		lob_display = temp(2)
		data_type = temp(3)
		get_data = "false"
		
	end if
	if inStr(displaytype, "PICTURE_GET_LOB:")>0 then
		temp = split(displaytype, ":", -1)
		displaytype = temp(0)
		mime_type = temp(1)
		lob_display = temp(2)
		data_type = temp(3)
		primarykey = temp(4)
		uniqueid = temp(5)
		get_data="true"
	end if
	if inStr(width, ":")> 0 then
		temp_width = split(width, ":", -1)
		addMaxWithScript = "checkWidth(this," & temp_width(1) & ")"
		width = temp_width(0)
	end if 
	if UCase(formmode)   = "EDIT_RECORD"  or UCase(formmode)   = "ADD_RECORD"  then
			if Instr(specifier, ":VALIDATE:") > 0 then
				thetemptype = split(specifier, ":VALIDATE:", -1)
				specifier = thetemptype(0)
				theValScript = thetemptype(1)
			
				if addMaxWithScript <> "" then
					addMaxWithScript = addMaxWithScript  & ";"  & theValScript
				else
					addMaxWithScript = theValScript
				end if
			else
				if Instr(specifier, "VALIDATE:") > 0 then
					thetemptype = split(specifier, "VALIDATE:", -1)
					specifier = thetemptype(0)
					theValScript = thetemptype(1)
				
					if addMaxWithScript <> "" then
						addMaxWithScript = addMaxWithScript  & ";"  & theValScript
					else
						addMaxWithScript = theValScript
					end if
				end if
			end if

	end if
	if instr(specifier, "DATE")>0 then
		Select Case UCase(specifier)
			Case "DATE:8" 'mm/dd/yyyy - Note: year is ambiguous is is only has 2 characters and can't be correcte.
				
				if not isEmpty(inputstr) then
					Date_array = Split(inputstr, "/", -1)
					if Len(Date_array(0)) = 1 then
						Date_array(0) = "0" & Date_array(0)
					end if
					if Len(Date_array(1)) = 1 then
						Date_array(1) = "0" & Date_array(1)
					end if
					new_inputstr = Date_array(0) & "/" & Date_array(1) & "/" & Date_array(2)
				end if
			Case "DATE:9" 'dd/mm/yyyy Note: year is ambiguous is is only has 2 characters and can't be correcte.
				if not isEmpty(inputstr) then
					Date_array = Split(inputstr, "/", -1)
					if Len(Date_array(0)) = 1 then
						Date_array(0) = "0" & Date_array(0)
					end if
					if Len(Date_array(1)) = 1 then
						Date_array(1) = "0" & Date_array(1)
					end if
					new_inputstr = Date_array(0) & "/" & Date_array(1) & "/" & Date_array(2)
				end if
			Case Else
				new_inputstr = inputstr
		End Select
		
		
		inputstr = new_inputstr
	end if
	
	if UCASE(formmode) = "EDIT" OR UCASE(formmode) = "LIST" then 'format special case results
		if (UCase(displaytype) = "RAW" or UCase(displaytype) = "RAW_NO_EDIT" or UCase(displaytype) = "PLAIN")then
			if specifier <> "" then	
				if Not instr(specifier, ":")> 0 then
				
					specifier = specifier & ":" 'prevent errors from occuring
				end if
				if instr(specifier, "!")> 0 then ' get rid of default values which make no sense for edit mode
					
					specifier_temp = split(specifier, "!", -1)
					specifier = specifier_temp(0)
				end if
				thetype = Split(specifier, ":", -1)
		
					select case UCase(thetype(0))
						Case "FORMULA", "24"
							if CBool(Application("Format_Formula")) = True then
								inputstr = GetHTMLStringForFormula(inputstr)
							end if
						Case "CHECKBOX"
							Select Case UCase(thetype(1))
								Case "", "BOOLEAN"
									on error resume next
									if isEmpty(inputstr) then inputstr = 0
									showFlag =  CBool(inputstr)
									'output true or fase
								Case "YES_NO"
									on error resume next
									if isEmpty(inputstr) then inputstr = 0
									showFlag =  CBool(inputstr)
									if showFlag = True then
										inputstr = "Yes"
									else
										inputstr = "No"
									end if
									'output true or fase
								Case "RAW"
									'output 0 or 1
								Case "GIF"
									on error resume next
									if isEmpty(inputstr) then inputstr = 0
									showFlag =  CBool(inputstr)
									if showFlag = True then
										inputstr = "<IMG SRC=""" & Application("NavButtonGifPath") & "CB_checked.gif" & """>"
									else
										inputstr= "<IMG SRC=""" & Application("NavButtonGifPath") & "CB_not_checked.gif" & """>"
									end if
								Case ELSE
									on error resume next
									if isEmpty(inputstr) then inputstr = 0
									showFlag =  CBool(inputstr)
									inputstr = showFlag
									'output true or fase
							End Select
						
						Case "HYPERLINK"
						if inputstr <> "" then
							if inStr(orig_specifier, "!")> 0 then
								new_array = split(orig_specifier, "!", -1)
								link_name = new_array(UBound(new_array))
								link_type = thetype(1)
							else
								link_name = inputstr
								link_type = thetype(1)
							end if
							
							leading_char = Left(inputstr, 1)
							if leading_char = "/" then
								bAdd_two_slashes = false
							else
								bAdd_two_slashes = true
							end if
							
							Select Case UCase(link_type)
								Case "", "LINK"
								
									if not instr(inputstr,"http://")> 0 then
										if bAdd_two_slashes = true then
											inputstr = "<a href=""http://" & inputstr & """ target=""_blank"">" & "Link"  & "</a>"
										else
											inputstr = "<a href=""http:/" & inputstr & """ target=""_blank"">" & "Link"  & "</a>"
										end if
									else
										inputstr = "<a href=""" & inputstr & """ target=""_blank"">" & "Link"  & "</a>"
									end if
								Case "FULL"
								
									if not instr(inputstr,"http://")> 0 then
										if bAdd_two_slashes = true then
											inputstr = "<a href=""http://" & inputstr & """ target=""_blank"">" & inputstr & "</a>"
										else
											inputstr = "<a href=""http:/" & inputstr & """ target=""_blank"">" & inputstr & "</a>"
										end if
									else
										inputstr = "<a href=""" & inputstr & """ target=""_blank"">" & inputstr  & "</a>"
									end if
								Case "MAILTO"
									if not instr(inputstr,link_type & ":")> 0 then
										inputstr = "<a href=""" & link_type & ":" & inputstr & """ target=""_blank"">" & link_name & "</a>"
										
									else
										inputstr = "<a href=""" & inputstr & """ target=""_blank"">" & link_name  & "</a>"
									end if
								
								Case ELSE
								
									if not instr(inputstr,link_type & "://")> 0 then
										if bAdd_two_slashes = true then
											inputstr = "<a href=""" & link_type & "://" & inputstr & """ target=""_blank"">" & link_name & "</a>"
										else
											inputstr = "<a href=""" & link_type & ":/" & inputstr & """ target=""_blank"">" & link_name & "</a>"
										end if
									else
										inputstr = "<a href=""" & inputstr & """ target=""_blank"">" & link_name  & "</a>"
									end if
							End Select
						end if
					end select
			end if
		end if
	end if
	if UCase(formmode) = "EDIT_RECORD" or  UCase(formmode) = "ADD_RECORD" then
		
			if detectIE = true then
				ScriptVal = " onBlur=""UpdateFieldVal(this.form,this)"""
			else
				ScriptVal = " onChange=""UpdateFieldVal(this.form,this)"""
			end if
			
		if (UCase(displaytype) = "RAW" or UCase(displaytype) = "PLAIN")then
			if specifier <> "" then	
				if Not instr(specifier, ":")> 0 then
					specifier = specifier & ":" 'prevent errors from occuring
				end if
				if instr(specifier, "!")> 0 then ' get rid of default values which make no sense for edit mode
					specifier_temp = split(specifier, "!", -1)
					specifier = specifier_temp(0)
				end if
				thetype = Split(specifier, ":", -1)
					select case UCase(thetype(0))
						Case "CHECKBOX"
							ScriptVal=""
							if detectIE = true then
								ScriptVal = " onClick=""UpdateCBFieldVal(this.form,this)"""
							else
								ScriptVal = " onBlur=""UpdateCBFieldVal(this.form,this)"""
							end if
							
							displaytype = "CHECKBOX"
							on error resume next
							if isEmpty(inputStr) then inputstr = 0
							bBoolean = CBool(inputstr)
							if bBoolean = True then 
								checked = True
							else 
								checked = False
							end if
							if UCase(formmode) = "ADD_RECORD" then
								ScriptVal=""
								if thetype(1) = 0 then
									inputstr = "0"
									checked = False
								else
									inputstr = "1"
									checked = True
								end if
							end if
						Case "TEXT","TEXTBOX"
							displaytype = "TEXT"
							if detectIE = true then
								if addMaxWithScript <> "" then	
									ScriptVal = " onBlur=""isValid(this," & thetype(1)& ");UpdateFieldVal(this.form,this);" & addmaxWithScript & """"
								else
									ScriptVal = " onBlur=""isValid(this," & thetype(1)& ");UpdateFieldVal(this.form,this);"""
								end if
							else
								if addMaxWithScript <> "" then	
									ScriptVal = " onChange=""isValid(this," & thetype(1)& ");UpdateFieldVal(this.form,this);"""
								else
									ScriptVal = " onChange=""isValid(this," & thetype(1)& ");UpdateFieldVal(this.form,this);" & addmaxWithScript & """"
								end if
							end if
						Case "TEXTAREA"
							height=thetype(1)
							displaytype = "TEXTAREA"
							if UCase(formmode) = "ADD_RECORD" then
								ScriptVal=""
							end if
							if addMaxWithScript <> "" then	
								if detectIE = true then
									ScriptVal = " onBlur=""" & addmaxWithScript & """"
								else
									ScriptVal = " onChange=""" & addmaxWithScript & """"
								end if
							end if
						Case "DATE"
							if Not UCase(formmode) = "ADD_RECORD" then
								if detectIE = true then
									ScriptVal = " onBlur=""isValid(this," & thetype(1) & ");UpdateFieldVal(this.form,this);" &  """" 
								else
									ScriptVal = " onChange=""isValid(this," & thetype(1) & ");UpdateFieldVal(this.form,this);" &  """" 
								end if
							else
								if detectIE5 = true then
									ScriptVal = " onChange=""isValid(this," & thetype(1)& ")"""
								else
									ScriptVal = " onChange=""isValid(this," & thetype(1)& ")""" 
								end if
							end if
							displaytype = "TEXT"
						Case "DATE_PICKER"
								if Not UCase(formmode) = "ADD_RECORD" then
								if detectIE = true then
									ScriptVal = " onBlur=""isValid(this," & thetype(1) & ");UpdateFieldVal(this.form,this);" &"""" 
								else
									ScriptVal = " onChange=""isValid(this," & thetype(1) & ");UpdateFieldVal(this.form,this);" &  """" 
								end if
							else
								if detectIE5 = true then
									ScriptVal = " onBlur=""isValid(this," & thetype(1)& ")"""
								else
									ScriptVal = " onChange=""isValid(this," & thetype(1)& ")""" 
								end if
							end if
							DisplayType = "DATE_PICKER"
						
						Case "SCRIPT"
							if Not UCase(formmode) = "ADD_RECORD" then
								if detectIE = true then
									ScriptVal = " onBlur=""UpdateFieldVal(this.form,this)" & ";" & thetype(1) & """" 
								else
									ScriptVal = " onChange=""UpdateFieldVal(this.form,this)" & ";" & thetype(1) & """" 
								end if
							else
								if detectIE5 = true then
									ScriptVal = " onBlur=""isValid(this," & thetype(1)& ")"""
								else
									ScriptVal = " onChange=""isValid(this," & thetype(1)& ")""" 
								end if
							end if
							displaytype = "TEXT"
							
						Case "FORMULA"
							if CBool(Application("Format_Formula")) = True then
								inputstr = GetHTMLStringForFormula(inputstr)
							end if
							if detectIE5 = true then
									ScriptVal = " onBlur=""isValid(this,24)"""
								else
									ScriptVal = " onChange=""isValid(this,24)"""
								end if
						'SYAN added on 10/7/2005 to fix CSBR-58866
						Case "HYPERLINK"
							displaytype = "HYPERLINK"
						'End of SYAN modification
						Case Else
						
							displaytype = "TEXT"
					end select
			else
		
				displaytype = "TEXT"
					
			end if
		end if
		
		ScriptVal = replace(ScriptVal, """;""", ";")
		
		
	end if
	if UCase(formmode) = "ADD_RECORD" then
		inputstr = ""
	end if

	Select Case UCase(displaytype) 'output final inputstr formatted based on formgroup
		Case "RAW"
			' >>>>> KR modification START: Format molweight data rounded to two digits only
			If Instr(fullfieldname, ".MW") = 0 and Instr(fullfieldname, ".MolWeight") = 0 Then
				output_str = output_str & inputstr & "&nbsp;"
			Else
				if not IsNumeric(output_str & inputstr) then
					output_str = output_str & inputstr & "&nbsp;"
				else
					'SYAN modified on 10/20/2005 to fix CSBR-54901
					if Application("MW_ROUND_DIGIT") = "" or IsNull(Application("MW_ROUND_DIGIT")) or IsEmpty(Application("MW_ROUND_DIGIT")) then
						Application("MW_ROUND_DIGIT") = 4
					end if
					'output_str = Round(output_str & inputstr, Application("MW_ROUND_DIGIT")) & "&nbsp;"
					output_str = MathRound(output_str & inputstr, Application("MW_ROUND_DIGIT")) & "&nbsp;"
					'End of SYAN modification
				end if
			end if
			' <<<<<< KR modification END
			
		Case "PLAIN"
			
					output_str = output_str & inputstr & "&nbsp;"
		
			
		Case "RAW_NO_EDIT"
			
				
					output_str = output_str & inputstr & "&nbsp;"
	
		Case "PLAIN_NO_EDIT"
		
					output_str = output_str & inputstr
	
		Case "TEXT","TEXTBOX"
			
			if UCase(formmode) = "EDIT_RECORD" then
				output_str = output_str & "<input type=""hidden""  name=""" & fullfieldname  & """ value="""
				output_str = output_str & inputstr
				output_str = output_str & """>"
				output_str = output_str & "<input type=""text""  name=""" & fullfieldname & "_orig" & """ size=" & QuotedString(width) & " value="
				output_str = output_str & QuotedString(inputstr)
				output_str = output_str & " " & ScriptVal & ">"
				
	
				
			Else
				output_str = output_str & "<input type=""text""  name=""" & fullfieldname & """ size=" & QuotedString(width) & " value="
				output_str = output_str & QuotedString(inputstr)
				output_str = output_str & ""
				if ScriptVal <> "" then 
					output_str = output_str & " " & ScriptVal & ">"
				else
					output_str = output_str & """>"
				end if
			end if
		'SYAN added on 10/7/2005 to fix CSBR-58866
		Case "HYPERLINK"
			'stop
			if UCase(formmode) = "EDIT_RECORD" then
				output_str = output_str & "<input type=""hidden""  name=""" & fullfieldname  & """ value="""
				output_str = output_str & inputstr
				output_str = output_str & """>"
				output_str = output_str & "<input type=""text""  name=""" & fullfieldname & "_orig" & """ size=" & QuotedString(width) & " value="
				output_str = output_str & QuotedString(inputstr)
				output_str = output_str & " " & ScriptVal & " accept=""image/jpeg"">"
			Else
				output_str = output_str & "<input type=""text""  name=""" & fullfieldname & """ size=" & QuotedString(width) & " value="
				output_str = output_str & QuotedString(inputstr)
				output_str = output_str & ""
				if ScriptVal <> "" then 
					output_str = output_str & " " & ScriptVal & ">"
				else
					output_str = output_str & """>"
				end if
			end if
		'End of SYAN modification
		Case "CHECKBOX"
			if checked = True then 
					checkedValue = " checked"
				else
					checkValue = ""
				end if
			if UCase(formmode) = "EDIT_RECORD" then
				output_str = output_str & "<input type=""hidden""  name=""" & fullfieldname  & """ value="""
				output_str = output_str & inputstr
				output_str = output_str & """>"
				output_str = output_str & "<input type=""checkbox""  name=""" & fullfieldname & "_orig" & """ value="
				output_str = output_str & QuotedString(inputstr)
				output_str = output_str & " " & ScriptVal & checkedValue & ">"
				
			else
				output_str = output_str & "<input type=""checkbox""  name=""" & fullfieldname & """  value="
				output_str = output_str & QuotedString(inputstr)
				output_str = output_str & ""
				if ScriptVal <> "" then 
					output_str = output_str & " " & ScriptVal & checkedValue &  ">"
				else
					output_str = output_str & "" & checkedValue & ">"
				end if
			end if

		Case "HIDDEN"
			output_str = output_str & "<input type=""hidden""  name=""" & fullfieldname & """ width=" & QuotedString(width) & " value="""
			output_str = output_str & inputstr
			output_str = output_str & """>"
		Case "BUTTON"
			output_str = output_str & "<input type=""button""  name="""& fullfieldname & """ width=" & QuotedString(width) & " value="""
			output_str = output_str & inputstr
			output_str = output_str & """>"
		Case "TEXTAREA"
			height=specifier
			if UCase(formmode) = "EDIT_RECORD" then
				output_str = output_str & "<input type=""hidden""  name=""" & fullfieldname &""" value="""
				output_str = output_str & inputstr
				output_str = output_str & """>"
				output_str = output_str & "<TEXTAREA name=""" & fullfieldname & "_orig" & """ cols=" & QuotedString(width) & " rows=" & QuotedString(height) 
				output_str = output_str & " wrap=""soft"""
				output_str = output_str & " " & ScriptVal & ">"
				output_str = output_str & inputstr
				output_str = output_str & "</textarea>"
				
				
			Else
				output_str = output_str & "<TEXTAREA name=""" & fullfieldname & """ cols=" & QuotedString(width) & " rows=" & QuotedString(height) 
				if ScriptVal <> "" then 
					output_str = output_str &  " " & ScriptVal & ">"
				else
					output_str = output_str &  ">"
				end if
				output_str = output_str & inputstr
				output_str = output_str & " wrap=""soft"""
				output_str = output_str & "</textarea>"
			end if
			
		Case "TEXTAREA_HARD"
			height=specifier
			if UCase(formmode) = "EDIT_RECORD" then
				output_str = output_str & "<input type=""hidden""  name=""" & fullfieldname &""" value="""
				output_str = output_str & inputstr
				output_str = output_str & """>"
				output_str = output_str & "<TEXTAREA name=""" & fullfieldname & "_orig" & """ cols=" & QuotedString(width) & " rows=" & QuotedString(height) 
				output_str = output_str & " wrap=""hard"""
				output_str = output_str & " " & ScriptVal & ">"
				output_str = output_str & inputstr
				output_str = output_str & "</textarea>"
				
				
			Else
				output_str = output_str & "<TEXTAREA name=""" & fullfieldname & """ cols=" & QuotedString(width) & " rows=" & QuotedString(height) 
				if ScriptVal <> "" then 
					output_str = output_str &  " " & ScriptVal & ">"
				else
					output_str = output_str &  ">"
				end if
				output_str = output_str & inputstr
				output_str = output_str & " wrap=""hard"""
				output_str = output_str & "</textarea>"
			end if
		
		Case "TEXTAREA_DEFAULT"
			height=specifier
			if UCase(formmode) = "EDIT_RECORD" then
				output_str = output_str & "<input type=""hidden""  name=""" & fullfieldname &""" value="""
				output_str = output_str & inputstr
				output_str = output_str & """>"
				output_str = output_str & "<TEXTAREA name=""" & fullfieldname & "_orig" & """ cols=" & QuotedString(width) & " rows=" & QuotedString(height) 
				output_str = output_str & " " & ScriptVal & ">"
				output_str = output_str & inputstr
				output_str = output_str & "</textarea>"
				
				
			Else
				output_str = output_str & "<TEXTAREA name=""" & fullfieldname & """ cols=" & QuotedString(width) & " rows=" & QuotedString(height) 
				if ScriptVal <> "" then 
					output_str = output_str &  " " & ScriptVal & ">"
				else
					output_str = output_str &  ">"
				end if
				output_str = output_str & inputstr
				output_str = output_str & "</textarea>"
			end if
		Case "TEXTAREA_NOWRAP"
			height=specifier
			if UCase(formmode) = "EDIT_RECORD" then
				output_str = output_str & "<input type=""hidden""  name=""" & fullfieldname &""" value="""
				output_str = output_str & inputstr
				output_str = output_str & """>"
				output_str = output_str & "<TEXTAREA name=""" & fullfieldname & "_orig" & """ cols=" & QuotedString(width) & " rows=" & QuotedString(height) 
				output_str = output_str & " wrap=""off"""
				output_str = output_str & " " & ScriptVal & ">"
				output_str = output_str & inputstr
				output_str = output_str & "</textarea>"
				
				
			Else
				output_str = output_str & "<TEXTAREA name=""" & fullfieldname & """ cols=" & QuotedString(width) & " rows=" & QuotedString(height) 
				if ScriptVal <> "" then 
					output_str = output_str &  " " & ScriptVal & ">"
				else
					output_str = output_str &  ">"
				end if
				output_str = output_str & inputstr
				output_str = output_str & " wrap=""off"""
				output_str = output_str & "</textarea>"
			end if
		
		Case "DATE_PICKER"
			if formmode = "EDIT_RECORD" then
				if inStr(theType(1), ",")> 0 then
					thearray = split(theType(1), ",", -1)
					theDateType = thearray(0)
					theFullSourcePath = thearray(1)
					theFullGifPath = thearray(2)
				else
					theDataType = theType(1)
					theFullGifPath = "/cfserverasp/source/graphics/navbuttons/icon_mview.gif"
					theFullSourcePath = "/cfserverasp/source/month_view1.asp"
				end if
				output_str = output_str & "<input type=""hidden""  name=""" & fullfieldname  & """ value="""
				output_str = output_str & inputstr
				output_str = output_str & """>"
				output_str = output_str & "<input type=""text""  name=""" & fullfieldname & "_orig" & """ size=" & QuotedString(width) & " value="
				output_str = output_str & QuotedString(inputstr)
				output_str = output_str & " " & ScriptVal & ">"
				
				'SYAN 12/19/2003 to fix CSBR-35466
				'output_str = output_str & "<a href="" "" onclick=""return PopUpDate(&quot;" & fullfieldname & "_orig" & "&quot;,&quot;" & theFullSourcePath & "&quot;)"">"
				output_str = output_str & "<a href="" "" onclick=""return PopUpDate(&quot;" & fullfieldname & "_orig" & "&quot;,&quot;" & theFullSourcePath & "?date_format=" & Application("DATE_FORMAT") & "&quot;)"">"

				output_str = output_str & "<img src=""" & theFullGifPath & """ height=""16"" width=""16"" border=""0""></a>"
				
			else
			
				output_str = output_str & "<input type=""text""  name=""" & fullfieldname & """ size=" & QuotedString(width) & " value="
				output_str = output_str & QuotedString(inputstr)
				output_str = output_str & ""
				if ScriptVal <> "" then 
					output_str = output_str & " " & ScriptVal & ">"
				else
					output_str = output_str & """>"
				end if
			
			end if
			Case "PICTURE"
				theactionPath = Application("AppPathHTTP") & "/" & "show_picture.asp?get_data=" & get_data & "&mime_type=" & mime_type & "&data_type=" & data_type & "&lob_display=" & lob_display
				if Not Instr(mime_type, "image/")>0 then
					mime_type = "image/" & mime_type
				end if
				Session("picture") = inputstr
				select case UCase(lob_display)
					case "IN_LINE"
						if height=0 or height = "" then
							output_str = "<img src=""" & theactionPath & """>"
						else
							output_str = "<img src=""" & theactionPath & """ height=""" &  height & """ width=""" & width & """ border=""0"">"
						end if
					case "NEW_WINDOW"
						output_str = "<a href=""" & theactionPath & """ target='_new'>image link</a>"
				end select
			Case "PICTURE_GET_LOB"
				temp = split(fullfieldname, ".", -1)
				if Ubound(temp) = 2 then
					tablename = temp(0) & "." & temp(1)
					fieldname = temp(2)
				else
					tablename = temp(0)
					fieldname = temp(1)
				end if
				dbname2 = "dbname=" & dbkey
				formgroup2= "&formgroup=" & formgroup
				table_name2 = "&table_name=" & tablename
				field_name2 = "&field_name=" & fieldname
				mime_type2 = "&mime_type=" & mime_type
				base_column2= "&base_column=" & primarykey
				data_type2 = "&data_type=" & data_type
				unique_id2 = "&unique_id=" & uniqueid
				lob_display = "&lob_display" & lob_display
				get_data1 = "&get_data=" & get_data
				fullGetLOBString = dbname2 & formgroup2 & table_name2 & field_name2 & mime_type2 & base_column2  & unique_id2 & get_data1 & data_type2 & lob_display
		
				theactionPath = Application("AppPathHTTP") & "/" & "show_picture.asp?" & fullGetLOBString
				select case UCase(lob_display)
					case "IN_LINE"
						if height=0 or height = "" then
							output_str = "<img src=""" & theactionPath & """>"
						else
							output_str = "<img src=""" & theactionPath & """ height=""" &  height & """ width=""" & width & """ border=""0"">"
						end if
					case "NEW_WINDOW"
						output_str = "<a href=""" & theactionPath & """ target='_new'>image link</a>"
				end select
	End Select 'Select Case UCase(displaytype)
	If UCase(formmode) = "EDIT_RECORD" then
	'add highlighting
		add_required_coding = getRequiredHighlight(formmode, fullfieldname)
		if add_required_coding <> "" then
			output_str =  "<table " & add_required_coding & "><tr><td>" & output_str & "</td></tr></table>"
		end if
	end if
	getDisplayData = output_str
End Function


Function GetLookupList(ByRef RS, ByVal field1, ByVal field2)
	if not (RS.BOF and RS.EOF) then
		RS.MoveFirst
			Do While Not RS.EOF
				if theList <> "" then
				 	theList = theList & "," & RS.fields(field1) & ":" & RS.fields(field2)
				
				else
					theList = RS.fields(field1) & ":" & RS.fields(field2)
				end if
				RS.MoveNext
			loop
	end if
	
	GetLookupList= theList
End Function 

Function makePickList(fields)
	temp = split(fields,",",-1)
	Dim i
	for i = 0 to UBound(temp)
		if theList <> "" then
		 	theList = theList & "," & temp(i) & ":" & temp(i)
				
		else
			theList = temp(i) & ":" & temp(i)
		end if
	Next
	makePickList= theList
End Function 
''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
' Convert base64cdx to other mymetypes and serve it out
Function ConvertAndServeBase64(b64, displayType, width, height)
	Dim oCDAX
	
	if width = "" then width = 200
	if height = "" then height = 200
	
    Set oCDAX = GetCDAX()
    oCDAX.dataEncoded =true
    oCDAX.Data("chemical/x-cdx") = b64
    oCDAX.dataEncoded = false
    Response.Clear
    Response.Expires = -1
    Response.ContentType = GetChemicalMimeTypeFromExt(displaytype)
    
    if isBinary(displayType) then
		Response.BinaryWrite oCDAX.Objects.Data(displayType, 72, width, height)
    Else	
		Response.Write oCDAX.Objects.Data(displayType, 72, width, height)
    End if
    Response.End
	Set oCDAX = Nothing
End Function
'!DGB! Creates a gif file of a predifined size based on a cdx file form the temp directory
' rewritten to use CDAX instead of CD Applilcation
Sub ConvertCDXtoGIF (Byval dbkey, Byval tablename, Byval fieldname, Byval StrucUniqueID, Byval gifWidth,Byval gifHeight)
		tempPath = Application("TempFileDirectory" & dbkey)
		fileNameRoot = tablename & fieldname & "_" & StrucUniqueID
		cdxPath = tempPath & fileNameRoot & ".cdx"
		if gifWidth = "" then 'the cdx is not being sized just converted to gif
			gifPath =  tempPath & fileNameRoot & ".gif"	
		else
			gifPath =  tempPath & fileNameRoot & "_" & gifWidth & "x" & gifHeight & ".gif"	
		end if
		Set checkFile = Server.CreateObject("Scripting.FileSystemObject")
		If NOT checkFile.FileExists(gifPath) then
			set oCDAX =  GetCDAX()
			rc = oCDAX.Open(cdxPath,false)
			oCDAX.SaveAs gifPath,1715882311,72,gifWidth, gifHeight
			Set oCDAX = Nothing
		End If
		Set CheckFile = nothing
End Sub

' DGB rewriten to use CDAX instead of CD Application
Sub ConvertAndServeCDXtoGIF (Byval dbkey, Byval tablename, Byval fieldname, Byval StrucUniqueID, Byval gifWidth,Byval gifHeight)
		tempPath = Application("TempFileDirectory" & dbkey)
		fileNameRoot = tablename & fieldname & "_" & StrucUniqueID
		cdxPath = tempPath & fileNameRoot & ".cdx"
		set oCDAX =  GetCDAX()		
		rc = oCDAX.Open(cdxPath,false)
		Response.Clear
		Response.ContentType = "image/gif"
		Response.BinaryWrite oCDAX.Objects.Data("gif", 72, gifWidth, gifHeight)
 		Set oCDAX = Nothing
 		Response.End
End Sub

Function ConvertCDXtoName (Byval dbkey, Byval tablename, Byval fieldname, Byval StrucUniqueID)
		tempPath = Application("TempFileDirectory" & dbkey)
		fileNameRoot = tablename & fieldname & "_" & StrucUniqueID
		cdxPath = tempPath & fileNameRoot & ".cdx"
		Set oCDAX = GetCDAX()
		Set oCDAX = oCDAX.Open(cdxPath,false)
 		ConvertCDXtoName = oCDAX.Objects.Data("chemical/x-name")
		Set oCDAX = Nothing
End Function


Function ConvertNametoBase64CDX(chemicalName)
    Dim oCDAX

    Set oCDAX = GetCDAX()
    
    oCDAX.Data("chemical/x-name") = chemicalName
    If oCDAX.Objects.MolecularWeight > 0 Then
        oCDAX.DataEncoded = True
        ConvertNametoBase64CDX = oCDAX.Data("chemical/x-cdx")
    Else
        ConvertNametoBase64CDX = ""
    End If
End function


Function ConvertBase64CDXtoName(b64)
		Dim oCDAX
		Set oCDAX = GetCDAX()
        oCDAX.DataEncoded = true           
        oCDAX.Data("chemical/x-cdx") = b64
 		theName = oCDAX.Data("chemical/x-name")
 		Set oCDAX = Nothing
 		ConvertBase64CDXtoName=theName
End function
Sub ConvertAndServeBase64toGIF (Byval b64, Byval gifWidth,Byval gifHeight)
		Dim oCDAX
        
        Set oCDAX = GetCDAX()
        oCDAX.DataEncoded = true           
	'jhs - if then needed because of chemdraw bug
	if lcase(left(b64,8)) = "vmpdrdax" then          
        	oCDAX.Data("chemical/x-cdx") = b64
        else
		oCDAX.Data("chemical/mdl-molfile") = b64
	end if
	Response.Clear
        Response.ContentType = "image/gif"
        Response.BinaryWrite oCDAX.Objects.Data("gif", 72, gifWidth, gifHeight)
        Response.End
		Set oCDAX = Nothing
End Sub

'jhs
Sub SaveMolToTemp(Byval b64, Byval outputpath)
		Dim oCDAX
        
        Set oCDAX = GetCDAX()
        oCDAX.DataEncoded = true 
	'jhs-if then needed because of chemdraw bug
	if lcase(left(b64,8)) = "vmpdrdax" then          
        	oCDAX.Data("chemical/x-cdx") = b64
        else
		oCDAX.Data("chemical/mdl-molfile") = b64
	end if
	oCDAX.SaveAs outputpath
	Set cdAx = Nothing
End Sub

Function ConvertBase64toMW(Byval b64)
        on error resume next
        Set cdAx = GetCDAX()
        cdax.DataEncoded = true           
	'jhs - if then needed because of chemdraw bug
	if lcase(left(b64,8)) = "vmpdrdax" then           
        	cdAX.Data("chemical/x-cdx") = b64
	else
        	cdax.Data("chemical/mdl-molfile") = b64
	end if
	ConvertBase64toMW=cdAX.Objects.MolecularWeight
        Set cdAx = Nothing

End Function

Function ConvertBase64toMFormula(Byval b64)
        on error resume next
        Set cdAx = GetCDAX()
        cdax.DataEncoded = true           
	'jhs - if then needed because of chemdraw bug
	if lcase(left(b64,8)) = "vmpdrdax" then           
        	cdAX.Data("chemical/x-cdx") = b64
	else
        	cdax.Data("chemical/mdl-molfile") = b64
	end if
	ConvertBase64toMFormula=cdAX.Objects.Formula
        Set cdAx = Nothing

End Function


Function ConvertBase64toMolfile(Byval b64)
		if molStringMethod = "CDAX" then 
			ConvertBase64toMolfile = ConvertBase64toMolfileUsingCDAX(b64)
		else
			ConvertBase64toMolfile = ConvertBase64toMolfileUsingMolServer(b64)
		End if
End Function

Function ConvertBase64toMolfileUsingCDAX(Byval b64)
		on error resume next
		if not isObject(Session("ChemDraw_Control")) then
			Set Session("ChemDraw_Control") = GetCDAX()
		end if
		set cdax = Session("ChemDraw_Control") 
        cdax.DataEncoded = true           
        cdAX.Data("chemical/x-cdx") = b64
		ConvertBase64toMolfileUsingCDAX =  cdAX.Objects.Data("mol")
        Set cdAx = Nothing
End Function

Function ConvertBase64toMolfileUsingMolServer(Byval b64)
		Dim tmpPath
		Dim tmpCdx
		Dim tmpMol
		Dim m
		
		tmpPath = Application("TempFileDirectory" & dbkey) & "Sessiondir\" & Session.sessionid & "\"
		tmpCdx = tmpPath & "tmp.cdx"
		tmpMol = tmpPath & "tmp.mol"
		
		DecodeBase64 b64, tmpCdx 
		
		if not isObject(Session("MolServer_Molecule")) then
			Set Session("MolServer_Molecule") = Server.CreateObject("MolServer" & Application("MOLSERVER_VERSION") & ".Molecule")
		end if
		Set m = Session("MolServer_Molecule") 
			
        m.read(tmpCdx)
		on error resume next
		m.write(tmpMol)
		Set m = Nothing
		ConvertBase64toMolfileUsingMolServer = ReadTextFile(tmpMol)
End Function

Function ReadTextFile(Filepath)
		Dim out
		Dim fso
		Dim TextStream
		
		Const ForReading = 1, ForWriting = 2, ForAppending = 3
		Const TristateUseDefault = -2, TristateTrue = -1, TristateFalse = 0

		set fso = server.createObject("Scripting.FileSystemObject")

		if fso.FileExists(Filepath) Then
			Set TextStream = FSO.OpenTextFile(Filepath, ForReading, False, TristateUseDefault)
			
			out = TextStream.ReadAll
			TextStream.Close
			Set TextStream = nothing
		Else
			out = ""
		End If
		Set fso = nothing
		ReadTextFile = out
End Function

Function GetStructureEmbedTag(ByVal dbkey, ByVal formgroup, ByVal fullfieldname, ByVal uniqueid, ByVal width, ByVal height,ByVal filepathHTTP,ByVal filepathFull, ByVal gifFileName)
		Dim oCDAX
		temp = split(fullfieldname, ".", -1)
		if UBound(temp) = 2 then
			tablename = temp(0) & "." & temp(1)
			fieldname = temp(2)
		else
			tablename = temp(0)
			fieldname = temp(1)
		end if
		storeVar =  Application("RESIZE_GIFS")
		Application.Lock
			Application("RESIZE_GIFS") = 0
		Application.Unlock
		
		embedString = GetDisplayCFWStructure(dbkey, formgroup,fullfieldname,tablename,fieldname,uniqueid,"cdx_return_embed",width,height)
		
		Application.Lock
			Application("RESIZE_GIFS") = storeVar
		Application.Unlock
		Set checkFile = Server.CreateObject("Scripting.FileSystemObject")
		if instr(embedString, "IMG")>0 then
			cdxpath = filepathfull
			if not instr(gifFileName, ".gif")>0 then
				gifFileName = gifFileName & ".gif"
			end if
			gifpath =  Application("TempFileDirectory" & dbkey) &  gifFileName
			
			If NOT checkFile.FileExists(gifPath) then
				set oCDAX =  GetCDAX()
				rc = oCDAX.Open(cdxPath,false)
				oCDAX.SaveAs gifPath,1715882311,72,width, height
				Set oCDAX = Nothing
			End If
		
			filepathHTTP =  Application("TempFileDirectoryHTTP" & dbkey) &  gifFileName
		else
			dim temp_array
			temp_array = split(filepathFull, "\", -1)
			filename = temp_array(Ubound(temp_array))
			tempdir_filepathFull = Application("TempFileDirectory" & dbkey) &  filename
			filepathHTTP = Application("TempFileDirectoryHTTP" & dbkey) &  filename
			if NOT checkFile.FileExists(tempdir_filepathFull) then
				checkFile.CopyFile filepathFull, tempdir_filepathFull
			end if
		end if
			Set CheckFile = nothing
		GetStructureEmbedTag = replace(embedString, "#FILEPATH#", filepathHTTP)
End Function

Function getAdjustedWidth(inputWidth)
	if CBool(Application("ADJUST_NETSCAPE_WIDTHS")) = True then
		on error resume next
		if Not detectIE() = True then
			inputWidth = CInt(inputWidth)
			outputwidth = Int(inputwidth - (CInt(inputwidth)* 0.15))
		else
			outputwidth=inputWidth
		end if
		if err.number <> 0 then
			getAdjustedWidth=inputWidth
		else
			getAdjustedWidth=outputwidth
		end if
	else
		getAdjustedWidth=inputwidth
	end if
End Function



Function GetHTMLStringForFormula(ByVal theFormula)
	Dim newFormula
	Dim i
	Dim thePrev
	Dim theCur

	If Len(theFormula) > 1 Then
	    newFormula = Left(theFormula, 1)
	    theCurr = newFormula
	    
	    For i = 2 To Len(theFormula)
	        thePrev = theCurr
	        theCurr = Mid(theFormula, i, 1)
	     
	        bDone = false
	        If InStr("+", theCurr)  Then
	            ' deal with charges
	            if isNumeric(thePrev) then
					newFormula = newFormula & "</sub><sup>" & Mid(theFormula, i, 1) & "</sup>"
	            else
					newFormula = newFormula & "<sup>" & Mid(theFormula, i, 1) & "</sup>"
	            end if
	            bDone = true
	        End If
	        If InStr("-", theCurr) and bDone = false Then
	            ' deal with charges
	             if isNumeric(thePrev) then
					newFormula = newFormula & "</sub><sup>" & Mid(theFormula, i, 1) & "</sup>"
	            else
					newFormula = newFormula & "<sup>" & Mid(theFormula, i, 1) & "</sup>"
				end if
	            bDone = true
	        End If
	        if Instr("+", thePrev) and isNumeric(theCurr) and bDone = false Then
			
				newFormula = newFormula & "<sup>" &  Mid(theFormula, i, 1) & "</sup>"
	            bDone = true
	        end if
	        if Instr("-", thePrev) and isNumeric(theCurr)  and bDone = false Then
				newFormula = newFormula & "<sup>" &  Mid(theFormula, i, 1) & "</sup>"
	            bDone = true
	        end if
	        If InStr("*", theCurr) Then
	            ' deal with radicals
	            If InStr(" ", thePrev) Then
	                newFormula = newFormula & "<sup>" &  Mid(theFormula, i, 1) & "</sup>"
	                 bDone = true
	            End If
	            If (IsNumeric(thePrev)) Then
	                newFormula = newFormula &  "</sub><sup>" &  Mid(theFormula, i, 1) & "</sup>"
	                 bDone = true
	            End If
	        End If
	        if  bDone = false then
				If (((Not IsNumeric(thePrev)) And (InStr(" ", thePrev) = 0) And IsNumeric(theCurr))) Then
					newFormula = newFormula & "<sub>"
				Else
					If (Not (IsNumeric(theCurr)) And IsNumeric(thePrev) And (InStr("*", theCurr) = 0)) Then
						newFormula = newFormula & "</sub>"
					End If
					If (Not (IsNumeric(thePrev)) And (InStr(" ", thePrev)) And IsNumeric(theCurr)) Then
						newFormula = newFormula & "<sup>"
		               
					End If
				End If
		       
				If theCurr <> " " Then
					newFormula = newFormula & theCurr
				End If
	        end if
	    Next
	    If IsNumeric(theCurr) Then
	        newFormula = newFormula & "</sub>"
	    End If
	    If InStr("+-", theCurr) Then
	        newFormula = newFormula & "</sup>"
	    End If
	theFormula = newFormula
	End If
	
	GetHTMLStringForFormula = theFormula
End Function

Function  GetHTMLStringForFormula_old( sInputFormula )
	' Returns a string which is the input formula with "<sub>" and "</sub>"
	' around the numbers.  This will give a pretty formula in HTML.

	' Initialize the output string.
	sOutput = ""

	' Get the length of the input formula.
	lenInputFormula = Len( sInputFormula )

	' Couldn't find anything about accessing individual characters in
	' VBScript, so I am using the Mid() function.  Not pretty, but it
	' ought to work.
	
	' Loop through the characters of the input formula.
	iInputFormula = 1
	bSubscript = false
	while iInputFormula <= lenInputFormula
		currChar = Mid( sInputFormula, iInputFormula, 1 )
		if ( isNumeric( currChar ) ) then
			if not bSubscript then
				' We are not currently subscripting digits and we've
				' found a digit.  Begin subscripting.
				sOutput = sOutput & "<sub>"

				bSubscript = true
			end if
		else
			if bSubscript then
				' We are currently subscripting, but the current
				' character is not a digit.  End subscripting.
				sOutput = sOutput & "</sub>"

				bSubscript = false
			end if
		end if
		sOutput = sOutput & currChar

		iInputFormula = iInputFormula + 1
	wend
	if bSubscript then
		' We finished the formula in subscript mode.  End subscripting.
		sOutput = sOutput & "</sub>"
	end if

	' Return the output string.
	GetHTMLStringForFormula = sOutput
End Function

Function  AddLeadingZerosToNumber( numberInput, nDigits )
	' Returns a string which is the input number padded, if necessary, to
	' the input number of digits with leading zeros.

	sInputNumber = CStr( numberInput )
	nDigits_InputNumber = Len( sInputNumber )

	' The output string starts out empty.
	sOutput = ""

	' Add the leading zeros.
	nLeadingZero = nDigits - nDigits_InputNumber
	iLeadingZero = 0
	while ( iLeadingZero < nLeadingZero )
		sOutput = sOutput & "0"
		iLeadingZero = iLeadingZero + 1
	wend

	' Add the input number to the output string.
	sOutput = sOutput & sInputNumber

	' Return the output string.
	AddLeadingZerosToNumber = sOutput
End Function

Function getRequiredHighlight(formmode, fullfieldname)
		If CBool(Application("Highlight_Required_Fields")) = true then
			add_required_coding=""
			required_fields_array = split(GetFormGroupVal(dbkey, formgroup, kRequiredFields), ",", -1)
			dim i
			if UCase(formmode) = "EDIT_RECORD" then
				for i = 0 to UBound(required_fields_array)
				
					if instr(required_fields_array(i), ";")> 0 then
						array2 = split(required_fields_array(i), ";", -1)
						if inStr(fullfieldname, ":")> 0 then
							array3 = split(fullfieldname, ":", -1)
							theValue = array3(1)
						else
							theValue = fullfieldname
						end if
					
						if UCase(array2(0)) = UCase(theValue) then
							add_required_coding = Application("HIGHLIGHT_BACKGROUND")
						exit for
						end if
					else
						array2 = split(required_fields_array(i), ":", -1)
						on error resume next
						if inStr(fullfieldname, ":")> 0 then
							array3 = split(fullfieldname, ":", -1)
							theValue = array3(1)
						else
							theValue = fullfieldname
						end if
						if UCase(array2(0)) =  UCase(theValue) then
							add_required_coding = Application("HIGHLIGHT_BACKGROUND")
						exit for
						end if
					end if
				next
			else
				for i = 0 to UBound(required_fields_array)
					if instr(required_fields_array(i), ";")> 0 then
						array2 = split(required_fields_array(i), ";", -1)
						if UCase(array2(0)) = UCase(fullfieldname) then
							add_required_coding = Application("HIGHLIGHT_BACKGROUND")
						exit for
						end if
					else
						array2 = split(required_fields_array(i), ":", -1)
						if UCase(array2(0)) = UCase(fullfieldname) then
							add_required_coding = Application("HIGHLIGHT_BACKGROUND")
						exit for
						end if
					end if
				next
			end if
			
		else
			add_required_coding = ""
		end if
	getRequiredHighlight=add_required_coding
End Function

Function buildCDEmbedString(dbkey, formgroup,border, width, height,mimetype,src, id, name,dataurl,viewonly,shrinktofit,dontcache)

	if border <> "" then
		border = " border=" & "'" & border &  "'"
	else
		border = ""
	end if
	
	if width <> "" then
		width = " width=" & "'" & width &  "'"
	else
		width = ""
	end if
	
	if mimetype <> "" then
		mimetype = " type=" & "'" & mimetype &  "'"
	else
		mimetype = ""
	end if
	
	if src <> "" then
		src = " src=" & "'" & src &  "'"
	else
		src = ""
	end if
	
	if height <> "" then
		height = " height=" & "'" & height &  "'"
	else
		height = ""
	end if
	
	if id <> "" then
		id =" id=" &  "'" & id &  "'"
	else
		id = ""
	end if
	
	if name <> "" then
		name = " name=" & "'" & name &  "_ctrl'"
	else
		name= ""
	end if
	
	if viewonly <> "" then
		viewonly = " viewonly=" & "'" & viewonly &  "'"
	else
		viewonly= ""
	end if
	
	if shrinktofit <> "" then
		shrinktofit = " shrinktofit=" & "'" & shrinktofit &  "'"
	else
		shrinktofit= ""
	end if
	
	
	if dataurl <> "" then
		if inStr(dataurl, "data:")> 0 then
			'jhs
			if lcase(left(Session("base64cdx"),8)) = "vmpdrdax" then
				dataurl = " dataurl='" & Server.URLEncode(dataurl) & "'"
			else
				dataurl = " dataurl='" & Replace(dataurl,chr(13)+ Chr(10),"\n") & "'"
			end if
		else
			dataurl = " dataurl='" & dataurl & "'"
		end if
		
	else
		dataurl= ""
	end if
	
	'if dontcache <> "" then
		'dontcache = " dontcache=" & "'" & dontcache &  "'"
	'else
		dontcache= ""
	'end if
	
	'stop
	'SYAN added on 2/6/2006 to enable ISIS draw editing
	'stop
	if session("DrawPref" & dbkey) = "ISIS" then
		ISISDraw = " isisdraw=" & "'" & "True" &  "'"
		'viewonly = " viewonly=" & "'" & "True" &  "'"
	else
		ISISDraw = " isisdraw=" & "'" & "False" &  "'"
	end if
	'End of SYAN modification
	
	'SYAN modified on 2/6/2006 to enable ISIS draw editing
	'fullstring = "<embed " &  width & height & border & mimetype & src & id & name & shrinktofit &  dataurl  & viewonly & dontcache & ">"
	fullstring = "<embed " &  width & height & border & mimetype & src & id & name & shrinktofit &  dataurl  & viewonly & dontcache & ISISDraw &">"
	'End of SYAN modification
	buildCDEmbedString= fullstring

end function 	

Sub outputCDEmbedTag(embed_tag)
	%>
	<script language = "javascript">
		cd_insertObjectStr("<%=embed_tag%>")
	</script>
	<%
End Sub

Sub DisplayCFWStructure(ByVal dbkey, ByVal formgroup, ByVal fullfieldname, ByVal tablename, ByVal fieldname, ByVal uniqueid, ByVal displaytype, ByVal width, ByVal height)
	theReturn = getDisplayCFWStructure( dbkey,  formgroup,  fullfieldname,  tablename,  fieldname,  uniqueid,  displaytype,  width,  height)
	response.write theReturn
End Sub

Function getDisplayCFWStructure(ByVal dbkey, ByVal formgroup, ByVal fullfieldname, ByVal tablename, ByVal fieldname, ByVal uniqueid, ByVal displaytype, ByVal width, ByVal height)
	
	if formgroup = "" then formgroup = "base_form_group"
	formgroupflag= GetFormGroupVal(dbkey, formgroup, kFormGroupFlag)
	formmode = UCase(request("formmode"))
	addZoom = False
	bNoEdit = False
	bShowGif = False
	bReturnEmbed = False
	Session("STRUCTURE_EMBED_STRING") = ""
	embed_tag_string = ""
	
	
	if inStr(UCase(displaytype), "_NO_EDIT") > 0 then 
			displaytype=replace(displaytype, "_NO_EDIT", "")
	bNoEdit = True
	end if

	plugin_value =GetFormGroupVal(dbkey, formgroup, kPluginValue)
	formmode = UCase(Request("formmode"))
	bGetEmbedTag=False
	
'override cdx output for known conflicts and from ini variable settings
	if detectWIN95_IE5 = true AND UCase(formmode) = "LIST"  then
		 if NOT  Application("CD_PLUGIN_THRESHOLD")= 5.0 then
			displaytype = "GIF"
			bShowGif= True
		end if
	end if

'override cdx output if browser is chorme or firefox
    if detectModernBrowser = true  AND UCase(formmode) = "LIST"  then
        displaytype = "GIF"
        bShowGif= True
    end if
	
	if not displaytype = "GIF" then
		if OverrideToGif(formmode) = True then
			displaytype = "GIF"
			bShowGif = True
		end if
	end if
	if formmode = "EDIT_RECORD" then 
		bShowGif = False
		displaytype = "CDX"
	end if
	
	if UCase(plugin_value) = "FALSE" then
		bShowGif = true
	end if
	
	if UCase(displaytype) = "GIF" or bShowGif = true then
		bShowGif = True
		if  CBool(Application("RESIZE_GIFS")) = true then
			displaytype= "SIZEDGIF"
		else
			if not displaytype = "cdx_return_embed" then
				displaytype= "GIF"
			end if	
		end if
	end if
	
	if displaytype = "cdx_return_embed" then
		displaytype = "cdx"
		bReturnEmbed = true
	end if

	if UCase(plugin_value) = "TRUE" and bShowGif = False then
	
		if displaytype = "cdx_with_zoom" then 
			displaytype = "cdx"
			addZoom = True
		end if
		bGetEmbedTag=True
		blankpath = Application("TempFileDirectoryHTTP" & dbkey)   &   "mt.cdx"
		if not bReturnEmbed = true then
			source = blankpath
		else
			'this is for supporting Merck
			source="#FILEPATH#"
		end if
		border = "0"
		
		id = uniqueid
		name = fullfieldname & uniqueid
		mimetype = "chemical/x-cdx"
		ShrinkToFit=true
		width=width
		height=height
		DontCache=true
		formmode = UCase(request("formmode"))
		if (formmode = "EDIT_RECORD"or formmode ="ADD_RECORD" or formmode = "ADD_COMPOUNDS")AND bNoEdit= False then
			viewonly = false
		else
			viewonly = true
		end if
		
		if  Session("base64cdx") <> "" then
			'jhs - if then needed because of chemdraw bug
			if lcase(left(Session("base64cdx"),8)) = "vmpdrdax" then
				dataurl ="data:chemical/x-cdx;base64," & Session("base64cdx")
			else
				dataurl ="data:chemical/mdl-molfile," & Session("base64cdx")
			end if
		else
			dataurl =  Application("ActionForm" & dbkey) & "?dbname=" & dbkey & "&formgroup=" & formgroup & "&dataaction=get_structure&Table=" & tablename & "&Field=" & fieldname & "&DisplayType=" & displaytype  & "&StrucID=" & 	uniqueid 
		end if
		
		'///////////////////////////////////////////////////////////////////
		'!DGB! new displaytype to support gif resize	
			Elseif Ucase(displaytype) = "SIZEDGIF" then
				if session("base64cdx") <> "" then
					myDir = Application("TempFileDirectory" & dbkey)  & tablename & fieldname  & "_" & uniqueid & "." & "cdx"
					'jhs
					if lcase(left(session("base64cdx"), 8)) = "vmpdrdax" then
						decodebase64 session("base64cdx"), myDir
					else
						SaveMolToTemp session("base64cdx"), myDir
					end if
					'jhs
					embed_tag_string = "<IMG SRC="
					embed_tag_string = embed_tag_string &  """"  
					embed_tag_string = embed_tag_string &  Application("ActionForm" & dbkey) & "?dbname=" & dbkey & "&formgroup=" & formgroup & "&dataaction=get_structure&Table=" & tablename & "&Field=" & fieldname & "&DisplayType=" & displaytype  & "&StrucID=" & uniqueid & "&width=" & width & "&height=" & height
					embed_tag_string = embed_tag_string  &  """ border=0>"
				else
					embed_tag_string = "<IMG SRC="
					embed_tag_string = embed_tag_string &  """"  
					embed_tag_string = embed_tag_string &  Application("ActionForm" & dbkey) & "?dbname=" & dbkey & "&formgroup=" & formgroup & "&dataaction=get_structure&Table=" & tablename & "&Field=" & fieldname & "&DisplayType=" & displaytype  & "&StrucID=" & uniqueid & "&width=" & width & "&height=" & height
					embed_tag_string = embed_tag_string  &  """ border=0>"
				end if
			' END of DGB change /////////////////////////////////////////////////
			Elseif Ucase(displaytype) = "GIF" then
				embed_tag_string = "<IMG SRC="
				embed_tag_string = embed_tag_string &  """"  
				embed_tag_string = embed_tag_string &  Application("ActionForm" & dbkey) & "?dbname=" & dbkey & "&formgroup=" & formgroup & "&dataaction=get_structure&Table=" & tablename & "&Field=" & fieldname & "&DisplayType=" & displaytype  & "&StrucID=" & uniqueid & "&width=" & width & "&height=" & height
				embed_tag_string = embed_tag_string  &  """ border=0>"
			' END of DGB change /////////////////////////////////////////////////
		
		Else
		
			if not bReturnEmbed = true then
				if bShowGif = true then
					select case displaytype
					Case "SIZEDGIF"
						embed_tag_string = "<table border=""0"" width=""" & width & """ height=""" & height & """><tr><td valign=""middle"" align=""center"" BGCOLOR = ""#FFFFFF"" >"
						embed_tag_string = embed_tag_string & "<IMG SRC="
						embed_tag_string = embed_tag_string &  """"  
						embed_tag_string = embed_tag_string &  Application("ActionForm" & dbkey) & "?dbname=" & dbkey & "&formgroup=" & formgroup & "&dataaction=get_structure&Table=" & tablename & "&Field=" & fieldname & "&DisplayType=" & displaytype  & "&StrucID=" & uniqueid & "&width=" & width & "&height=" & height
						embed_tag_string = embed_tag_string  &  """ border=0>"
						embed_tag_string = embed_tag_string  & "</td></tr></table>"
					case "GIF"
						embed_tag_string = "<table border=""0"" width=""" & width & """ height=""" & height & """><tr><td valign=""middle"" align=""center"" BGCOLOR = ""#FFFFFF"" >"
						embed_tag_string = embed_tag_string & "<IMG SRC="
						embed_tag_string = embed_tag_string &  """"  
						embed_tag_string = embed_tag_string &  Application("ActionForm" & dbkey) & "?dbname=" & dbkey & "&formgroup=" & formgroup & "&dataaction=get_structure&Table=" & tablename & "&Field=" & fieldname & "&DisplayType=" & displaytype  & "&StrucID=" & uniqueid & "&width=" & width & "&height=" & height
						embed_tag_string = embed_tag_string  &  """ border=0>"
						embed_tag_string = embed_tag_string  & "</td></tr></table>"
					end select
				else
					if Not UseCartridge(dbkey, formgroup) then
						mycheckpath = Application("TempFileDirectory" & dbkey)& tablename & fieldname & "_" &  uniqueid & ".gif"
						mypath = Application("TempFileDirectoryHTTP" & dbkey)  & tablename & fieldname & "_" &  uniqueid & ".gif"
						CSDOGetChemData dbkey, formgroup, tablename, fieldname, uniqueid,  displaytype, ""
					end if
					embed_tag_string = "<table border=""0"" width=""" & width & """ height=""" & height & """><tr><td valign=""middle"" align=""center"" BGCOLOR = ""#FFFFFF"" ><IMG SRC=""" & mypath & """ Border = ""0""></td></tr></table>"

				end if
			else
				embed_tag_string = "<table border=""0"" width=""" & width & """ height=""" & height & """><tr><td valign=""middle"" align=""center"" BGCOLOR = ""#FFFFFF"" ><IMG SRC=""" & "#FILEPATH#" & """ Border = ""0""></td></tr></table>"
			end if	
		End if
	if addZoom = True then
		embed_tag_string = embed_tag_string &  "<p><script language = ""javascript"">getStrucZoomBtn(""" & fullfieldname  & uniqueid & """)</script>"
	end if
	'output additional hidden fields when not gif or no edit
	if bShowGif = False then
		if bNoEdit = False then
			if formmode = "EDIT_RECORD" then
				temp = split(fullfieldname, ":", -1)
				temp_name = split(temp(1), ".", -1)
				if UBound(temp_name) = 2 then
					fieldname = temp_name(2)
					tablename = temp_name(0) & "." &  temp_name(1)
				else
					fieldname = temp_name(1)
					tablename = temp_name(0)
				end if
				base64_cdx_name = replace(fullfieldname, fieldname, "BASE64_CDX")
				embed_tag_string = embed_tag_string & "<Input type=""hidden"" name=""" & base64_cdx_name & """ value="""">"
				orig_name = tablename & fieldname & "_" & uniqueid & ".cdx"
				mycdxPath = Application("TempFileDirectory" & dbkey)   &orig_name
				base64=EncodeCDX(mycdxPath)
				fullfieldname = fullfieldname & uniqueid 
				embed_tag_string = embed_tag_string &  "<Input type=""hidden"" name=""" & fullfieldname & "_orig" & """ value=""" & base64 & """>"
				embed_tag_string = embed_tag_string &  "<Input type=""hidden"" name=""" & fullfieldname & """ value ="""">"
				AddtoStrucAppletFields(fullfieldname)
			
			else
				fullfieldname = fullfieldname & uniqueid	
				embed_tag_string = embed_tag_string &  "<Input type=""hidden"" name=""" & fullfieldname & """ value="""">"
			end if
			if formmode = "EDIT" AND formgroupflag = "REG_COMMIT" then
					base64_cdx_name = replace(fullfieldname, fieldname, "BASE64_CDX")
					embed_tag_string = embed_tag_string & "<Input type=""hidden"" name=""" & base64_cdx_name & """ value="""">"
			end if
			if formmode = "EDIT" AND formgroupflag = "REG_SEARCH" then
					base64_cdx_name = replace(fullfieldname, fieldname, "BASE64_CDX")
					embed_tag_string = embed_tag_string & "<Input type=""hidden"" name=""" & base64_cdx_name & """ value="""">"
			end if
		end if
	end if
	if bGetEmbedTag = True then
		'build the embed string 
		if bReturnEmbed = True  then
				dataurl = ""
				cd_embed_tag = buildCDEmbedString(dbkey, formgroup,border, width,height, mimetype,source,id,name, dataurl, viewonly, shrinktofit,dontcache)
				'send string back to calling function without outputting
				embed_tag_string = embed_tag_string  & "<script language=""javascript"">cd_insertObjectStr(""" & cd_embed_tag & """)</script>"
		else
			
				cd_embed_tag = buildCDEmbedString(dbkey, formgroup,border, width,height, mimetype,source,id,name, dataurl, viewonly, shrinktofit,dontcache)
				'output embed string via javascript wrapper functions
				embed_tag_string = embed_tag_string & "<script language=""javascript"">cd_insertObjectStr(""" & cd_embed_tag & """)</script>"

				'outputCDEmbedTag cd_embed_tag 
				'output the hidden fields
		end if
	end if'gif output
		
	

	getDisplayCFWStructure = embed_tag_string
	'showmessagedialog(embed_tag_string)
End Function
Sub ShowStrucInputField(ByVal dbkey, ByVal formgroup, ByVal fullfieldname, ByVal idnumber, ByVal width, ByVal height, ByVal searchoptions, ByVal display)	
	theReturn = getShowStrucInputField( dbkey,  formgroup,  fullfieldname,  idnumber,  width,  height,  searchoptions,  display)	
	Response.Write theReturn
End Sub
'LJB/SYAN Add support for SDFile Search Field
Sub ShowSDFileSearchInputField(ByVal dbkey, ByVal formgroup, ByVal StructureTable, ByVal width)
	theReturn = getShowSDFileSearchInputField( dbkey,  formgroup,  StructureTable,  width)	
	Response.Write theReturn
End Sub

'LJB/SYAN Add support for SDFile Search Field
Function getShowSDFileSearchInputField(ByVal dbkey, ByVal formgroup, ByVal structureTable,  ByVal width)
		theReturn = getShowInputField(dbkey, formgroup, structureTable & ".SDF", "0",width)
		theReturn = theReturn & "<script language=""javascript"">"
		theReturn = theReturn & "getOpenSDFileButton('" & structureTable & ".SDF')"
		theReturn = theReturn & "</script>"
		theReturn = theReturn & "<input type=""hidden"" name=""MultipleExactSearch"" value="""">"

		getShowSDFileSearchInputField = theReturn
End function
'displays a plugin box and adds applet code to the calling html form
Function getShowStrucInputField(ByVal dbkey, ByVal formgroup, ByVal fullfieldname, ByVal idnumber, ByVal width, ByVal height, ByVal searchoptions, ByVal display)	
	blankpath = Application("TempFileDirectoryHTTP" & dbkey)   &   "mt.cdx"
	formmode = UCase(request("formmode"))
	if display <> "" then	
		output= output &  " <table cellpadding = ""2"" cellspacing = ""2"" border = ""0""><tr><td valign = ""top"">"
		output= output &   getGetSearchOptions(dbkey, formgroup, fullfieldname, searchoptions, display)
	end if	
	
	if instr(formmode,"ADD_" )>0 then

		add_required_coding = getRequiredHighlight(formmode, fullfieldname)
	end if
	if display <> "" then	
		if add_required_coding <> "" then	
			output= output &   "</td></tr><tr><td><table " & add_required_coding & "><tr><td>"
		else
			output= output &   "</td></tr><tr><td><table border = ""1""><tr><td>"
		end if
	else
		if add_required_coding <> "" then	
			output= output &   "<table cellspacing=""0""" & add_required_coding & "><tr><td>"
		else
			output= output &   "<table cellspacing=""0"" border = ""1""><tr><td>"
		end if
	end if
	special_flag = Request.QueryString("special")
		if special_flag = "edit_query" then
			Session("baseString" & fullfieldname & dbkey & formgroup) = Session("SearchData" & fullfieldname & dbkey & formgroup)
		end if
		if special_flag = "restore_query" then
			query_name = Request("queryname")
			Session("baseString" & fullfieldname & dbkey & formgroup) = Request.Cookies(query_name & dbkey & formgroup)(fullfieldname)
		end if
		'Gather the embed string data
		id= idnumber
		name=fullfieldname 
		mimetype="chemical/x-cdx"
		source= blankpath
		base64cdx = Session("baseString" & fullfieldname & dbkey & formgroup)
		' !DGB 05/13/02 Fixes Edit query with Net Plugin
		base64cdx = DecryptBase64cdx(dbkey, base64cdx)
		Session("baseString" & fullfieldname & dbkey & formgroup)=""
		if  base64cdx <> "" then
			dataurl ="data:chemical/x-cdx;base64," & base64cdx
			'dataurl = Application("ActionForm" & dbkey) & "?dbname=" & dbkey & "&formgroup=" & formgroup & "&fullfieldname=" & fullfieldname & "&dataaction=get_encoded_string"				
		else
			dataurl = ""
		end if
		
		viewonly = false
		shrinktofit= true
		dontcache=true
	'build the embed string and write it (the javascript function document.write's the tag
	cd_embed_tag = buildCDEmbedString(dbkey, formgroup,border, width,height, mimetype,source,id,name, dataurl, viewonly, shrinktofit,dontcache)
	output= output & "<script language=""javascript"">cd_insertObjectStr(""" & cd_embed_tag & """)</script>"
	if display <> "" then
		output= output &   "<Input type=""hidden"" name = """ & fullfieldname & """ value = """"></td></tr></table></td></tr></table>"
	else
		output= output &   "<Input type=""hidden"" name = """ & fullfieldname & """ value = """"></td></tr></table>"
	end if
	'DGB disable sdf searching for Global Search formgroups
	if Application("ENABLE_SDFILE_SEARCH") = 1 AND formgroupflag <> "GLOBAL_SEARCH" then
		tablenameTemp = split(fullfieldname, ".", -1)
		if UBound(tablenameTemp) = 2 then
			structureTable = tablenameTemp(0) & "." & tablenameTemp(1)
		else
			structureTable = tablenameTemp(0) 
		end if
		output= output & "<table><tr><td>Structures From SD File</td><td>" & getShowSDFileSearchInputField(dbkey, formgroup,structureTable,"24") & "</td></tr></table>"
	end if
	getShowStrucInputField=output
End Function

Function GetChemicalMimeTypeFromExt(FileExtension)
	Dim mimeType
	Select Case lcase(FileExtension)
		Case "cdx"
			mimeType = "chemical/x-cdx"
		Case "chm"
			mimeType = "chemical/x-chemdraw"
		Case "rawbase64cdx"
			mimeType = "text/html"
		Case "gif"
			mimeType = "image/gif"
		Case "cdxml"
			mimeType = "text/xml"
		Case "mol"
			mimeType = "chemical/x-molfile"
		Case "smiles"
			mimeType = "chemical/x-smiles"
		Case "chemical/x-name"
			mimeType = "chemical/x-name"		
		Case "smd"
			mimeType = "chemical/smd"
		Case "rxn"
			mimeType = "chemical/x-mdl-rxn"	
		Case "skc"
			mimeType = "chemical/x-mdl-isis"
		Case "tgf"
			mimeType = "chemical/x-mdl-tgf"
		Case "msm"
			mimeType = "chemical/x-msi-molfile"
		Case "png"
			mimeType = "image/png"
		Case "tif"
			mimeType = "image/tiff"
		Case "bmp"
			mimeType = "image/bmp"	
		Case "eps"
			mimeType = "application/postscript"	
		Case "ct"
			mimeType = "chemical/ct"
		Case "wmf"
			mimeType = "image/x-wmf"
		Case "emf"
			mimeType = "image/x-emf"	
		Case "f1d"
			mimeType = "chemical/x-questel-f1"	 		
	End Select
	GetChemicalMimeTypeFromExt = mimeType
End Function


Function isBinary(str)
	Select Case lcase(str)
		Case "mol","cdxml","smd","tgf","smiles","msm","rxn","ct","rawbase64cdx","chemical/smiles","chemical/x-name"
			isBinary = false
		Case "cdx","chm","gif","eps","wmf","tif","png","bmp","emf"
			isBinary = true
	End Select
End Function

Sub ServeBinaryFile(fileURL, MimeType)
	dim rbf
	Response.ContentType = MimeType
	Response.Expires = -1
	filePath = Server.MapPath(fileURL)
	set rbf = Server.CreateObject("ReadBinaryFile.Reader")
	Response.BinaryWrite rbf.ReadBinaryFile(filePath)
	Response.end
	set rbf = nothing
End Sub

'!DGB 05/13/02
function DecryptBase64cdx(dbkey, str)
	Dim tempFile
	' if base64 is from Net plugin we need do decode and re-encode so that it can be used as inline dataurl
	if left(str,1) = "#" then
		tempFile = Application("TempFileDirectory" & dbkey) & "DeCrypt_temp.cdx"
		if Not isObject(Session("myDecoder")) then
			Set Session("myDecoder") = Server.CreateObject("Base64Decode.Decode")
		end if
		decodesuccess = Session("myDecoder").Decode(str, tempFile)
		str = Session("myDecoder").encode(tempFile)
	End if
	DecryptBase64cdx = str 
end function

Function BuildOrderByList(dbkey, formgroup,inputstr, list_type,size, drop_down_label)
	dim str
	if UCase(request("Special")) = "EDIT_QUERY" then
		selected_value = Session("Order_by" & dbkey & formgroup)
	else
		selected_value=""
	end if
	
	if instr(selected_value, ",")>0 then
		select_value_array = split(selected_value, ",")
		
		select_array = Split(inputstr, ",", -1)
		str = "<SELECT " & list_type & " size = """ & size & """ name=""ORDER_BY"">"
		if Not UCase(list_type) = "MULTIPLE" then
			str = str & "<OPTION  selected value = >" & drop_down_label &   "</option>"
		end if
		for i = 0 to UBound(select_array)
			item_string = select_array(i)
			item_array = split(select_array(i), ":", -1)
			option_value =item_array(0)
			display_value =item_array(1)
			bItemFound = false
			for m=0 to UBound(select_value_array)
				if UCase(option_value) = UCase(select_value_array(m)) then
					bItemFound = true
				end if
			next
			if bItemFound = true then
				str = str & "<OPTION selected"  & " value=""" & option_value & """ id=""" & display_value &  """>" & display_value & "</option>"
			else
				str = str & "<OPTION "  & " value=""" & option_value & """ id=""" & display_value &  """>" & display_value & "</option>"
			end if
		next
		str = str & "</SELECT>"
	else
		select_array = Split(inputstr, ",", -1)
		str = "<SELECT " & list_type & " size = """ & size & """ name=""ORDER_BY"">"
		if Not UCase(list_type) = "MULTIPLE" then
			str = str & "<OPTION  selected value = >" & drop_down_label &   "</option>"
		end if
		for i = 0 to UBound(select_array)
			item_string = select_array(i)
			item_array = split(select_array(i), ":", -1)
			option_value =item_array(0)
			display_value =item_array(1)
			if UCase(option_value) = UCase(selected_value) then
				str = str & "<OPTION selected"  & " value=""" & option_value & """ id=""" & display_value &  """>" & display_value & "</option>"
			else
				str = str & "<OPTION "  & " value=""" & option_value & """ id=""" & display_value &  """>" & display_value & "</option>"
			end if
		next
		str = str & "</SELECT>"
	end if
	BuildOrderByList = str
End function

Function BuildSortDirectionList(dbkey, formgroup)
	if UCase(request("Special")) = "EDIT_QUERY" then
		selected_value = Session("Sort_direction" & dbkey & formgroup)
	end if
	
	Dim str
	str = "<SELECT NAME=""SORT_DIRECTION"">"
	
	if UCase(selected_value) = "DESC" then
			str = str & "<OPTION  value=""ASC"" id=""Ascending"">Ascending</option>"
			str = str & "<OPTION selected value=""DESC""  id=""Descending"">Descending</option>"
	else
			str = str & "<OPTION  selected value=""ASC"" id=""Ascending"">Ascending</option>"
			str = str & "<OPTION  value=""DESC""  id=""Descending"">Descending</option>"
	end if
	str = str & "</SELECT>"
	BuildSortDirectionList = str
End function

Function GetCDAX()
	on error resume next
	Set GetCDAX = Server.CreateObject(Application("CDAX_ProgID"))
	if err then
		Response.Write "Error while initializing CDAX using ProgID= " & Application("CDAX_ProgID")
		Response.end
	end if	
End Function

Function detectModernBrowser()
	ModernBrowser = false
	UserAgent = Request.ServerVariables("HTTP_USER_AGENT")
		If InStr(UCASE(UserAgent), "CHROME")>0 OR InStr(UCASE(UserAgent), "FIREFOX")>0 then
			ModernBrowser = true
		end if
	detectModernBrowser = ModernBrowser
End Function
%>
