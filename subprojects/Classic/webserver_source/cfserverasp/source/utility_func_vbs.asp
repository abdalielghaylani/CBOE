
<%' Copyright 1999-2003 CambridgeSoft Corporation. All rights reserved
'DO NOT EDIT THIS FILE
'This file contains utility functions%>
<%
'determines whether a text input value is TRUE, and returns such. Else returns false. Provide int'l compatibility
'for instances where a text value for true false is set on a system where boolean true false are in another language. For example "falso" in spanish systems
function strTrueFalse(inputval)
	if UCase(inputval) = "TRUE" then
		returnstr = "True"
	else
		returnstr = "False"
	end if	
		strTrueFalse = returnstr
end function

'provides access to the ini file via the cowsUtil.dll.
Function GetINIValue(ByVal allowempty, ByVal theSection, ByVal theKeyname, ByVal INIType, ByVal ININame )

	on error resume next
	if not isObject(INIVar) then
		Set INIVAR= Server.CreateObject("cowsUtils.cowsini") 
	end if
	Select Case INIType
		Case "cows"
			inivalue = INIVAR.VBGetPrivateProfileString(Trim(theSection), Trim(theKeyname), "cows.ini")
			if inivalue = "INIEmpty" then
				emptyval = "ini file: winnt/" & ININame & ".ini. <br>"
			End if
		Case "chemoffice"
			if ININame = "menubar" then
				chemoffice_path = Application("ServerDrive") & "\"&  Application("ServerRoot") & "\"  & Application("DocumentRoot") & "\" & Application("COWSRoot") & "\config\menubar.ini"
			else
				chemoffice_path = Application("ServerDrive") & "\"&  Application("ServerRoot") & "\"  & Application("DocumentRoot") & "\" & Application("COWSRoot") & "\config\chemoffice.ini"
			end if
			inivalue = INIVAR.VBGetPrivateProfileString(Trim(theSection), Trim(theKeyname), Trim(chemoffice_path))
			if inivalue = "INIEmpty" then
				emptyval = "ini file: /chemoffice/" & ININame & ".ini. <br>"
			End if
		Case "chemoffice_menu"
			'!DGB! 02/2003 use MapPath instead of building it up.  Works better when debugging
			chemoffice_path = Server.MapPath("/cfserverasp/source") & "\menubar.ini"
			inivalue = INIVAR.VBGetPrivateProfileString(Trim(theSection), Trim(theKeyname), Trim(chemoffice_path))
			if inivalue = "INIEmpty" then
				emptyval = ""
			End if
		Case "web_app"
		
			Application("inipath") = Application("AppPath")  & "\config\" & ININame &".ini"
			
			inivalue = INIVAR.VBGetPrivateProfileString(Trim(theSection), Trim(theKeyname), Trim(Application("inipath")))
			if inivalue = "INIEmpty" then
				emptyval = "ini file:  /config/" & ININame & ".ini. <br>" 
			End if
		
	End Select
	if inivalue = "INIEmpty" then
		Select case allowempty
			case "required"
				RaiseDBError "A required entry in the ini file is missing. ", emptyval , " SECTION:  " & theSection & "<br> KEY:  "& theKeyname
			case "optional"
				inivalue = ""
		End select
	end if
	
	GetINIValue = Trim(inivalue)
	
End Function

Function detectWIN95_IE5()
	WIN95IE5 = false
	UserAgent = Request.ServerVariables("HTTP_USER_AGENT")
	If InStr(UserAgent, "MSIE 5.0") then
		If InStr(UserAgent, "Win") then
			If InStr(UserAgent, "95") then
				WIN95IE5 = true
			end if
		end if
	end if
	detectWIN95_IE5 = WIN95IE5
End Function

Function detectIE5()
	IEBrowser = false
	UserAgent = Request.ServerVariables("HTTP_USER_AGENT")
		If InStr(UserAgent, "MSIE 5") >0 then
			IEBrowser = true
		end if
	detectIE5 = IEBrowser
End Function
Function detectIE55()
	IEBrowser = false
	UserAgent = Request.ServerVariables("HTTP_USER_AGENT")
		If InStr(UserAgent, "MSIE 5.5") >0 then
			IEBrowser = true
		end if
	detectIE55 = IEBrowser
End Function

Function detectIE4()
	IEBrowser = false
	UserAgent = Request.ServerVariables("HTTP_USER_AGENT")
		If InStr(UserAgent, "MSIE 4") >0 then
			IEBrowser = true
		end if
	detectIE4 = IEBrowser
End Function

Function detectIE6plus()
	IEBrowser = false
	UserAgent = Request.ServerVariables("HTTP_USER_AGENT")
		If InStr(UserAgent, "MSIE 6") >0 or InStr(UserAgent, "MSIE 7") >0 or InStr(UserAgent, "MSIE 8") >0 then
			IEBrowser = true
		end if
	detectIE6plus = IEBrowser
End Function

Function detectNetscape()
	NSBrowser = false
	UserAgent = Request.ServerVariables("HTTP_USER_AGENT")
	
		If InStr(UCASE(UserAgent), "MOZILLA")>0 AND Not Instr(UCase(UserAgent), "MSIE")> 0 then
			NSBrowser = true
		end if
	detectNetscape = NSBrowser
End Function

Function detectModernBrowser()
	ModernBrowser = false
	UserAgent = Request.ServerVariables("HTTP_USER_AGENT")
		If InStr(UCASE(UserAgent), "CHROME")>0 OR InStr(UCASE(UserAgent), "FIREFOX")>0 then
			ModernBrowser = true
		end if
	detectModernBrowser = ModernBrowser
End Function

Function detectIE()
	IEBrowser = false

	UserAgent = Request.ServerVariables("HTTP_USER_AGENT")
			'response.write UserAgent

		If InStr(UCASE(UserAgent), "MSIE")>0 then
			IEBrowser = true
		end if
		'IEBrowser = false
	detectIE = IEBrowser
End Function


Function detectNS4()
	NSBrowser = false
	UserAgent = Request.ServerVariables("HTTP_USER_AGENT")
		If InStr(UCASE(UserAgent), "MOZILLA/4")>0 AND InStr(UCASE(UserAgent), "MOZILLA")>0 AND Not Instr(UCase(UserAgent), "MSIE")> 0 then
			NSBrowser = true
		end if
	detectNS4 = NSBrowser
End Function

Function detectNS6()
	NSBrowser = false
	UserAgent = Request.ServerVariables("HTTP_USER_AGENT")
		If InStr(UCASE(UserAgent), "NETSCAPE6/")>0 AND InStr(UCASE(UserAgent), "MOZILLA")>0 AND Not Instr(UCase(UserAgent), "MSIE")> 0 then
			NSBrowser = true
		end if
	detectNS6 = NSBrowser
End Function
Function detectNS()
	NSBrowser = false
	UserAgent = Request.ServerVariables("HTTP_USER_AGENT")

		If InStr(UCASE(UserAgent), "MOZILLA")>0 AND Not (Instr(UCase(UserAgent), "MSIE")> 0 or Instr(UCase(UserAgent), "TRIDENT")> 0) then
			NSBrowser = true
		end if
	detectNS = NSBrowser
End Function

'LJB 8/16/200 detect MAC IE browser
Function detectIEMac()
	MacBrowser = false
	UserAgent = Request.ServerVariables("HTTP_USER_AGENT")
	If InStr(UCASE(UserAgent), "MAC_")>0  AND  Instr(UCase(UserAgent), "MSIE")> 0 then
		MacBrowser = true
	end if
	detectIEMac = MacBrowser
End Function


'-------------------------------------------------------------------------------
' Purpose:	Decodes base-encoded CDX string
' Inputs :	Base64-encoded CDX string
' Returns:	Decoded CDX file written to {outputpath}
'-------------------------------------------------------------------------------
Function EncodeBlankCDX (ByVal inputpath)

	If not isObject(Session("myDecoder"))then
		Set Session("myDecoder") = Server.CreateObject("Base64Decode.Decode")
	End If

	base64 = Session("myDecoder").Encode(inputpath)
	EncodeBlankCDX = base64
End Function


%>