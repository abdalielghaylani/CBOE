--Copyright 1999-2003 CambridgeSoft Corporation. All rights reserved

--table creation script for Chem_REG/Oracle


--#########################################################
--CREATE TABLES
--######################################################### 

Connect &&schemaName/&&schemaPass@&&serverName


CREATE TABLE  exceptions ( row_id rowid, owner varchar2(30), table_name varchar2(30), constraint varchar2(30)) ; 

CREATE TABLE  RESULTTYPE (
	RESULT_TYPE_ID NUMBER(8,0) not null,
	RESULT_TYPE_NAME VARCHAR2(250) null,
	RESULT_TYPE_DESCRIPTION VARCHAR2(255) null,
	RESULT_TYPE_UNITS VARCHAR2(100) null, 
	constraint PK_RESULT_TYPE_ID 
		primary key (RESULT_TYPE_ID) USING INDEX TABLESPACE &&indexTableSpaceName
	)
;


CREATE TABLE  RESULTS (
	RESULT_ID NUMBER(8,0) not null,
	RESULT_VALUE VARCHAR2(255) null,
	RESULT_EXPERIMENT_ID NUMBER(8,0) null,
	RESULT_TYPE_ID NUMBER(8,0) null, 
	constraint PK_RESULT_ID 
		primary key (RESULT_ID) USING INDEX TABLESPACE &&indexTableSpaceName
	)
;


CREATE TABLE  PARAMETERTYPE (
	PARAMETER_TYPE_ID NUMBER(8,0) not null,
	PARAMETER_TYPE_NAME VARCHAR2(250) null,
	PARAMETER_TYPE_DESCRIPTION VARCHAR2(255) null,
	PARAMETER_TYPE_UNITS VARCHAR2(100) null, 
	constraint PK_PARAMETER_TYPE_ID 
		primary key (PARAMETER_TYPE_ID) USING INDEX TABLESPACE &&indexTableSpaceName
	)
;


CREATE TABLE  PARAMETERS (
	PARAMETER_ID NUMBER(8,0) not null,
	PARAMETER_VALUE VARCHAR2(250) null,
	PARAMETER_TYPE_ID NUMBER(8,0) null,
	PARAMETER_EXPERIMENT_ID NUMBER(8,0) null, 
	constraint PK_PARAMETER_ID 
		primary key (PARAMETER_ID) USING INDEX TABLESPACE &&indexTableSpaceName
	)
;



CREATE TABLE  EXPERIMENTTYPERESULTS (
	EXPERIMENT_TYPE_ID NUMBER(8,0) not null,
	RESULT_TYPE_ID NUMBER(8,0) not null
	)
;


CREATE TABLE  EXPERIMENTTYPEPARAMETERS (
	EXPERIMENT_TYPE_ID NUMBER(8,0) not null,
	PARAMETER_TYPE_ID NUMBER(8,0) not null
	)
; 


CREATE TABLE  EXPERIMENTTYPE (
	EXPERIMENT_TYPE_ID NUMBER(8,0) not null,
	EXPERIMENT_TYPE_NAME VARCHAR2(250) null,
	EXPERIMENT_TYPE_DESCRIPTION VARCHAR2(255) null,
	EXPERIMENT_TYPE_CREATED DATE null,
	EXPERIMENT_TYPE_MODIFIED DATE null,
	EXPERIMENT_TYPE_VERSION NUMBER(8,0) null, 
	constraint PK_EXPERIMENT_TYPE_ID3 
		primary key (EXPERIMENT_TYPE_ID) USING INDEX TABLESPACE &&indexTableSpaceName
	)
;


CREATE TABLE  EXPERIMENTS (
	EXPERIMENT_ID NUMBER(8,0) not null,
	EXPERIMENT_DATE DATE null,
	EXPERIMENT_USERID NUMBER(8,0) null,
	EXPERIMENT_TYPE_ID NUMBER(8,0) null,
	EXPERIMENT_SAMPLE_ID NUMBER(8,0) null,
	EXPERIMENT_BATCH_ID NUMBER(8,0) null,
	EXPERIMENT_LOCATION VARCHAR2(250) null,
	EXPERIMENT_REFERENCE VARCHAR2(250) null,
	EXPERIMENT_COMMENT VARCHAR2(255) null, 
	constraint PK_EXPERIMENT_ID 
		primary key (EXPERIMENT_ID) USING INDEX TABLESPACE &&indexTableSpaceName
	)
;


CREATE TABLE  TEST_SAMPLES (
	SAMPLE_ID NUMBER(8,0) null,
	ALT_SAMPLE_ID_1 VARCHAR2(50) null,
	ALT_SAMPLE_ID_2 VARCHAR2(50) null,
	BATCH_INTERNAL_ID NUMBER(8,0) null,
	REG_INTERNAL_ID NUMBER(5,0) null,
	STRUCTURE_ID NUMBER(5,0) null,
	LOAD_ID VARCHAR2(50) null,
	DATETIME_STAMP VARCHAR2(30) null, 
	constraint PK_TEST_SAMPLES_ID 
		primary key (SAMPLE_ID)  USING INDEX TABLESPACE &&indexTableSpaceName
	)
;


CREATE TABLE  TEMPORARY_STRUCTURES (
	TEMP_COMPOUND_ID NUMBER(8,0) not null,
	COMMIT_TYPE VARCHAR2(50) null,
	REG_INTERNAL_ID VARCHAR2(50) null,
	CPD_INTERNAL_ID NUMBER(8,0) null,
	PRODUCER VARCHAR2(120) null,	
	NOTEBOOK_PAGE VARCHAR2(50) null,
	NOTEBOOK_TEXT VARCHAR2(500) null,
	NOTEBOOK_NUMBER NUMBER(8,0) null,
	PROJECT_ID NUMBER(8,0) null,
	MOL_ID NUMBER(8,0) null,
	BATCH_COMMENT VARCHAR2(500) null,
	CHEMICAL_NAME VARCHAR2(500) null,
	CHEM_NAME_AUTOGEN VARCHAR2(500) null,
	SYNONYM_R VARCHAR2(500) null,
	LIT_REF VARCHAR2(2000) null,
	PREPARATION VARCHAR2(2000) null,	
	STORAGE_REQ_AND_WARNINGS VARCHAR2(2000) null,
	SEQUENCE_ID NUMBER(8,0) null,
	SPECTRUM_ID NUMBER(8,0) null,
	CAS_NUMBER VARCHAR2(50) null,
	RNO_NUMBER VARCHAR2(50) null,
	FEMA_GRAS_NUMBER VARCHAR2(50) null,
	GROUP_CODE VARCHAR2(50) null,
	SCIENTIST_ID NUMBER(8,0) null,
	BP VARCHAR2(200) null,
	MP VARCHAR2(200) null,	
	H1NMR VARCHAR2(200) null,	
	C13NMR VARCHAR2(200) null,	
	MS VARCHAR2(200) null,	
	IR VARCHAR2(200) null,
	GC VARCHAR2(200) null,
	PHYSICAL_FORM VARCHAR2(200) null,
	COLOR VARCHAR2(200) null,	
	FLASHPOINT VARCHAR2(200) null,
	HPLC VARCHAR2(200) null,
	OPTICAL_ROTATION VARCHAR2(200) null,
	REFRACTIVE_INDEX VARCHAR2(50) null,
	CREATION_DATE DATE null,
	COMPOUND_TYPE NUMBER(8,0) null,
	STRUCTURE_COMMENTS_TXT VARCHAR2(200) null,
	ENTRY_DATE DATE null,
	LAST_MOD_DATE DATE null,
	SALT_CODE NUMBER(8,0) null,
	SALT_NAME VARCHAR2(200) null,
	SALT_MW NUMBER(10,5) null,
	SALT_EQUIVALENTS NUMBER(10,5) null,
	SOLVATE_ID NUMBER(8,0) null,
	SOLVATE_NAME VARCHAR2(200) null,
	SOLVATE_MW NUMBER(10,5) null,
	SOLVATE_EQUIVALENTS NUMBER(10,5) null,
	FORMULA_WEIGHT NUMBER(10,5) null,
	BATCH_FORMULA VARCHAR2(250) null,
	BATCH_PROJECT_ID NUMBER(8,0) null,
	SOURCE VARCHAR2(200) null,
	VENDOR_NAME VARCHAR2(200) null,
	VENDOR_ID  VARCHAR2(100) null,
	PERCENT_ACTIVE NUMBER(10,5) null,
	AMOUNT_UNITS VARCHAR2(100) null,
	PURITY VARCHAR2(200) null,
	LC_UV_MS VARCHAR2(200) null,
	CHN_COMBUSTION VARCHAR2(200) null,
	UV_SPECTRUM VARCHAR2(200) null,
	APPEARANCE VARCHAR2(200) null,
	LogD NUMBER (38,8) null,
	SOLUBILITY VARCHAR2(200) null,	
	COLLABORATOR_ID VARCHAR2(200)null,
	PRODUCT_TYPE VARCHAR2(100)null,
	CHIRAL VARCHAR2 (200) null,
	CLogP NUMBER (38,8) null,
	H_BOND_DONORS NUMBER (38,0) null,
	H_BOND_ACCEPTORS NUMBER (38,0) null,
	BASE64_CDX CLOB null,
	LAST_MOD_PERSON_ID NUMBER(8,0) null,
	ENTRY_PERSON_ID NUMBER(8,0) null,
	MW_TEXT VARCHAR2(200) null,
	MF_TEXT VARCHAR2(500) null,
	MW NUMBER(10,5) null,
	MW2 NUMBER(10,5) null,
	FORMULA2 VARCHAR2(500) null,
	AMOUNT VARCHAR2(50) null, 
	DUPLICATE VARCHAR2(500) null,
	APPROVED NUMBER(1,0) DEFAULT 0 null,
	APPROVED_BY NUMBER(8,0) null,
	APPROVED_DATE DATE null,
	APPROVED_TIME VARCHAR(30) null,
	FIELD_1 VARCHAR2(2000) null,
	FIELD_2 VARCHAR2(2000) null,
	FIELD_3 VARCHAR2(2000) null,
	FIELD_4 VARCHAR2(2000) null,
	FIELD_5 VARCHAR2(2000) null,
	FIELD_6 VARCHAR2(2000) null,
	FIELD_7 VARCHAR2(2000) null,
	FIELD_8 VARCHAR2(2000) null,
	FIELD_9 VARCHAR2(2000) null,
	FIELD_10 VARCHAR2(2000) null,
	LOAD_ID VARCHAR2(50) null,
	DATETIME_STAMP VARCHAR2(30) null, 
	constraint PK_TEMP_COMPOUND_ID 
		primary key (TEMP_COMPOUND_ID) USING INDEX TABLESPACE &&indexTableSpaceName
	)
	LOB (BASE64_CDX) STORE AS(
		DISABLE STORAGE IN ROW NOCACHE PCTVERSION 10
		TABLESPACE &&lobsTableSpaceName
		STORAGE (INITIAL &&lobB64cdx NEXT &&lobB64cdx)
	)		
;


CREATE TABLE  STRUCTURES (
  CPD_INTERNAL_ID NUMBER(8,0) not null,
	BASE64_CDX CLOB null,	
	MOL_ID NUMBER(8,0) null,
	LOAD_ID VARCHAR2(50) null,
	DATETIME_STAMP VARCHAR2(30) null,
	constraint PK_CPD_INTERNAL_ID2 
		primary key (CPD_INTERNAL_ID) USING INDEX TABLESPACE &&indexTableSpaceName
	)
	LOB (BASE64_CDX) STORE AS(
		DISABLE STORAGE IN ROW NOCACHE PCTVERSION 10
		TABLESPACE &&lobsTableSpaceName
		STORAGE (INITIAL &&lobB64cdx NEXT &&lobB64cdx)
	)		
;

CREATE TABLE  MOLFILES (
	CPD_INTERNAL_ID NUMBER(8,0) null,
	MOL_ID NUMBER(8,0) null,
	MOLFILE LONG null,
	LOAD_ID VARCHAR2(50) null,
	DATETIME_STAMP VARCHAR2(30) null, 
	constraint PK_CPD_INTERNAL_ID3 
		primary key (CPD_INTERNAL_ID)  USING INDEX TABLESPACE &&indexTableSpaceName
	)
;


CREATE TABLE  STRUCTURE_MIXTURE (
	STRUC_MIX_ID NUMBER(8,0) not null,
	CPD_INTERNAL_ID NUMBER(8,0) null,
	MIX_INTERNAL_ID NUMBER(8,0) null, 
	LOAD_ID VARCHAR2(50) null,
	DATETIME_STAMP VARCHAR2(30) null, 
	constraint PK_STRUC_MIX_ID 
	primary key (STRUC_MIX_ID) USING INDEX TABLESPACE &&indexTableSpaceName
	)
;


CREATE TABLE  SPECTRA (
	SPECTRUM_ID NUMBER(8,0) not null,
	PATH VARCHAR2(50) null,
	NOTEBOOK VARCHAR2(50) null,
	SCIENTIST_ID NUMBER(8,0) null,
	SPECTRUM VARCHAR2(2000) null, 
	LOAD_ID VARCHAR2(50) null,
	DATETIME_STAMP VARCHAR2(30) null, 
	constraint PK_SPECTRUM_ID 
		primary key (SPECTRUM_ID) USING INDEX TABLESPACE &&indexTableSpaceName
	)
;


CREATE TABLE  SEQUENCE (
	SEQUENCE_ID NUMBER(8,0) not null,
	PREFIX VARCHAR2(150) null,
	NEXT_IN_SEQUENCE NUMBER(8,0) null,
	ACTIVE NUMBER(1,0) null, 
	constraint PK_SEQUENCE_ID 
		primary key (SEQUENCE_ID) USING INDEX TABLESPACE &&indexTableSpaceName
	)
;

 
CREATE TABLE  SALTS (
	SALT_CODE NUMBER(8,0) not null,
	SALT_NAME VARCHAR2(250) null,
	SALT_MW NUMBER(10,5) null,
	SALT_MF VARCHAR2(250) null,
	ACTIVE NUMBER(1,0) null, 
	constraint PK_SALT_CODE 
		primary key (SALT_CODE) USING INDEX TABLESPACE &&indexTableSpaceName
	)
;


CREATE TABLE  SOLVATES (
	SOLVATE_ID NUMBER(8,0) not null,
	SOLVATE_NAME VARCHAR2(250) null,
	SOLVATE_MW NUMBER(10,5) null,
	SOLVATE_MF VARCHAR2(250) null,
	ACTIVE NUMBER(1,0) null, 
	constraint PK_SOLVATE_ID 
		primary key (SOLVATE_ID) USING INDEX TABLESPACE &&indexTableSpaceName
	)
;


CREATE TABLE  REG_NUMBERS (
	REG_ID NUMBER(8,0) not null,
	MOL_ID NUMBER(8,0) null,
	REGISTRY_DATE Date null,
	CPD_INTERNAL_ID NUMBER(8,0) null,
	REG_NUMBER VARCHAR2(50) null,
	ROOT_NUMBER VARCHAR2(50) null,
	SEQUENCE_NUMBER NUMBER(8,0) null,
	SEQUENCE_INTERNAL_ID NUMBER(8,0) null,
	LAST_BATCH_NUMBER NUMBER(8,0) null, 
	REGISTRAR_PERSON_ID NUMBER(8,0) null, 
	LOAD_ID VARCHAR2(50) null,
	DATETIME_STAMP VARCHAR2(30) null, 
	constraint PK_REG_ID 
		primary key (REG_ID) USING INDEX TABLESPACE &&indexTableSpaceName
	)
;


CREATE TABLE  REG_QUALITY_CHECKED (
	REG_INTERNAL_ID NUMBER(8,0) null,
	BATCH_INTERNAL_ID NUMBER(8,0) null,
	QUALITY_CHECKED NUMBER(1,0) not null,
	DATETIME_STAMP VARCHAR2(30) null
	)
; 

CREATE TABLE  REG_APPROVED (
	REG_INTERNAL_ID NUMBER(8,0) not null,
	BATCH_INTERNAL_ID NUMBER(8,0) null,
	APPROVED NUMBER(1,0) not null,
	DATETIME_STAMP VARCHAR2(30) null
	)
;


CREATE TABLE  PROJECTS (
	PROJECT_INTERNAL_ID NUMBER(8,0) not null,
	PROJECT_NAME VARCHAR2(250) null,
	ACTIVE NUMBER(1,0) null, 
	constraint PK_PROJECT_INTERNAL_ID 
		primary key (PROJECT_INTERNAL_ID) USING INDEX TABLESPACE &&indexTableSpaceName
	)
;


CREATE TABLE  NOTEBOOKS (
	NOTEBOOK_NUMBER NUMBER(8,0) not null,
	NOTEBOOK_NAME VARCHAR2(500) null,
	LOCATION VARCHAR2(250) null,
	MICROFICHE VARCHAR2(250) null,
	USER_CODE NUMBER(8,0) not null,
	ACTIVE NUMBER(1,0) not null, 
	constraint PK_NOTEBOOK_NUMBER 
		primary key (NOTEBOOK_NUMBER) USING INDEX TABLESPACE &&indexTableSpaceName
	)
;


CREATE TABLE  MIXTURES (
	MIX_INTERNAL_ID NUMBER(8,0) not null,
	MIX_ID VARCHAR2(50) null,
	LOAD_ID VARCHAR2(50) null,
	DATETIME_STAMP VARCHAR2(30) null, 
	constraint PK_MIX_INTERNAL_ID 
		primary key (MIX_INTERNAL_ID) USING INDEX TABLESPACE &&indexTableSpaceName
	)
;


CREATE TABLE  IDENTIFIERS (
	ID NUMBER(8,0) not null,
	IDENTIFIER_TYPE NUMBER(8,0) null,
	IDENTIFIER_DESCRIPTOR VARCHAR2(500) null, 
	constraint PK_IDENTIFIER_ID 
		primary key (ID) USING INDEX TABLESPACE &&indexTableSpaceName
	)
;


CREATE TABLE  DUPLICATES (
	COMPOUND_ID NUMBER(8,0) null,
	DUPLICATE NUMBER(8,0) null,
	LOAD_ID VARCHAR2(50) null,
	DATETIME_STAMP VARCHAR2(30) null, 
	constraint PK_DUP_CMPD__ID 
		primary key (COMPOUND_ID) USING INDEX TABLESPACE &&indexTableSpaceName
	)
;


CREATE TABLE  COMPOUND_TYPE (
	COMPOUND_TYPE NUMBER(8,0) not null,
	DESCRIPTION VARCHAR2(500) null,
	ACTIVE NUMBER(1,0) null, 
	constraint PK_COMPOUND_TYPE 
		primary key (COMPOUND_TYPE) USING INDEX TABLESPACE &&indexTableSpaceName
	)
;


CREATE TABLE  COMPOUND_SALT (
	COMPOUND_SALT_ID NUMBER(8,0) not null,
	MOL_ID NUMBER(8,0) null,
	ROOT_NUMBER VARCHAR2(50) null,
	REG_INTERNAL_ID NUMBER(8,0) null,
	SALT_INTERNAL_ID NUMBER(8,0) null,
	CPD_INTERNAL_ID NUMBER(8,0) null, 
	LOAD_ID VARCHAR2(50) null,
	DATETIME_STAMP VARCHAR2(30) null, 
	constraint PK_COMPOUND_SALT_ID 
		primary key (COMPOUND_SALT_ID) USING INDEX TABLESPACE &&indexTableSpaceName
	)
;


CREATE TABLE  COMPOUND_PROJECT (
	COMP_PROJECT_ID NUMBER(8,0) null,
	PROJECT_INTERNAL_ID NUMBER(8,0) null,
	CPD_INTERNAL_ID NUMBER(8,0) null,
	LOAD_ID VARCHAR2(50) null,
	DATETIME_STAMP VARCHAR2(30) null, 
	constraint PK_COMPOUND_PROJECT_ID 
		primary key (COMP_PROJECT_ID) USING INDEX TABLESPACE &&indexTableSpaceName
	)
;


CREATE TABLE  COMPOUND_MOLECULE (
	CPD_DATABASE_COUNTER NUMBER(8,0) null,
	GIV_SUBSTANCE_ID NUMBER(8,0) null,
	MOL_ID NUMBER(8,0) null,
	SEQUENCE_INTERNAL_ID NUMBER(8,0) null,
	COMPOUND_TYPE NUMBER(8,0) null,
	STRUCTURE_COMMENTS_TXT VARCHAR2(200) null,
	ROOT_NUMBER VARCHAR2(50) null,
	MW_TEXT VARCHAR2(250) null,
	MW NUMBER(10,5) null,
	MF_TEXT VARCHAR2(500) null,
	MF VARCHAR2(500) null,
	ROOT_REG_DATE DATE null,
	MW2 NUMBER(10,5) null,
	FORMULA2 VARCHAR2(500) null,
	PRODUCT_TYPE VARCHAR2(200)null,
	CHIRAL VARCHAR2 (200) null,
	CLogP NUMBER (10,8) null,
	H_BOND_DONORS NUMBER (8,0) null,
	H_BOND_ACCEPTORS NUMBER (8,0) null,
	LAST_MOD_PERSON_ID NUMBER(8,0) null,
	LAST_MOD_DATE Date null,
	LOAD_ID VARCHAR2(50) null,
	DATETIME_STAMP VARCHAR2(30) null, 
	constraint PK_CPD_DATABASE_COUNTER 
		primary key (CPD_DATABASE_COUNTER) USING INDEX TABLESPACE &&indexTableSpaceName
	)
;

CREATE TABLE  COMMIT_TYPES (
	COMMIT_TYPE_ID NUMBER(8,0) not null,
	TASK_NAME VARCHAR2(50) null, 
	constraint PK_COMMIT_TYPE_ID 
		primary key (COMMIT_TYPE_ID) USING INDEX TABLESPACE &&indexTableSpaceName
	)
;


CREATE TABLE  BATCHES (
	BATCH_INTERNAL_ID NUMBER(8,0) null,
	GIV_BATCH_ID NUMBER(8,0) null,
	BATCH_NUMBER NUMBER(5,0) null,
	MOL_ID NUMBER(8,0) null,
	CPD_INTERNAL_ID NUMBER(8,0) null,
	PRODUCER VARCHAR2(120) null,
	SCIENTIST_ID NUMBER(8,0) null,
	REG_INTERNAL_ID NUMBER(8,0) null,
	LAST_MOD_PERSON_ID NUMBER(8,0) null,
	ENTRY_PERSON_ID NUMBER(8,0) null,
	BATCH_REG_PERSON_ID NUMBER(8,0) null,
	BATCH_REG_DATE DATE null,
	LAST_MOD_DATE DATE null,
	BATCH_COMMENT VARCHAR2(500) null,
	NOTEBOOK_PAGE VARCHAR2(200) null,
	NOTEBOOK_TEXT VARCHAR2(500) null,
	NOTEBOOK_INTERNAL_ID NUMBER(8,0) null,
	SALT_INTERNAL_ID  NUMBER(8,0) null,
	SALT_NAME VARCHAR2(250) null,
	SALT_MW NUMBER(10,5) null,
	SALT_EQUIVALENTS NUMBER(10,5) null,
	SOLVATE_ID NUMBER(8,0) null,
	SOLVATE_NAME VARCHAR2(250) null,
	SOLVATE_MW NUMBER(10,5) null,
	SOLVATE_EQUIVALENTS NUMBER(10,5) null,
	FORMULA_WEIGHT NUMBER(10,5) null,
	BATCH_FORMULA VARCHAR2(250) null,
	BATCH_PROJECT_ID NUMBER(8,0) null,
	SOURCE VARCHAR2(250) null,
	VENDOR_NAME VARCHAR2(250) null,
	VENDOR_ID VARCHAR2(100) null,
	PERCENT_ACTIVE NUMBER(10,5) null,
	AMOUNT_UNITS VARCHAR2(20) null,
	PURITY VARCHAR2(200) null,
	LC_UV_MS VARCHAR2(200) null,
	CHN_COMBUSTION VARCHAR2(200) null,
	UV_SPECTRUM VARCHAR2(200) null,
	APPEARANCE VARCHAR2(200) null,
	H1NMR VARCHAR2(200) null,	
	C13NMR VARCHAR2(200) null,
	LogD NUMBER (38,8) null,
	SOLUBILITY VARCHAR2(200) null,	
	MS VARCHAR2(200) null,	
	IR VARCHAR2(200) null,
	GC VARCHAR2(200) null,
	BP VARCHAR2(200) null,
	MP VARCHAR2(200) null,
	FLASHPOINT VARCHAR2(200) null,
	PHYSICAL_FORM VARCHAR2(200) null,
	COLOR VARCHAR2(200) null,
	HPLC VARCHAR2(200) null,
	OPTICAL_ROTATION VARCHAR2(200) null,
	REFRACTIVE_INDEX VARCHAR2(200) null,	
	PREPARATION VARCHAR2(2000) null,	
	STORAGE_REQ_AND_WARNINGS VARCHAR2(2000) null,
	LIT_REF VARCHAR2(2000) null,
	CREATION_DATE DATE null,
	AMOUNT VARCHAR2(50) null,
	FIELD_1 VARCHAR2(2000) null,
	FIELD_2 VARCHAR2(2000) null,
	FIELD_3 VARCHAR2(2000) null,
	FIELD_4 VARCHAR2(2000) null,
	FIELD_5 VARCHAR2(2000) null,
	FIELD_6 VARCHAR2(2000) null,
	FIELD_7 VARCHAR2(2000) null,
	FIELD_8 VARCHAR2(2000) null,
	FIELD_9 VARCHAR2(2000) null,
	FIELD_10 VARCHAR2(2000) null,
	LOAD_ID VARCHAR2(50) null,
	DATETIME_STAMP VARCHAR2(30) null, 
	constraint PK_BATCHES 
		primary key (BATCH_INTERNAL_ID) USING INDEX TABLESPACE &&indexTableSpaceName
	)
;


CREATE TABLE  ALT_IDS (
	ID NUMBER(8,0) not null,
	REG_INTERNAL_ID NUMBER(8,0) null,
	IDENTIFIER VARCHAR2(500) null,
	IDENTIFIER_TYPE NUMBER(8,0) null, 
	LOAD_ID VARCHAR2(50) null,
	DATETIME_STAMP VARCHAR2(30) null, 
	constraint PK_CONSTR_ALT_IDS 
		primary key (ID) USING INDEX TABLESPACE &&indexTableSpaceName
	)
;


CREATE TABLE  BATCH_PROJECTS (
	BATCH_PROJECT_ID NUMBER(8,0) not null,
	PROJECT_NAME VARCHAR2(250) null,
	OWNER_ID NUMBER(8,0) null,
	ACTIVE NUMBER(1,0) null, 
	constraint PK_BATCH_PROJECT_ID 
		primary key (BATCH_PROJECT_ID) USING INDEX TABLESPACE &&indexTableSpaceName
	)
;


CREATE TABLE  BATCH_PROJ_UTILIZATIONS(
	BATCH_PROJ_UTIL_ID NUMBER(8,0) not null,
	UTILIZATION_ID NUMBER(8,0) null,
	BATCH_PROJECT_ID NUMBER(8,0) null,
	UTILIZATION_BOOLEAN NUMBER(1,0) null, 
	constraint PK_BATCH_PROJ_UTIL_ID 
		primary key (BATCH_PROJ_UTIL_ID) USING INDEX TABLESPACE &&indexTableSpaceName
	)
;


CREATE TABLE  UTILIZATIONS(
	UTILIZATION_ID NUMBER(8,0) not null,
	UTILIZATION_TEXT VARCHAR2(250) null, 
	constraint PK_UTILIZATION_ID2 
		primary key (UTILIZATION_ID) USING INDEX TABLESPACE &&indexTableSpaceName
	)
;


CREATE TABLE  CMPD_MOL_UTILIZATIONS (
	CMPD_MOL_UTIL_ID NUMBER(8,0) not null,
	CPD_INTERNAL_ID NUMBER(8,0) null,
	UTILIZATION_ID NUMBER(8,0) null,
	LOAD_ID VARCHAR2(50) null,
	UTILIZATION_BOOLEAN NUMBER(1,0) null, 
	constraint PK_CMPD_MOL_UTIL_ID 
		primary key (CMPD_MOL_UTIL_ID) USING INDEX TABLESPACE &&indexTableSpaceName
	)
;



--#################

--SEQUENCES and TRIGGERS

--########################





--DROP SEQUENCE SEQ_COMMIT_TYPES;
CREATE SEQUENCE SEQ_COMMIT_TYPES INCREMENT BY 1 START WITH 1;  

-- Create table level triggers for table COMMIT_TYPES.
create or replace trigger TRG_COMMIT_TYPES
BEFORE INSERT ON COMMIT_TYPES
FOR EACH ROW

BEGIN
SELECT SEQ_COMMIT_TYPES.NEXTVAL INTO :NEW.COMMIT_TYPE_ID  FROM DUAL;
END;
/

 --DROP SEQUENCE SEQ_COMPOUND_TYPE;
CREATE SEQUENCE SEQ_COMPOUND_TYPE INCREMENT BY 1 START WITH 1;  

-- Create table level triggers for table COMPOUND_TYPE.
create or replace trigger TRG_COMPOUND_TYPE
BEFORE INSERT ON COMPOUND_TYPE
FOR EACH ROW

BEGIN
SELECT SEQ_COMPOUND_TYPE.NEXTVAL INTO :NEW.COMPOUND_TYPE  FROM DUAL;
END;
/

 --DROP SEQUENCE SEQ_COMPOUND_MOLECULE;
CREATE SEQUENCE SEQ_COMPOUND_MOLECULE INCREMENT BY 1 START WITH 1;  


-- Create table level triggers for table COMPOUND_MOLECULE.
create or replace trigger TRG_COMPOUND_MOLECULE
BEFORE INSERT ON COMPOUND_MOLECULE
FOR EACH ROW

BEGIN
SELECT SEQ_COMPOUND_MOLECULE.NEXTVAL INTO :NEW.CPD_DATABASE_COUNTER  FROM DUAL;
END;
/

--DROP SEQUENCE SEQ_PROJECTS;
CREATE SEQUENCE SEQ_PROJECTS INCREMENT BY 1 START WITH 1;  

-- Create table level triggers for table PROJECTS.
create or replace trigger TRG_PROJECTS
BEFORE INSERT  ON PROJECTS
FOR EACH ROW


BEGIN
    SELECT SEQ_PROJECTS.NEXTVAL INTO :NEW.PROJECT_INTERNAL_ID  FROM DUAL;
END;
/

--DROP SEQUENCE SEQ_EXPERIMENTS;
CREATE SEQUENCE SEQ_EXPERIMENTS INCREMENT BY 1 START WITH 1;  

-- Create table level triggers for table EXPERIMENTS.
create or replace trigger TRG_EXPERIMENT_ID
BEFORE INSERT ON EXPERIMENTS FOR EACH ROW

BEGIN
SELECT SEQ_EXPERIMENTS.NEXTVAL INTO :NEW.EXPERIMENT_ID FROM DUAL;
END;
/

  --DROP SEQUENCE SEQ_SALTS;
CREATE SEQUENCE SEQ_SALTS INCREMENT BY 1 START WITH 1;  

-- Create table level triggers for table SALTS.
create or replace trigger TRG_SALTS
BEFORE INSERT ON SALTS
FOR EACH ROW

BEGIN
   SELECT SEQ_SALTS.NEXTVAL INTO :NEW.SALT_CODE  FROM DUAL;
END;
/

  --DROP SEQUENCE SEQ_SOLVATES;
CREATE SEQUENCE SEQ_SOLVATES INCREMENT BY 1 START WITH 1;  

-- Create table level triggers for table SOLVATES.
create or replace trigger TRG_SOLVATES
BEFORE INSERT ON SOLVATES
FOR EACH ROW

BEGIN
   SELECT SEQ_SOLVATES.NEXTVAL INTO :NEW.SOLVATE_ID FROM DUAL;
END;
/

   --DROP SEQUENCE SEQ_ALT_IDS;
CREATE SEQUENCE SEQ_ALT_IDS INCREMENT BY 1 START WITH 1;  

-- Create table level triggers for table ALT_IDS.
create or replace trigger TRG_ALT_IDS

BEFORE INSERT ON ALT_IDS FOR EACH ROW

BEGIN
SELECT SEQ_ALT_IDS.NEXTVAL INTO :NEW.ID  FROM DUAL;
END;
/

--DROP SEQUENCE SEQ_RESULTS;
CREATE SEQUENCE SEQ_RESULTS INCREMENT BY 1 START WITH 1;

-- Create table level triggers for table RESULTS.
create or replace trigger TRG_RESULT_ID 
BEFORE INSERT ON RESULTS FOR EACH ROW

BEGIN
SELECT SEQ_RESULTS.NEXTVAL INTO :NEW.RESULT_ID FROM DUAL;
END;
/

 --DROP SEQUENCE SEQ_IDENTIFIERS;
CREATE SEQUENCE SEQ_IDENTIFIERS INCREMENT BY 1 START WITH 1;

-- Create table level triggers for table IDENTIFIERS.
create or replace trigger TRG_IDENTIFIERS
BEFORE INSERT ON IDENTIFIERS FOR EACH ROW

BEGIN
 SELECT SEQ_IDENTIFIERS.NEXTVAL INTO :NEW.ID  FROM DUAL;
END;
/

 --DROP SEQUENCE SEQ_SEQUENCE;
CREATE SEQUENCE SEQ_SEQUENCE INCREMENT BY 1 START WITH 1;
-- Create table level triggers for table SEQUENCE.
create or replace trigger TRG_SEQUENCE
BEFORE INSERT ON SEQUENCE
FOR EACH ROW
BEGIN
SELECT SEQ_SEQUENCE.NEXTVAL INTO :NEW.SEQUENCE_ID  FROM DUAL;
END;
/

--DROP SEQUENCE SEQ_BATCHES;
CREATE SEQUENCE SEQ_BATCHES INCREMENT BY 1 START WITH 1;

-- Create table level triggers for table BATCHES.

create or replace trigger TRG_BATCHES
BEFORE INSERT ON BATCHES
FOR EACH ROW
BEGIN
SELECT SEQ_BATCHES.NEXTVAL INTO :NEW.BATCH_INTERNAL_ID  FROM DUAL;
END;
/
  
--DROP SEQUENCE SEQ_EXPERIMENTTYPE;
CREATE SEQUENCE SEQ_EXPERIMENTTYPE INCREMENT BY 1 START WITH 1;

-- Create table level triggers for table EXPERIMENTTYPE.
create or replace trigger TRG_EXPERIMENT_TYPE_ID
BEFORE INSERT ON EXPERIMENTTYPE FOR EACH ROW
BEGIN
SELECT SEQ_EXPERIMENTTYPE.NEXTVAL INTO :NEW.EXPERIMENT_TYPE_ID  FROM DUAL;
END;
/

   --DROP SEQUENCE SEQ_TEMPORARY_STRUCTURES;
CREATE SEQUENCE SEQ_TEMPORARY_STRUCTURES INCREMENT BY 1 START WITH 1;

-- Create table level triggers for table TEMPORARY_STRUCTURES.
create or replace trigger TRG_TEMPORARY_STRUCTURES
BEFORE INSERT ON TEMPORARY_STRUCTURES
FOR EACH ROW
   BEGIN
    SELECT SEQ_TEMPORARY_STRUCTURES.NEXTVAL INTO :NEW.TEMP_COMPOUND_ID  FROM DUAL;
END;
/

--DROP SEQUENCE SEQ_PARAMETERTYPE;
CREATE SEQUENCE SEQ_PARAMETERTYPE INCREMENT BY 1 START WITH 1;


-- Create table level triggers for table PARAMETERTYPE.
create or replace trigger TRG_PARAMETER_TYPE_ID
BEFORE INSERT ON PARAMETERTYPE FOR EACH ROW

BEGIN
SELECT SEQ_PARAMETERTYPE.NEXTVAL INTO :NEW.PARAMETER_TYPE_ID  FROM DUAL;
END;
/

--DROP SEQUENCE SEQ_RESULTTYPE;
CREATE SEQUENCE SEQ_RESULTTYPE INCREMENT BY 1 START WITH 1;

-- Create table level triggers for table RESULTTYPE.
create or replace trigger TRG_RESULT_TYPE_ID 
BEFORE INSERT ON RESULTTYPE
FOR EACH ROW BEGIN
SELECT SEQ_RESULTTYPE.NEXTVAL INTO :NEW.RESULT_TYPE_ID FROM DUAL;
END;
/

--DROP SEQUENCE SEQ_COMPOUND_PROJECT;
CREATE SEQUENCE SEQ_COMPOUND_PROJECT INCREMENT BY 1 START WITH 1;

-- Create table level triggers for table COMPOUND_PROJECT.
create or replace trigger TRG_COMPOUND_PROJECT

BEFORE INSERT ON COMPOUND_PROJECT
FOR EACH ROW

BEGIN
   SELECT SEQ_COMPOUND_PROJECT.NEXTVAL INTO :NEW.COMP_PROJECT_ID  FROM DUAL;
END;
/

 --DROP SEQUENCE SEQ_NOTEBOOKS;
CREATE SEQUENCE SEQ_NOTEBOOKS INCREMENT BY 1 START WITH 1;

-- Create table level triggers for table NOTEBOOKS.
create or replace trigger TRG_NOTEBOOKS
BEFORE INSERT ON NOTEBOOKS
FOR EACH ROW
	
BEGIN
	SELECT SEQ_NOTEBOOKS.NEXTVAL
	INTO :NEW.NOTEBOOK_NUMBER
	FROM DUAL;
END;
/

 --DROP SEQUENCE SEQ_COMPOUND_SALT;
CREATE SEQUENCE SEQ_COMPOUND_SALT INCREMENT BY 1 START WITH 1;

-- Create table level triggers for table COMPOUND_SALT.
create or replace trigger TRG_COMPOUND_SALT
BEFORE INSERT ON COMPOUND_SALT FOR EACH ROW

BEGIN
 SELECT SEQ_COMPOUND_SALT.NEXTVAL INTO :NEW.COMPOUND_SALT_ID  FROM DUAL;
END;
/


--DROP SEQUENCE SEQ_REG_NUMBERS;
CREATE SEQUENCE SEQ_REG_NUMBERS INCREMENT BY 1 START WITH 1;


-- Create table level triggers for table REG_NUMBERS.
create or replace trigger TRG_REG_NUMBERS
BEFORE INSERT ON REG_NUMBERS
FOR EACH ROW

BEGIN
    SELECT SEQ_REG_NUMBERS.NEXTVAL INTO :NEW.REG_ID  FROM DUAL;
END;
/

--DROP SEQUENCE SEQ_PARAMETERS;
CREATE SEQUENCE SEQ_PARAMETERS INCREMENT BY 1 START WITH 1;

-- Create table level triggers for table PARAMETERS.
create or replace trigger PARAMETER_ID_TRIG
BEFORE INSERT ON PARAMETERS FOR EACH ROW

BEGIN
SELECT SEQ_PARAMETERS.NEXTVAL INTO :NEW.PARAMETER_ID  FROM DUAL;
END;
/


--DROP SEQUENCE SEQ_BATCH_PROJECTS;
CREATE SEQUENCE SEQ_BATCH_PROJECTS INCREMENT BY 1 START WITH 1;  

-- Create table level triggers for table BATCH_PROJECTS .
create or replace trigger TRG_BATCH_PROJECTS 
BEFORE INSERT ON BATCH_PROJECTS 
FOR EACH ROW

BEGIN
SELECT SEQ_BATCH_PROJECTS.NEXTVAL INTO :NEW.BATCH_PROJECT_ID FROM DUAL;
END;
/

--DROP SEQUENCE SEQ_UTILIZATIONS;
CREATE SEQUENCE SEQ_UTILIZATIONS INCREMENT BY 1 START WITH 1;  

-- Create table level triggers for table UTILIZATIONS.
create or replace trigger TRG_UTILIZATIONS
BEFORE INSERT ON UTILIZATIONS
FOR EACH ROW

BEGIN
SELECT SEQ_UTILIZATIONS.NEXTVAL INTO :NEW.UTILIZATION_ID FROM DUAL;
END;
/

--DROP SEQUENCE SEQ_BATCH_PROJ_UTIL;
CREATE SEQUENCE SEQ_BATCH_PROJ_UTIL INCREMENT BY 1 START WITH 1;  

-- Create table level triggers for table BATCH_PROJ_UTILIZATIONS.
create or replace trigger TRG_BATCH_PROJ_UTILIZATIONS
BEFORE INSERT ON BATCH_PROJ_UTILIZATIONS
FOR EACH ROW

BEGIN
SELECT SEQ_BATCH_PROJ_UTIL.NEXTVAL INTO :NEW.BATCH_PROJ_UTIL_ID FROM DUAL;
END;
/


--DROP SEQUENCE SEQ_CMPD_MOL_UTIL;
CREATE SEQUENCE SEQ_CMPD_MOL_UTIL INCREMENT BY 1 START WITH 1;  

-- Create table level triggers for table CMPD_MOL_UTILIZATIONS.
create or replace trigger TRG_CMPD_MOL_UTILIZATIONS 
BEFORE INSERT ON CMPD_MOL_UTILIZATIONS 
FOR EACH ROW

BEGIN
SELECT SEQ_CMPD_MOL_UTIL.NEXTVAL INTO :NEW.CMPD_MOL_UTIL_ID FROM DUAL;
END;
/

--#########################################################
--INDEXES
--#########################################################


--DROP INDEX INDEX_RES_RESULT_EXP_ID ;
create index INDEX_RES_RESULT_EXP_ID on RESULTS (
	RESULT_EXPERIMENT_ID ASC)  TABLESPACE &&indexTableSpaceName;
 


--DROP INDEX INDEX_RES_RESULT_TYPE;
create index INDEX_RES_RESULT_TYPE on RESULTS (
	RESULT_TYPE_ID ASC)  TABLESPACE &&indexTableSpaceName; 


--DROP INDEX INDEX_PAR_PAR_EXP_ID;
create index INDEX_PAR_PAR_EXP_ID on PARAMETERS (
	PARAMETER_EXPERIMENT_ID ASC)  TABLESPACE &&indexTableSpaceName; 


--DROP INDEX INDEX_PAR_PAR_TYPE;
create index INDEX_PAR_PAR_TYPE on PARAMETERS (
	PARAMETER_TYPE_ID ASC)  TABLESPACE &&indexTableSpaceName; 



--DROP INDEX INDEX_EXPTYRES_RESULT_ID;
create index INDEX_EXPTYRES_RESULT_ID on EXPERIMENTTYPERESULTS (
	RESULT_TYPE_ID ASC)  TABLESPACE &&indexTableSpaceName; 

--DROP INDEX INDEX_EXPPAR_PAR_TYPE;
create index INDEX_EXPPAR_PAR_TYPE on EXPERIMENTTYPEPARAMETERS (
	PARAMETER_TYPE_ID ASC)  TABLESPACE &&indexTableSpaceName; 

--DROP INDEX INDEX_EXP_BATCHID;
create index INDEX_EXP_BATCHID on EXPERIMENTS (
	EXPERIMENT_BATCH_ID ASC)  TABLESPACE &&indexTableSpaceName; 

--DROP INDEX INDEX_TEMPSTRUC_CPD_INT_ID;
create index INDEX_TEMPSTRUC_CPD_INT_ID on TEMPORARY_STRUCTURES (
	CPD_INTERNAL_ID ASC)  TABLESPACE &&indexTableSpaceName;

--DROP INDEX INDEX_TEMPSTRUC_ENT_PERSON_ID;
create index INDEX_TEMPSTRUC_ENT_PERSON_ID on TEMPORARY_STRUCTURES (
	ENTRY_PERSON_ID ASC)  TABLESPACE &&indexTableSpaceName;

--DROP INDEX INDEX_TEMPSTRUC_SEQ;
create index INDEX_TEMPSTRUC_SEQ on TEMPORARY_STRUCTURES (
	SEQUENCE_ID ASC)  TABLESPACE &&indexTableSpaceName;


--DROP INDEX INDEX_TEMPSTRUC_CHEM_NAME;
create index INDEX_TEMPSTRUC_CHEM_NAME on TEMPORARY_STRUCTURES (
	CHEMICAL_NAME ASC)  TABLESPACE &&indexTableSpaceName;


--DROP INDEX INDEX_SEQ_PREFIX;
create index INDEX_SEQ_PREFIX on SEQUENCE (
	PREFIX ASC)  TABLESPACE &&indexTableSpaceName;

--DROP INDEX INDEX_REGNUM_CPD_INT_ID;
create index INDEX_REGNUM_CPD_INT_ID on REG_NUMBERS (
	CPD_INTERNAL_ID ASC)  TABLESPACE &&indexTableSpaceName;

--DROP INDEX INDEX_REGNUM_LAST_BATCH_NUM;
create index INDEX_REGNUM_LAST_BATCH_NUM on REG_NUMBERS (
	LAST_BATCH_NUMBER ASC)  TABLESPACE &&indexTableSpaceName;

--DROP INDEX INDEX_REGNUM_MOL_ID;
create index INDEX_REGNUM_MOL_ID on REG_NUMBERS (
	MOL_ID ASC)  TABLESPACE &&indexTableSpaceName;

--DROP INDEX INDEX_REGNUM_ROOT_NUMBER;
create index INDEX_REGNUM_ROOT_NUMBER on REG_NUMBERS (
	ROOT_NUMBER ASC)  TABLESPACE &&indexTableSpaceName;

--DROP INDEX INDEX_STRUCTURES_MOLID;
create index INDEX_STRUCTURES_MOLID on STRUCTURES(
	MOL_ID ASC)  TABLESPACE &&indexTableSpaceName;


--DROP INDEX INDEX_REG_APP_REG_INT_ID;
create index INDEX_REG_APP_REG_INT_ID on REG_APPROVED (
	REG_INTERNAL_ID ASC)  TABLESPACE &&indexTableSpaceName;


--DROP INDEX INDEX_NOTEBOOKS_USER_CODE;
create index INDEX_NOTEBOOKS_USER_CODE on NOTEBOOKS (
	USER_CODE ASC)  TABLESPACE &&indexTableSpaceName;

--DROP INDEX INDEX_IDENT_IDENT_DESC;
create index INDEX_IDENT_IDENT_DESC on IDENTIFIERS (
	IDENTIFIER_DESCRIPTOR ASC)  TABLESPACE &&indexTableSpaceName;


--DROP INDEX INDEX_CMPDSALT_CMPD_ID;
create index INDEX_CMPDSALT_CMPD_ID on COMPOUND_SALT (
	CPD_INTERNAL_ID ASC)  TABLESPACE &&indexTableSpaceName;

--DROP INDEX INDEX_CMPDSALT_MOL_ID;
create index INDEX_CMPDSALT_MOL_ID on COMPOUND_SALT (
	MOL_ID ASC)  TABLESPACE &&indexTableSpaceName;

--DROP INDEX INDEX_CMPDSALT_REG_INT_ID;
create index INDEX_CMPDSALT_REG_INT_ID on COMPOUND_SALT (
	REG_INTERNAL_ID ASC)  TABLESPACE &&indexTableSpaceName;

--DROP INDEX INDEX_CMPDSALT_SALT_ID ;
create index INDEX_CMPDSALT_SALT_ID on COMPOUND_SALT (
	SALT_INTERNAL_ID ASC)  TABLESPACE &&indexTableSpaceName;

--DROP INDEX INDEX_CMPDPROJ_CPD_INT_ID ;
create index INDEX_CMPDPROJ_CPD_INT_ID on COMPOUND_PROJECT (
	CPD_INTERNAL_ID ASC)  TABLESPACE &&indexTableSpaceName;

--DROP INDEX INDEX_CMPDPROJ_PROJ_INT_ID;
create index INDEX_CMPDPROJ_PROJ_INT_ID on COMPOUND_PROJECT (
	PROJECT_INTERNAL_ID ASC)  TABLESPACE &&indexTableSpaceName;

--DROP INDEX INDEX_CMPDMOL_MOL_ID ;
create index INDEX_CMPDMOL_MOL_ID on COMPOUND_MOLECULE (
	MOL_ID ASC)  TABLESPACE &&indexTableSpaceName;

--DROP INDEX INDEX_CMPDMOL_ROOT_NUM;
create index INDEX_CMPDMOL_ROOT_NUM on COMPOUND_MOLECULE (
	ROOT_NUMBER ASC)  TABLESPACE &&indexTableSpaceName;

--DROP INDEX INDEX_CMPDMOL_SEQ_INT ;
create index INDEX_CMPDMOL_SEQ_INT on COMPOUND_MOLECULE (
	SEQUENCE_INTERNAL_ID ASC)  TABLESPACE &&indexTableSpaceName;

--DROP INDEX INDEX_BAT_BATCH_NUMBER;
create index INDEX_BAT_BATCH_NUMBER on BATCHES (
	BATCH_NUMBER ASC)  TABLESPACE &&indexTableSpaceName;

--DROP INDEX INDEX_BAT_MOL_ID;
create index INDEX_BAT_MOL_ID on BATCHES (
	MOL_ID ASC)  TABLESPACE &&indexTableSpaceName;

--DROP INDEX INDEDX_BAT_SALT_CODE ;
create index INDEDX_BAT_SALT_CODE  on BATCHES (
	SALT_INTERNAL_ID ASC)  TABLESPACE &&indexTableSpaceName;

--DROP INDEX INDEX_ALT_IDENTIFIER;
create index INDEX_ALT_IDENTIFIER on ALT_IDS (
	IDENTIFIER ASC)  TABLESPACE &&indexTableSpaceName;


--DROP INDEX INDEX_ALT_IDENTIFIER_TYPE;
create index INDEX_ALT_IDENTIFIER_TYPE on ALT_IDS (
	IDENTIFIER_TYPE ASC)  TABLESPACE &&indexTableSpaceName;


--DROP INDEX INDEX_ALT_REG_ID;
create index INDEX_ALT_REG_ID on ALT_IDS (
	REG_INTERNAL_ID ASC)  TABLESPACE &&indexTableSpaceName;


--#########################################################
--CONSTRAINTS
--#########################################################


alter table RESULTS
	add constraint RESULTEXPER foreign key (
		RESULT_EXPERIMENT_ID)
	 references EXPERIMENTS (
		EXPERIMENT_ID); 

alter table RESULTS
	add constraint RESULTTYPERESULT foreign key (
		RESULT_TYPE_ID)
	 references RESULTTYPE (
		RESULT_TYPE_ID); 

alter table PARAMETERS
	add constraint PAREMEXPER foreign key (
		PARAMETER_EXPERIMENT_ID)
	 references EXPERIMENTS (
		EXPERIMENT_ID); 

alter table PARAMETERS
	add constraint PARAMTYPEPARAM foreign key (
		PARAMETER_TYPE_ID)
	 references PARAMETERTYPE (
		PARAMETER_TYPE_ID); 

alter table EXPERIMENTTYPERESULTS
	add constraint EXPERIMENTTY foreign key (
		EXPERIMENT_TYPE_ID)
	 references EXPERIMENTTYPE (
		EXPERIMENT_TYPE_ID); 

alter table EXPERIMENTTYPERESULTS
	add constraint RESULTTYPEEXPRES foreign key (
		RESULT_TYPE_ID)
	 references RESULTTYPE (
		RESULT_TYPE_ID); 

alter table EXPERIMENTTYPEPARAMETERS
	add constraint EXPERIMENTTYPEEXTYPAR foreign key (
		EXPERIMENT_TYPE_ID)
	 references EXPERIMENTTYPE (
		EXPERIMENT_TYPE_ID); 

alter table EXPERIMENTTYPEPARAMETERS
	add constraint PARAMETERTYPEEXPTYPAR foreign key (
		PARAMETER_TYPE_ID)
	 references PARAMETERTYPE (
		PARAMETER_TYPE_ID); 

alter table EXPERIMENTS
	add constraint EXPERIMENTTYPEEXPERIMENTS foreign key (
		EXPERIMENT_TYPE_ID)
	 references EXPERIMENTTYPE (
		EXPERIMENT_TYPE_ID); 

alter table TEST_SAMPLES
	add constraint COMPOUND_BATCHTEST_SAMPLES foreign key (
		BATCH_INTERNAL_ID)
	 references BATCHES (
		BATCH_INTERNAL_ID); 

alter table TEMPORARY_STRUCTURES
	add constraint PROJECTSTEMPORARY_STRUCTUR foreign key (
		PROJECT_ID)
	 references PROJECTS (
		PROJECT_INTERNAL_ID); 

alter table TEMPORARY_STRUCTURES
	add constraint SEQUENCETEMPORARY_STRUCTUR foreign key (
		SEQUENCE_ID)
	 references SEQUENCE (
		SEQUENCE_ID); 

alter table STRUCTURE_MIXTURE
	add constraint MIXTURESSTRUCTURE_MIXTURE foreign key (
		MIX_INTERNAL_ID)
	 references MIXTURES (
		MIX_INTERNAL_ID); 

alter table REG_NUMBERS
	add constraint COMPOUND_MOLECULEREG_NUMBE foreign key (
		CPD_INTERNAL_ID)
	 references COMPOUND_MOLECULE (
		CPD_DATABASE_COUNTER); 

alter table DUPLICATES
	add constraint COMPOUND_MOLECULEDUPLICATE foreign key (
		COMPOUND_ID)
	 references COMPOUND_MOLECULE (
		CPD_DATABASE_COUNTER); 

alter table COMPOUND_SALT
	add constraint COMPOUND_MOLECULECOMPOUND_2793 foreign key (
		CPD_INTERNAL_ID)
	 references COMPOUND_MOLECULE (
		CPD_DATABASE_COUNTER); 

alter table COMPOUND_SALT
	add constraint SALTSCOMPOUND_SALT foreign key (
		SALT_INTERNAL_ID)
	 references SALTS (
		SALT_CODE); 

alter table COMPOUND_PROJECT
	add constraint COMPOUND_MOLECULECOMPOUND_ foreign key (
		CPD_INTERNAL_ID)
	 references COMPOUND_MOLECULE (
		CPD_DATABASE_COUNTER); 

alter table COMPOUND_PROJECT
	add constraint PROJECTSCOMPOUND_PROJECT foreign key (
		PROJECT_INTERNAL_ID)
	 references PROJECTS (
		PROJECT_INTERNAL_ID);

alter table COMPOUND_MOLECULE
	add constraint COMPOUND_TYPECOMPOUND_MOLE foreign key (
		COMPOUND_TYPE)
	 references COMPOUND_TYPE (
		COMPOUND_TYPE); 

alter table COMPOUND_MOLECULE
	add constraint SEQUENCECOMPOUND_MOLECULE foreign key (
		SEQUENCE_INTERNAL_ID)
	 references SEQUENCE (
		SEQUENCE_ID); 

alter table BATCHES
	add constraint NOTEBOOKSBATCHES foreign key (
		NOTEBOOK_INTERNAL_ID)
	 references NOTEBOOKS (
		NOTEBOOK_NUMBER); 

alter table BATCHES
	add constraint REG_NUMBERSBATCHES foreign key (
		REG_INTERNAL_ID)
	 references REG_NUMBERS (
		REG_ID); 

alter table BATCHES
	add constraint SALTSBATCHES foreign key (
		SALT_INTERNAL_ID)
	 references SALTS (
		SALT_CODE); 



alter table ALT_IDS
	add constraint REG_NUMBERSALT_IDS foreign key (
		REG_INTERNAL_ID)
	 references REG_NUMBERS (
		REG_ID); 


Connect &&schemaName/&&schemaPass@&&serverName

--#########################################################
--ADD STARTING DATA
--#########################################################

--NOTEBOOKS


--DELETE  FROM NOTEBOOKS;
INSERT INTO NOTEBOOKS(NOTEBOOK_NUMBER,NOTEBOOK_NAME,USER_CODE,ACTIVE)values('1', 'unspecified','1','1');



--SEQUENCES

INSERT INTO SEQUENCE(SEQUENCE_ID,PREFIX,NEXT_IN_SEQUENCE,ACTIVE)values('1', 'AB','1','1');




--COMPOUND_TYPE

INSERT INTO COMPOUND_TYPE(COMPOUND_TYPE,DESCRIPTION,ACTIVE)values('1','no_comment', '1');
INSERT INTO COMPOUND_TYPE(COMPOUND_TYPE,DESCRIPTION,ACTIVE)values('2','no_structure', '1');


--SALTS



INSERT INTO SALTS(SALT_CODE,SALT_NAME,SALT_MW,ACTIVE)values('1','no_salt','0','1');


--SOLVATES



INSERT INTO SOLVATES(SOLVATE_ID,SOLVATE_NAME,SOLVATE_MW,ACTIVE)values('1','no_solvate','0','1');

--PROJECTS


INSERT INTO PROJECTS(PROJECT_INTERNAL_ID,PROJECT_NAME,ACTIVE)values('1','unspecified','1');

--BATCH_PROJECTS


INSERT INTO BATCH_PROJECTS(BATCH_PROJECT_ID,PROJECT_NAME,ACTIVE)values('1','unspecified','1');


--IDENTIFIERS


INSERT INTO IDENTIFIERS(ID,IDENTIFIER_TYPE,IDENTIFIER_DESCRIPTOR)values('1','0','Chemical_Name');
INSERT INTO IDENTIFIERS(ID,IDENTIFIER_TYPE,IDENTIFIER_DESCRIPTOR)values('2','1','CAS_Number');
INSERT INTO IDENTIFIERS(ID,IDENTIFIER_TYPE,IDENTIFIER_DESCRIPTOR)values('3','2','Synonym_r');
INSERT INTO IDENTIFIERS(ID,IDENTIFIER_TYPE,IDENTIFIER_DESCRIPTOR)values('4','3','RNO_Number');
INSERT INTO IDENTIFIERS(ID,IDENTIFIER_TYPE,IDENTIFIER_DESCRIPTOR)values('5','4','FEMA_GRAS_Number');
INSERT INTO IDENTIFIERS(ID,IDENTIFIER_TYPE,IDENTIFIER_DESCRIPTOR)values('6','5','Group_Code');
INSERT INTO IDENTIFIERS(ID,IDENTIFIER_TYPE,IDENTIFIER_DESCRIPTOR)values('7','6','Chem_Name_Autogen');
INSERT INTO IDENTIFIERS(ID,IDENTIFIER_TYPE,IDENTIFIER_DESCRIPTOR)values('8','7','Collaborator_ID');

--COMMIT_TYPES

INSERT INTO COMMIT_TYPES(COMMIT_TYPE_ID, TASK_NAME)values('0','FULL_COMMIT');
INSERT INTO COMMIT_TYPES(COMMIT_TYPE_ID, TASK_NAME)values('1','BATCH_COMMIT');
INSERT INTO COMMIT_TYPES(COMMIT_TYPE_ID, TASK_NAME)values('2','EDIT_TEMP');
INSERT INTO COMMIT_TYPES(COMMIT_TYPE_ID, TASK_NAME)values('3','EDIT_TEMP_STRUCTURE');
INSERT INTO COMMIT_TYPES(COMMIT_TYPE_ID, TASK_NAME)values('4','ADD_IDENTIFIERS');
INSERT INTO COMMIT_TYPES(COMMIT_TYPE_ID, TASK_NAME)values('5','ADD_SALT');


--test data for standard analytics tables






--RESULTTYPE

INSERT INTO RESULTTYPE(result_type_id,result_type_name,result_type_description,result_type_units)values('1','Solubility','Standard Solubility Experiment','Kg/l');
INSERT INTO RESULTTYPE(result_type_id,result_type_name,result_type_description,result_type_units)values('2','Specific Rotation','Optical Rotation Measurement','Deg');
INSERT INTO RESULTTYPE(result_type_id,result_type_name,result_type_description,result_type_units)values('3','Analytics','Analytical Reference Numbers','');

--EXPERIMENTTYPE

INSERT INTO EXPERIMENTTYPE(experiment_type_id,experiment_type_name,experiment_type_description,experiment_type_created,experiment_type_modified,experiment_type_version)values('1','Solubility','Measurement of solubility using standard methods',TO_DATE('01-12-2000','DD-MM-YYYY'),TO_DATE('01-12-2000','DD-MM-YYYY'),'1');
INSERT INTO EXPERIMENTTYPE(experiment_type_id,experiment_type_name,experiment_type_description,experiment_type_created,experiment_type_modified,experiment_type_version)values('2','Optical Rotation','Measurement of optical rotation using standard methods.',TO_DATE('01-12-2000','DD-MM-YYYY'),TO_DATE('01-12-2000','DD-MM-YYYY'),'1');
INSERT INTO EXPERIMENTTYPE(experiment_type_id,experiment_type_name,experiment_type_description,experiment_type_created,experiment_type_modified,experiment_type_version)values('3','1H NMR','Proton NMR.',TO_DATE('01-12-2000','DD-MM-YYYY'),TO_DATE('01-12-2000','DD-MM-YYYY'),'1');

--PARAMETERTYPE

INSERT INTO PARAMETERTYPE(parameter_type_id,parameter_type_name,parameter_type_description,parameter_type_units)values('1','Temperature','Temperature of the experiment','Deg C');
INSERT INTO PARAMETERTYPE(parameter_type_id,parameter_type_name,parameter_type_description,parameter_type_units)values('2','Pressure','Atmospheric pressure for the of the experiment','Atm');
INSERT INTO PARAMETERTYPE(parameter_type_id,parameter_type_name,parameter_type_description,parameter_type_units)values('3','Solvent','Solvent','');
INSERT INTO PARAMETERTYPE(parameter_type_id,parameter_type_name,parameter_type_description,parameter_type_units)values('4','Wavelength','Wavelength of Radiation used','nm');
INSERT INTO PARAMETERTYPE(parameter_type_id,parameter_type_name,parameter_type_description,parameter_type_units)values('5','Concentration','Concentration of compound','g/l');

--EXPERIMENTTYPERESULTS
INSERT INTO EXPERIMENTTYPERESULTS(experiment_type_id,result_type_id)values('1','1');
INSERT INTO EXPERIMENTTYPERESULTS(experiment_type_id,result_type_id)values('2','2');
INSERT INTO EXPERIMENTTYPERESULTS(experiment_type_id,result_type_id)values('3','3');

--EXPERIMENTTYPEPARAMETERS
INSERT INTO EXPERIMENTTYPEPARAMETERS(experiment_type_id,parameter_type_id)values('1','1');
INSERT INTO EXPERIMENTTYPEPARAMETERS(experiment_type_id,parameter_type_id)values('1','2');
INSERT INTO EXPERIMENTTYPEPARAMETERS(experiment_type_id,parameter_type_id)values('1','3');
INSERT INTO EXPERIMENTTYPEPARAMETERS(experiment_type_id,parameter_type_id)values('2','1');
INSERT INTO EXPERIMENTTYPEPARAMETERS(experiment_type_id,parameter_type_id)values('2','3');
INSERT INTO EXPERIMENTTYPEPARAMETERS(experiment_type_id,parameter_type_id)values('2','4');
INSERT INTO EXPERIMENTTYPEPARAMETERS(experiment_type_id,parameter_type_id)values('2','5');


commit;
