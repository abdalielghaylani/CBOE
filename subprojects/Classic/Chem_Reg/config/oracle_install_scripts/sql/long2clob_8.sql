--Copyright 1999-2004 CambridgeSoft Corporation. All rights reserved

-- Migrate STRUCTURES.BASE64_CDX and TEMPORARY_STRUCTURES.BASE64_CDX
-- from LONG to CLOB columns using Oracle 8i strategy.

prompt 'converting structure fields to CLOB...'


-- 1. Create a table to copy into while moving lobs
CREATE TABLE  STRUCTURES2 (
	CPD_INTERNAL_ID NUMBER(8,0) not null,
	BASE64_CDX CLOB null,
	MOL_ID NUMBER(8,0) null,
	LOAD_ID VARCHAR2(50) null,
	DATETIME_STAMP VARCHAR2(30) null)
	LOB (BASE64_CDX) STORE AS(
		DISABLE STORAGE IN ROW NOCACHE CHUNK 2K PCTVERSION 10
		TABLESPACE &&lobsTableSpaceName
		STORAGE (INITIAL &&lobB64cdx NEXT &&lobB64cdx)
	)
	tableSpace &&tableSpaceName STORAGE(INITIAL 1K PCTINCREASE 0);

CREATE TABLE  TEMPORARY_STRUCTURES2 (
	TEMP_COMPOUND_ID NUMBER(8,0) not null,
	COMMIT_TYPE VARCHAR2(50) null,
	REG_INTERNAL_ID VARCHAR2(50) null,
	CPD_INTERNAL_ID NUMBER(8,0) null,
	PRODUCER VARCHAR2(120) null,
	NOTEBOOK_PAGE VARCHAR2(50) null,
	NOTEBOOK_TEXT VARCHAR2(500) null,
	NOTEBOOK_NUMBER NUMBER(8,0) null,
	PROJECT_ID NUMBER(8,0) null,
	MOL_ID NUMBER(8,0) null,
	BATCH_COMMENT VARCHAR2(500) null,
	CHEMICAL_NAME VARCHAR2(500) null,
	CHEM_NAME_AUTOGEN VARCHAR2(500) null,
	SYNONYM_R VARCHAR2(500) null,
	LIT_REF VARCHAR2(2000) null,
	PREPARATION VARCHAR2(2000) null,
	STORAGE_REQ_AND_WARNINGS VARCHAR2(2000) null,
	SEQUENCE_ID NUMBER(8,0) null,
	SPECTRUM_ID NUMBER(8,0) null,
	CAS_NUMBER VARCHAR2(50) null,
	RNO_NUMBER VARCHAR2(50) null,
	FEMA_GRAS_NUMBER VARCHAR2(50) null,
	GROUP_CODE VARCHAR2(50) null,
	SCIENTIST_ID NUMBER(8,0) null,
	BP VARCHAR2(200) null,
	MP VARCHAR2(200) null,
	H1NMR VARCHAR2(200) null,
	C13NMR VARCHAR2(200) null,
	MS VARCHAR2(200) null,
	IR VARCHAR2(200) null,
	GC VARCHAR2(200) null,
	PHYSICAL_FORM VARCHAR2(200) null,
	COLOR VARCHAR2(200) null,
	FLASHPOINT VARCHAR2(200) null,
	HPLC VARCHAR2(200) null,
	OPTICAL_ROTATION VARCHAR2(200) null,
	REFRACTIVE_INDEX VARCHAR2(50) null,
	CREATION_DATE DATE null,
	COMPOUND_TYPE NUMBER(8,0) null,
	STRUCTURE_COMMENTS_TXT VARCHAR2(200) null,
	ENTRY_DATE DATE null,
	LAST_MOD_DATE DATE null,
	SALT_CODE NUMBER(8,0) null,
	SALT_NAME VARCHAR2(200) null,
	SALT_MW NUMBER(10,5) null,
	SALT_EQUIVALENTS NUMBER(10,5) null,
	SOLVATE_ID NUMBER(8,0) null,
	SOLVATE_NAME VARCHAR2(200) null,
	SOLVATE_MW NUMBER(10,5) null,
	SOLVATE_EQUIVALENTS NUMBER(10,5) null,
	FORMULA_WEIGHT NUMBER(10,5) null,
	BATCH_FORMULA VARCHAR2(250) null,
	BATCH_PROJECT_ID NUMBER(8,0) null,
	SOURCE VARCHAR2(200) null,
	VENDOR_NAME VARCHAR2(200) null,
	VENDOR_ID  VARCHAR2(100) null,
	PERCENT_ACTIVE NUMBER(10,5) null,
	AMOUNT_UNITS VARCHAR2(100) null,
	PURITY VARCHAR2(200) null,
	LC_UV_MS VARCHAR2(200) null,
	CHN_COMBUSTION VARCHAR2(200) null,
	UV_SPECTRUM VARCHAR2(200) null,
	APPEARANCE VARCHAR2(200) null,
	LogD NUMBER (38,8) null,
	SOLUBILITY VARCHAR2(200) null,
	COLLABORATOR_ID VARCHAR2(200)null,
	PRODUCT_TYPE VARCHAR2(100)null,
	CHIRAL VARCHAR2 (200) null,
	CLogP NUMBER (38,8) null,
	H_BOND_DONORS NUMBER (38,0) null,
	H_BOND_ACCEPTORS NUMBER (38,0) null,
	BASE64_CDX CLOB null,
	LAST_MOD_PERSON_ID NUMBER(8,0) null,
	ENTRY_PERSON_ID NUMBER(8,0) null,
	MW_TEXT VARCHAR2(200) null,
	MF_TEXT VARCHAR2(500) null,
	MW NUMBER(10,5) null,
	MW2 NUMBER(10,5) null,
	FORMULA2 VARCHAR2(500) null,
	AMOUNT VARCHAR2(50) null,
	DUPLICATE VARCHAR2(500) null,
	FIELD_1 VARCHAR2(2000) null,
	FIELD_2 VARCHAR2(2000) null,
	FIELD_3 VARCHAR2(2000) null,
	FIELD_4 VARCHAR2(2000) null,
	FIELD_5 VARCHAR2(2000) null,
	FIELD_6 VARCHAR2(2000) null,
	FIELD_7 VARCHAR2(2000) null,
	FIELD_8 VARCHAR2(2000) null,
	FIELD_9 VARCHAR2(2000) null,
	FIELD_10 VARCHAR2(2000) null,
	LOAD_ID VARCHAR2(50) null,
	DATETIME_STAMP VARCHAR2(30) null)
	LOB (BASE64_CDX) STORE AS(
		DISABLE STORAGE IN ROW NOCACHE CHUNK 2K PCTVERSION 10
		TABLESPACE &&lobsTableSpaceName
		STORAGE (INITIAL &&lobB64cdx NEXT &&lobB64cdx)
	)
	tableSpace &&tableSpaceName STORAGE(INITIAL 1K PCTINCREASE 0);


-- 2. Convert the data using direct-path insert and to_lob() conversion
insert into /*+ append */ structures2
	(CPD_INTERNAL_ID,MOL_ID,LOAD_ID,DATETIME_STAMP,BASE64_CDX)
		select CPD_INTERNAL_ID,MOL_ID,LOAD_ID,DATETIME_STAMP,to_lob(BASE64_CDX)
			from structures;
insert into /*+ append */ TEMPORARY_STRUCTURES2
	(TEMP_COMPOUND_ID, COMMIT_TYPE, REG_INTERNAL_ID, CPD_INTERNAL_ID, PRODUCER, NOTEBOOK_PAGE, NOTEBOOK_TEXT, NOTEBOOK_NUMBER, PROJECT_ID, MOL_ID, BATCH_COMMENT, CHEMICAL_NAME, CHEM_NAME_AUTOGEN, SYNONYM_R, LIT_REF, PREPARATION, STORAGE_REQ_AND_WARNINGS, SEQUENCE_ID, SPECTRUM_ID, CAS_NUMBER, RNO_NUMBER, FEMA_GRAS_NUMBER, GROUP_CODE, SCIENTIST_ID, BP, MP, H1NMR, C13NMR, MS, IR, GC, PHYSICAL_FORM, COLOR, FLASHPOINT, HPLC, OPTICAL_ROTATION, REFRACTIVE_INDEX, CREATION_DATE, COMPOUND_TYPE, STRUCTURE_COMMENTS_TXT, ENTRY_DATE, LAST_MOD_DATE, SALT_CODE, SALT_NAME, SALT_MW, SALT_EQUIVALENTS, SOLVATE_ID, SOLVATE_NAME, SOLVATE_MW, SOLVATE_EQUIVALENTS, FORMULA_WEIGHT, BATCH_FORMULA, BATCH_PROJECT_ID, SOURCE, VENDOR_NAME, VENDOR_ID, PERCENT_ACTIVE, AMOUNT_UNITS, PURITY, LC_UV_MS, CHN_COMBUSTION, UV_SPECTRUM, APPEARANCE, LOGD, SOLUBILITY, COLLABORATOR_ID, PRODUCT_TYPE, CHIRAL, CLOGP, H_BOND_DONORS, H_BOND_ACCEPTORS, BASE64_CDX, LAST_MOD_PERSON_ID, ENTRY_PERSON_ID, MW_TEXT, MF_TEXT, MW, MW2, FORMULA2, AMOUNT, DUPLICATE, FIELD_1, FIELD_2, FIELD_3, FIELD_4, FIELD_5, FIELD_6, FIELD_7, FIELD_8, FIELD_9, FIELD_10, LOAD_ID, DATETIME_STAMP)
	select TEMP_COMPOUND_ID, COMMIT_TYPE, REG_INTERNAL_ID, CPD_INTERNAL_ID, PRODUCER, NOTEBOOK_PAGE, NOTEBOOK_TEXT, NOTEBOOK_NUMBER, PROJECT_ID, MOL_ID, BATCH_COMMENT, CHEMICAL_NAME, CHEM_NAME_AUTOGEN, SYNONYM_R, LIT_REF, PREPARATION, STORAGE_REQ_AND_WARNINGS, SEQUENCE_ID, SPECTRUM_ID, CAS_NUMBER, RNO_NUMBER, FEMA_GRAS_NUMBER, GROUP_CODE, SCIENTIST_ID, BP, MP, H1NMR, C13NMR, MS, IR, GC, PHYSICAL_FORM, COLOR, FLASHPOINT, HPLC, OPTICAL_ROTATION, REFRACTIVE_INDEX, CREATION_DATE, COMPOUND_TYPE, STRUCTURE_COMMENTS_TXT, ENTRY_DATE, LAST_MOD_DATE, SALT_CODE, SALT_NAME, SALT_MW, SALT_EQUIVALENTS, SOLVATE_ID, SOLVATE_NAME, SOLVATE_MW, SOLVATE_EQUIVALENTS, FORMULA_WEIGHT, BATCH_FORMULA, BATCH_PROJECT_ID, SOURCE, VENDOR_NAME, VENDOR_ID, PERCENT_ACTIVE, AMOUNT_UNITS, PURITY, LC_UV_MS, CHN_COMBUSTION, UV_SPECTRUM, APPEARANCE, LOGD, SOLUBILITY, COLLABORATOR_ID, PRODUCT_TYPE, CHIRAL, CLOGP, H_BOND_DONORS, H_BOND_ACCEPTORS, to_lob(BASE64_CDX), LAST_MOD_PERSON_ID, ENTRY_PERSON_ID, MW_TEXT, MF_TEXT, MW, MW2, FORMULA2, AMOUNT, DUPLICATE, FIELD_1, FIELD_2, FIELD_3, FIELD_4, FIELD_5, FIELD_6, FIELD_7, FIELD_8, FIELD_9, FIELD_10, LOAD_ID, DATETIME_STAMP
			from TEMPORARY_STRUCTURES;


-- 3. drop/rename
drop table structures;
rename structures2 to structures;
drop table temporary_structures;
rename temporary_structures2 to temporary_structures;



-- 4. Recreate indexes and constraints


create index INDEX_TEMPSTRUC_CPD_INT_ID on TEMPORARY_STRUCTURES (CPD_INTERNAL_ID ASC)  TABLESPACE &&indexTableSpaceName;
create index INDEX_TEMPSTRUC_ENT_PERSON_ID on TEMPORARY_STRUCTURES (ENTRY_PERSON_ID ASC)  TABLESPACE &&indexTableSpaceName;
create index INDEX_TEMPSTRUC_SEQ on TEMPORARY_STRUCTURES (SEQUENCE_ID ASC)  TABLESPACE &&indexTableSpaceName;
create index INDEX_TEMPSTRUC_CHEM_NAME on TEMPORARY_STRUCTURES (CHEMICAL_NAME ASC)  TABLESPACE &&indexTableSpaceName;
create index PK_TEMP_COMPOUND_ID on TEMPORARY_STRUCTURES(TEMP_COMPOUND_ID)  TABLESPACE &&indexTableSpaceName;

create index PK_CPD_INTERNAL_ID2 on STRUCTURES(CPD_INTERNAL_ID)  TABLESPACE &&indexTableSpaceName;
create index INDEX_STRUCTURES_MOLID on STRUCTURES(MOL_ID)  TABLESPACE &&indexTableSpaceName;




-- 5. Recreate Triggers

-- Create table level triggers for table TEMPORARY_STRUCTURES.
create or replace trigger TRG_TEMPORARY_STRUCTURES
BEFORE INSERT ON TEMPORARY_STRUCTURES
FOR EACH ROW
   BEGIN
    SELECT SEQ_TEMPORARY_STRUCTURES.NEXTVAL INTO :NEW.TEMP_COMPOUND_ID  FROM DUAL;
END;
/

-- 6. Recreate constraints
alter table TEMPORARY_STRUCTURES
	add constraint PROJECTSTEMPORARY_STRUCTUR foreign key (
		PROJECT_ID)
	 references PROJECTS (
		PROJECT_INTERNAL_ID); 

alter table TEMPORARY_STRUCTURES
	add constraint SEQUENCETEMPORARY_STRUCTUR foreign key (
		SEQUENCE_ID)
	 references SEQUENCE (
		SEQUENCE_ID);

-- 7. Apply grants previously spooled at the begining of the header script.
@@tmp.sql




