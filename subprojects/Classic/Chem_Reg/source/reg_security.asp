
<%'Copyright 1999-2003 CambridgeSoft Corporation. All rights reserved

'DO NOT EDIT THIS FILE. 

Function canEditPart(ByVal dbkey,ByVal theType)
	select case UCase(theType)
		Case "REG"
			bCmpd = Session("Edit_Compound_Reg" & dbkey)
			bIdent = Session("Edit_Identifiers_Reg" & dbkey)
			bBatch = Session("Edit_Batch_Reg" & dbkey)
			bSalt = Session("Edit_Salt_Reg" & dbkey)
		Case "TEMP"
			bCmpd = Session("Edit_Compound_Temp" & dbkey)
			bIdent = Session("Edit_Identifiers_Temp" & dbkey)
			bBatch = Session("Edit_Batch_Temp" & dbkey)
			bSalt = Session("Edit_Salt_Temp" & dbkey)
			bDelete = Session("Delete_Temp" & dbkey)
	end select
	if UCASE(kBatchLevel) = "SALT" then
		if (bCmpd or bIdent or bBatch  or bSalt or bDelete) then
			theResult = true
		else
			theResult = false
		end if
	else
		if (bCmpd or bIdent or bBatch or bDelete) then
			theResult = true
		else
			theResult = false
		end if
	end if
	canEditPart = theResult
end function

Function getEditFlag(dbkey, unique_ID, editable_ids,flag_name)
	theResult=true
	if Not Session(flag_name & dbkey) <> "" then
		Response.Write "invalid flag name: " & flag_name
		Response.End
	end if

	if Session(flag_name & dbkey) = true then
		if inStr(editable_ids, ",")> 0 then
			theArray = split(editable_ids, ",", -1)
				for i = 0 to UBound(theArray)
					if CLng(theArray(i)) = CLng(unique_ID) then
						theResult = true
						setEditFlag= theResult
					exit for
					else
						theResult = false
					end if
				next
		else
			if Not (unique_ID="" OR editable_ids="") then
				if Clng(unique_ID) = CLng(editable_ids) then
					theResult = true
				else
					theResult = false
				end if
			else
				theResult = false
			end if
		end if
	else
		theResult = false
	end if
getEditFlag= theResult

end function



function getEditableBatches(ByVal dbkey,ByRef DataConn, ByVal user_ids, ByVal reg_id)	
	
	Session("edittable_batch_ids" & dbkey) = ""
	if user_ids = "-1" then 
		getEditableBatches = ""
		exit function
	end if
	Set EditRS= server.CreateObject("adodb.recordset")
	Set cmd = server.CreateObject("adodb.command")
	cmd.ActiveConnection = DataConn
	cmd.CommandType = adCmdText
	
	if inStr(user_ids, ",")> 0 then
		sql = "Select Batch_internal_id From Batches WHERE Batches.reg_internal_id = ? AND  Batches.Batch_reg_person_id In(" & user_ids & ")"
		cmd.CommandText = sql
		cmd.Parameters.Append cmd.CreateParameter("pRegID", 5, 1, 0, reg_id) 
		
		on error resume next
		EditRS.Open cmd
		Response.Write err.description
		on error goto 0
		
			if Not (EditRS.BOF and EditRS.EOF) then
			
				EditRS.MoveFirst
				Do While Not EditRS.EOF
				if edit_batch_ids <> "" then
					edit_batch_ids = edit_batch_ids & "," & EditRS("Batch_Internal_ID")
				else
					edit_batch_ids =  EditRS("Batch_Internal_ID")
				end if
			
			EditRS.MoveNext
			loop
			EditRS.Close
		else
			edit_batch_ids = ""
		end if
		Set EditRS = Nothing
		
	else

		if user_ids = "0" then 
			sql = "Select Batch_internal_id From Batches Where Batches.reg_internal_id = ?"
			cmd.Parameters.Append cmd.CreateParameter("pRegID", 5, 1, 0, reg_id) 
		else
			sql = "Select Batch_internal_id From Batches WHERE Batches.reg_internal_id =? AND  Batches.Batch_reg_person_id =?"
			cmd.Parameters.Append cmd.CreateParameter("pRegID", 5, 1, 0, reg_id) 
			cmd.Parameters.Append cmd.CreateParameter("puser_ids", 5, 1, 0, user_ids) 	
		end if
		cmd.CommandText = sql
		on error resume next
		EditRS.Open cmd
			if Not (EditRS.BOF and EditRS.EOF) then
			
				EditRS.MoveFirst
				Do While Not EditRS.EOF
					if edit_batch_ids <> "" then
						edit_batch_ids = edit_batch_ids & "," & EditRS("Batch_Internal_ID")
					else
						edit_batch_ids =  EditRS("Batch_Internal_ID")
					end if
				EditRS.MoveNext
				loop
				EditRS.Close
			else
				edit_batch_ids = ""
			end if
			Set EditRS = Nothing
	end if
	getEditableBatches = edit_batch_ids

End function




Function getQualityCheckedFlag(ByRef DataConn, byVal reg_id, ByVal batch_id)
	Set QualityCheckedRS = server.CreateObject("adodb.recordset")
	Set cmd = server.CreateObject("adodb.command")
	cmd.ActiveConnection =  DataConn
	cmd.CommandType = adCmdText
	if UCase(Application("Approved_Scope")) = "BATCH" then
		sql = "Select Quality_Checked from Reg_Quality_Checked Where reg_internal_id =? AND Batch_Internal_ID=?"
		cmd.Parameters.Append cmd.CreateParameter("pRegID", 5, 1, 0, reg_id) 
		cmd.Parameters.Append cmd.CreateParameter("pbatch_id", 5, 1, 0, batch_id) 
	else
		sql = "Select Quality_Checked from Reg_Quality_Checked Where reg_internal_id =? AND Batch_Internal_ID IS NULL"
		cmd.Parameters.Append cmd.CreateParameter("pRegID", 5, 1, 0, reg_id) 
	end if
	cmd.CommandText = sql
	QualityCheckedRS.Open cmd
	if Not (QualityCheckedRS.BOF AND QualityCheckedRS.EOF) then
		theResult = True
		QualityCheckedRS.Close
	else
		theResult = False
	
	end if
	
	Set QualityCheckedRS = Nothing

getQualityCheckedFlag=theResult

end function



Function getQACheckState(reg_id,row_id,fullfieldname, the_value)
	fullfieldname = "UID." & row_id & ":" & fullfieldname 
	if (Application("APPROVED_FLAG_USED") = 1 and Application("QUALITY_CHECKED_FLAG_USED") = 1) then
		select case UCase(the_value)
			case "SET"
				theResult = "<input type=""checkbox"" name=" & quotedString(fullfieldname& "_orig")& " value=" & quotedString(the_value & ":" & reg_id) & " onBlur=""checkQAState(this.form,this,&quot;" & bApproved & "&quot;,&quot;" & bQualityChecked & "&quot;)"">"
				theResult = theResult & "<input type=""hidden"" value="""" name=""" & fullfieldname & """>"

			case "TOGGLE"
				theResult = "<input type=""checkbox"" name=" & quotedString(fullfieldname& "_orig")& " value=" & quotedString(the_value& ":" & reg_id) & " checked onBlur=""checkQAState(this.form,this,&quot;" & bApproved & "&quot;,&quot;" & bQualityChecked & "&quot;)"">"
				theResult = theResult & "<input type=""hidden"" value="""" name=""" & fullfieldname & """>"

		end select
	else
			select case UCase(the_value)
			case "SET"
				
				theResult = "<input type=""checkbox"" name=" & quotedString(fullfieldname& "_orig")& " value=" & quotedString(the_value & ":" & reg_id) & " onBlur=""UpdateFieldVal(this.form,this)"">"
				theResult = theResult & "<input type=""hidden"" name=""" & fullfieldname & """ value="""" >"

			case "TOGGLE"
				theResult = "<input type=""checkbox"" name=" & quotedString(fullfieldname& "_orig")& " value=" & quotedString(the_value& ":" & reg_id) & " checked onBlur=""UpdateFieldVal(this.form,this)"">"
			theResult = theResult & "<input type=""hidden""  name=""" & fullfieldname & """ value="""" >"

		end select
	end if
	AddtoRelLoadedFields(fullfieldname)
	getQACheckState = theResult
End Function

Function getQACheckbox(reg_id,row_id,fullfieldname, the_value)
	fullfieldname = "UID." & row_id & ":" & fullfieldname 
	select case UCase(the_value)
		case "SET"
			theResult = "<input type=""checkbox"" name=" & quotedString(fullfieldname& "_orig")& " value=" & quotedString(the_value & ":" & reg_id) & " onBlur=""UpdateFieldVal(this.form,this)"">"
			theResult = theResult & "<input type=""hidden""  name=""" & fullfieldname & """ value="""" >"

		case "TOGGLE"
			theResult = "<input type=""checkbox"" name=" & quotedString(fullfieldname& "_orig")& " value=" & quotedString(the_value& ":" & reg_id) & " checked onBlur=""UpdateFieldVal(this.form,this)"">"
			theResult = theResult & "<input type=""hidden""  name=""" & fullfieldname & """ value="""" >"

	end select
	AddtoRelLoadedFields(fullfieldname)
	getQACheckbox = theResult
End Function

'SYAN added on 11/29/2004 to fix CSBR-49587
Function getTempApprovedCheckbox(temp_compound_id, fullfieldname, the_value)
	fullfieldname = "UID." & temp_compound_id & ":" & fullfieldname 
	select case the_value
		case 0
			theResult = "<input type=""checkbox"" name=" & quotedString(fullfieldname& "_orig")& " value=""javascript:this.checked""" & " onBlur=""if (this.checked == true) {this.value=1} else{this.value=0};UpdateFieldVal(this.form, this)"">"
			theResult = theResult & "<input type=""hidden"" name=""" & fullfieldname & """ value="""">"

		case 1
			theResult = "<input type=""checkbox"" name=" & quotedString(fullfieldname& "_orig")& " value=""javascript:this.checked""" & " checked onBlur=""if (this.checked == true) {this.value=1} else{this.value=0};UpdateFieldVal(this.form, this)"">"
			theResult = theResult & "<input type=""hidden"" name=""" & fullfieldname & """ value="""">"

	end select
	AddtoRelLoadedFields(fullfieldname)
	getTempApprovedCheckbox = theResult
End Function
'End of SYAN modification


%>
