<%'Copyright 1999-2003 CambridgeSoft Corporation. All rights reserved

'DO NOT EDIT THIS FILE
'Main Page functions
if CBool(Application("PROJECT_LEVEL_ROW_SECURITY")) = true then
	if Session("UserName" & dbkey) = Application("REG_USERNAME") then
		Session("UserName" & dbkey) = Session("storeSessionUser" & dbkey)
		Session("UserID" & dbkey) = Session("storeSessionPWD" & dbkey)
	end if
end if
'create the sql for getting the compounds awaiting approval for the logged in user.  returned records depends on edit_scope_all or edit_scope_supervisor privilege
Function getApprovedSQL(dbkey, formgroup)
	basetable = GetBaseTable(dbkey, formgroup, "basetable")
	If (CBool(Session("EDIT_SCOPE_ALL" & dbkey))=True and CBool(Session("SET_APPROVED_FLAG" & dbkey))= true) then
	
		if UCase(basetable) = "BATCHES" then 'provide giv compatablity
				approved_sql_string = "SELECT DISTINCT BATCHES.BATCH_INTERNAL_ID,BATCHES.BATCH_NUMBER FROM BATCHES, REG_APPROVED, PEOPLE WHERE BATCHES.BATCH_INTERNAL_ID=REG_APPROVED.BATCH_INTERNAL_ID(+) AND REG_APPROVED.APPROVED IS NULL ORDER BY  BATCHES.BATCH_INTERNAL_ID ASC"
		else 'basetable is standard reg_numbers
				if APPLICATION("APPROVED_SCOPE") = "COMPOUND" then
					approved_sql_string = "SELECT DISTINCT REG_NUMBERS.REG_ID,REG_NUMBERS.REG_NUMBER FROM REG_NUMBERS, REG_APPROVED WHERE  REG_NUMBERS.REG_ID=REG_APPROVED.REG_INTERNAL_ID(+) AND REG_APPROVED.APPROVED IS NULL ORDER BY REG_NUMBERS.REG_NUMBER" 
				else
					approved_sql_string = "SELECT DISTINCT REG_NUMBERS.REG_ID,REG_NUMBERS.REG_NUMBER FROM BATCHES, REG_NUMBERS ,REG_APPROVED WHERE BATCHES.REG_INTERNAL_ID=REG_NUMBERS.REG_ID(+)AND BATCHES.BATCH_INTERNAL_ID=REG_APPROVED.BATCH_INTERNAL_ID(+) AND REG_APPROVED.APPROVED IS NULL ORDER BY REG_NUMBERS.REG_NUMBER"
				end if
		end if
		
	else
		If (CBool(Session("EDIT_SCOPE_SUPERVISOR" & dbkey))=True and CBool(Session("SET_APPROVED_FLAG" & dbkey))= true)then
			if UCase(basetable) = "BATCHES" then 'provide giv compatablity
				approved_sql_string = "SELECT DISTINCT BATCHES.BATCH_INTERNAL_ID,BATCHES.BATCH_NUMBER FROM BATCHES, REG_APPROVED, PEOPLE WHERE BATCHES.BATCH_INTERNAL_ID=REG_APPROVED.BATCH_INTERNAL_ID(+) AND REG_APPROVED.APPROVED IS NULL  AND BATCHES.BATCH_REG_PERSON_ID IN(" & Session("EditRestrictIDs" & dbkey) & ")" & " ORDER BY  BATCHES.BATCH_NUMBER ASC"
			else 'basetable is standard reg_numbers
				if APPLICATION("APPROVED_SCOPE") = "COMPOUND" then
					APPROVED_SQL_STRING = "SELECT DISTINCT REG_NUMBERS.REG_ID,REG_NUMBERS.REG_NUMBER FROM REG_NUMBERS ,REG_APPROVED WHERE  REG_NUMBERS.REG_ID=REG_APPROVED.REG_INTERNAL_ID(+) AND REG_APPROVED.APPROVED IS NULL  AND REG_NUMBERS.REGISTRAR_PERSON_ID IN(" & SESSION("EDITRESTRICTIDS" & DBKEY) & ")" & " ORDER BY REG_NUMBERS.REG_NUMBER"
				ELSE
					APPROVED_SQL_STRING = "SELECT DISTINCT REG_NUMBERS.REG_ID,REG_NUMBERS.REG_NUMBER FROM BATCHES, REG_NUMBERS ,REG_APPROVED WHERE BATCHES.REG_INTERNAL_ID=REG_NUMBERS.REG_ID(+)AND BATCHES.BATCH_INTERNAL_ID=REG_APPROVED.BATCH_INTERNAL_ID(+) AND REG_APPROVED.APPROVED IS NULL  AND BATCHES.BATCH_REG_PERSON_ID IN(" & SESSION("EDITRESTRICTIDS" & DBKEY) & ")" & " ORDER BY REG_NUMBERS.REG_NUMBER"
				end if
			end if
		else
			If (CBool(Session("EDIT_SCOPE_SELF" & dbkey))=True and CBool(Session("SET_APPROVED_FLAG" & dbkey))= true)then
				if UCase(basetable) = "BATCHES" then 'provide giv compatablity
					approved_sql_string = "SELECT DISTINCT BATCHES.BATCH_INTERNAL_ID,BATCHES.BATCH_NUMBER FROM BATCHES, REG_APPROVED, PEOPLE WHERE BATCHES.BATCH_INTERNAL_ID=REG_APPROVED.BATCH_INTERNAL_ID(+) AND REG_APPROVED.APPROVED IS NULL  AND BATCHES.BATCH_REG_PERSON_ID IN(" & Session("EditRestrictIDs" & dbkey) & ")" & " ORDER BY  BATCHES.BATCH_NUMBER ASC"
				else 'basetable is standard reg_numbers
					if APPLICATION("APPROVED_SCOPE") = "COMPOUND" then
						APPROVED_SQL_STRING = "SELECT DISTINCT REG_NUMBERS.REG_ID,REG_NUMBERS.REG_NUMBER FROM REG_NUMBERS ,REG_APPROVED WHERE  REG_NUMBERS.REG_ID=REG_APPROVED.REG_INTERNAL_ID(+) AND REG_APPROVED.APPROVED IS NULL  AND REG_NUMBERS.REGISTRAR_PERSON_ID IN(" & SESSION("EDITRESTRICTIDS" & DBKEY) & ")" & " ORDER BY REG_NUMBERS.REG_NUMBER"
					ELSE
						APPROVED_SQL_STRING = "SELECT DISTINCT REG_NUMBERS.REG_ID,REG_NUMBERS.REG_NUMBER FROM BATCHES, REG_NUMBERS ,REG_APPROVED WHERE BATCHES.REG_INTERNAL_ID=REG_NUMBERS.REG_ID(+)AND BATCHES.BATCH_INTERNAL_ID=REG_APPROVED.BATCH_INTERNAL_ID(+) AND REG_APPROVED.APPROVED IS NULL  AND BATCHES.BATCH_REG_PERSON_ID IN(" & SESSION("EDITRESTRICTIDS" & DBKEY) & ")" & " ORDER BY REG_NUMBERS.REG_NUMBER"
					end if
				end if
			end if
		end if
	end if
	getApprovedSql = approved_sql_string
	
end function

'create the sql for getting the compounds awaiting quality check for the logged  in user.  returned records depends on edit_scope_all or edit_scope_supervisor privilege
Function getQualityCheckedSQL(dbkey, formgroup)
	basetable = GetBaseTable(dbkey, formgroup, "basetable")
	If (CBool(Session("EDIT_SCOPE_ALL" & dbkey))=True and CBool(Session("SET_QUALITY_CHECK_FLAG" & dbkey))= true) then
		if UCase(basetable) = "BATCHES" then 'provide giv compatablity
				qc_sql_string = "SELECT DISTINCT BATCHES.BATCH_INTERNAL_ID FROM BATCHES, REG_QUALITY_CHECKED R, PEOPLE WHERE BATCHES.BATCH_INTERNAL_ID=R.BATCH_INTERNAL_ID(+) AND R.QUALITY_CHECKED IS NULL"
		else 'basetable is standard reg_numbers
				if APPLICATION("QUALITY_CHECK_SCOPE") = "COMPOUND" then
					QC_SQL_STRING = "SELECT DISTINCT REG_NUMBERS.REG_ID FROM REG_NUMBERS ,REG_QUALITY_CHECKED R WHERE  REG_NUMBERS.REG_ID=R.REG_INTERNAL_ID(+) AND R.QUALITY_CHECKED IS NULL" 
				ELSE
					QC_SQL_STRING = "SELECT DISTINCT REG_NUMBERS.REG_ID FROM BATCHES, REG_NUMBERS ,REG_QUALITY_CHECKED R WHERE BATCHES.REG_INTERNAL_ID=REG_NUMBERS.REG_ID(+)AND BATCHES.BATCH_INTERNAL_ID=R.BATCH_INTERNAL_ID(+) AND R.QUALITY_CHECKED IS NULL"
				end if
		end if
	else
		If (CBool(Session("EDIT_SCOPE_SUPERVISOR" & dbkey))=True and CBool(Session("SET_QUALITY_CHECK_FLAG" & dbkey))= true)then
			if UCase(basetable) = "BATCHES" then 'provide giv compatablity
				qc_sql_string = "SELECT DISTINCT BATCHES.BATCH_INTERNAL_ID FROM BATCHES, REG_QUALITY_CHECKED R, PEOPLE WHERE BATCHES.BATCH_INTERNAL_ID=R.BATCH_INTERNAL_ID(+) AND R.QUALITY_CHECKED IS NULL  AND BATCHES.BATCH_REG_PERSON_ID IN(" & Session("EditRestrictIDs" & dbkey) & ")"
			else 'basetable is standard reg_numbers
				if APPLICATION("QUALITY_CHECK_SCOPE") = "COMPOUND" then
					QC_SQL_STRING = "SELECT DISTINCT REG_NUMBERS.REG_ID FROM REG_NUMBERS ,REG_QUALITY_CHECKED R WHERE  REG_NUMBERS.REG_ID=R.REG_INTERNAL_ID(+) AND R.QUALITY_CHECKED IS NULL  AND REG_NUMBERS.REGISTRAR_PERSON_ID IN(" & SESSION("EDITRESTRICTIDS" & DBKEY) & ")"
				else
					QC_SQL_STRING = "SELECT DISTINCT REG_NUMBERS.REG_ID FROM BATCHES, REG_NUMBERS ,REG_QUALITY_CHECKED R WHERE BATCHES.REG_INTERNAL_ID=REG_NUMBERS.REG_ID(+)AND BATCHES.BATCH_INTERNAL_ID=R.BATCH_INTERNAL_ID(+) AND R.QUALITY_CHECKED IS NULL  AND BATCHES.BATCH_REG_PERSON_ID IN(" & SESSION("EDITRESTRICTIDS" & DBKEY) & ")"
				end if
			end if
		end if
	end if
	getQualityCheckedSQL = qc_sql_string
end function

Function getTempTableSql(dbkey,formgroup)
	if Not Session("SITE_ACCESS_ALL" & dbkey) = True and Application("SITES_USED") = 1  then
		site_sql = " AND ENTRY_PERSON_ID IN (SELECT PERSON_ID FROM PEOPLE WHERE SITE_ID=(SELECT site_id from people where user_id ='" & UCASE(SESSION("CURRENTUSER" & DBKEY))& "'))"
		
	end if

	
	If (CBool(Session("EDIT_SCOPE_ALL" & dbkey))=True and CBool(Session("REGISTER_TEMP" & dbkey))= true) then
			SQL = "SELECT TEMPORARY_STRUCTURES.TEMP_COMPOUND_ID,TEMPORARY_STRUCTURES.DUPLICATE FROM TEMPORARY_STRUCTURES  WHERE TEMP_COMPOUND_ID>0" & site_sql
	else
		If (CBool(Session("EDIT_SCOPE_SUPERVISOR" & dbkey))=True and CBool(Session("REGISTER_TEMP" & dbkey))= true)then
				SQL = "SELECT TEMPORARY_STRUCTURES.TEMP_COMPOUND_ID,TEMPORARY_STRUCTURES.DUPLICATE FROM TEMPORARY_STRUCTURES WHERE ENTRY_PERSON_ID IN(" & SESSION("EDITRESTRICTIDS" & DBKEY) & ")"  & site_sql
		else
			If (CBool(Session("EDIT_SCOPE_SELF" & dbkey))=True and CBool(Session("REGISTER_TEMP" & dbkey))= true)then
				SQL = "SELECT TEMPORARY_STRUCTURES.TEMP_COMPOUND_ID,TEMPORARY_STRUCTURES.DUPLICATE FROM TEMPORARY_STRUCTURES  WHERE ENTRY_PERSON_ID=" & SESSION("EDITRESTRICTIDS" & DBKEY) & site_sql
			end if
		end if
	
	
	end if
	
	'SYAN added 10/12/2004 to fix CSBR-47932
	sql = sql & " ORDER BY TEMPORARY_STRUCTURES.TEMP_COMPOUND_ID ASC"
	'End of SYAN modification
	getTempTableSql=sql
End Function

'get sql for workgroups
Function getWorkgroupSQL(dbkey,formgroup)
	WORKGROUP_SQL = "SELECT PERSON_ID FROM PEOPLE"
	getWorkgroupSQL=workgroup_sql
End Function

'get sql for projects
Function getProjectSQL(dbkey,formgroup)
	PROJECT_SQL = "SELECT PROJECT_INTERNAL_ID FROM PROJECTS"
	getProjectSQL=project_sql
End Function

'get sql for experiment types
Function getExperimentTypeSQL(dbkey,formgroup)
	EXPERIMENT_TYPE_SQL = "SELECT EXPERIMENTTYPE.EXPERIMENT_TYPE_ID FROM EXPERIMENTTYPE"
	getExperimentTypeSQL=EXPERIMENT_TYPE_SQL
End Function

'get the count of the compounds that need to be approved for the logged in supervisor
Function getApprovalCount(dbkey,formgroup)
	if CBool(Session("EDIT_SCOPE_ALL" & dbkey)) = True then
		basetable = GetBaseTable(dbkey, formgroup, "basetable")
		if UCase(basetable) = "BATCHES" then 'provide giv compatablity
				APPROVED_SQL_STRING = "SELECT DISTINCT COUNT(BATCHES.BATCH_INTERNAL_ID) AS THERSCOUNT FROM BATCHES, REG_APPROVED, PEOPLE WHERE BATCHES.BATCH_INTERNAL_ID=REG_APPROVED.BATCH_INTERNAL_ID(+) AND REG_APPROVED.APPROVED IS NULL "
		else 'basetable is standard reg_numbers
				if APPLICATION("APPROVED_SCOPE") = "COMPOUND" then
					APPROVED_SQL_STRING = "SELECT DISTINCT COUNT(REG_NUMBERS.REG_ID) AS THERSCOUNT FROM REG_NUMBERS ,REG_APPROVED WHERE  REG_NUMBERS.REG_ID=REG_APPROVED.REG_INTERNAL_ID(+) AND REG_APPROVED.APPROVED IS NULL "
				ELSE
					APPROVED_SQL_STRING = "SELECT DISTINCT COUNT(REG_NUMBERS.REG_ID) AS THERSCOUNT FROM BATCHES, REG_NUMBERS ,REG_APPROVED WHERE BATCHES.REG_INTERNAL_ID=REG_NUMBERS.REG_ID(+)AND BATCHES.BATCH_INTERNAL_ID=REG_APPROVED.BATCH_INTERNAL_ID(+) AND REG_APPROVED.APPROVED IS NULL"
				end if
		end if
	else
		if  CBool(Session("EDIT_SCOPE_SUPERVISOR" & dbkey)) = True  then
			if UCase(basetable) = "BATCHES" then 'provide giv compatablity
				approved_sql_string = "SELECT DISTINCT count(BATCHES.BATCH_INTERNAL_ID) as theRSCount FROM BATCHES, REG_APPROVED, PEOPLE WHERE BATCHES.BATCH_INTERNAL_ID=REG_APPROVED.BATCH_INTERNAL_ID(+) AND REG_APPROVED.APPROVED IS NULL  AND BATCHES.BATCH_REG_PERSON_ID IN(" & Session("EditRestrictIDs" & dbkey) & ")"
			else 'basetable is standard reg_numbers
				if APPLICATION("APPROVED_SCOPE") = "COMPOUND" then
					approved_sql_string = "SELECT DISTINCT count(REG_NUMBERS.REG_ID) as theRSCount FROM REG_NUMBERS ,REG_APPROVED WHERE  REG_NUMBERS.REG_ID=REG_APPROVED.REG_INTERNAL_ID(+) AND REG_APPROVED.APPROVED IS NULL  AND REG_NUMBERS.REGISTRAR_PERSON_ID IN(" & Session("EditRestrictIDs" & dbkey) & ")"
				else
					approved_sql_string = "SELECT DISTINCT count(REG_NUMBERS.REG_ID) as theRSCount FROM BATCHES, REG_NUMBERS ,REG_APPROVED WHERE BATCHES.REG_INTERNAL_ID=REG_NUMBERS.REG_ID(+)AND BATCHES.BATCH_INTERNAL_ID=REG_APPROVED.BATCH_INTERNAL_ID(+) AND REG_APPROVED.APPROVED IS NULL  AND BATCHES.BATCH_REG_PERSON_ID IN(" & Session("EditRestrictIDs" & dbkey) & ")"
				end if
			end if
		
		else
			if  CBool(Session("EDIT_SCOPE_SELF" & dbkey)) = True  then
				if UCase(basetable) = "BATCHES" then 'provide giv compatablity
					approved_sql_string = "SELECT  count(BATCHES.BATCH_INTERNAL_ID) as theRSCount FROM BATCHES, REG_APPROVED, PEOPLE WHERE BATCHES.BATCH_INTERNAL_ID=REG_APPROVED.BATCH_INTERNAL_ID(+) AND REG_APPROVED.APPROVED IS NULL  AND BATCHES.BATCH_REG_PERSON_ID IN(" & Session("EditRestrictIDs" & dbkey) & ")"
				else 'basetable is standard reg_numbers
					if APPLICATION("APPROVED_SCOPE") = "COMPOUND" then
						approved_sql_string = "SELECT  count(REG_NUMBERS.REG_ID) as theRSCount FROM REG_NUMBERS ,REG_APPROVED WHERE  REG_NUMBERS.REG_ID=REG_APPROVED.REG_INTERNAL_ID(+) AND REG_APPROVED.APPROVED IS NULL  AND REG_NUMBERS.REGISTRAR_PERSON_ID IN(" & Session("EditRestrictIDs" & dbkey) & ")"
					else
						approved_sql_string = "SELECT  count(REG_NUMBERS.REG_ID) as theRSCount FROM BATCHES, REG_NUMBERS ,REG_APPROVED WHERE BATCHES.REG_INTERNAL_ID=REG_NUMBERS.REG_ID(+)AND BATCHES.BATCH_INTERNAL_ID=REG_APPROVED.BATCH_INTERNAL_ID(+) AND REG_APPROVED.APPROVED IS NULL  AND BATCHES.BATCH_REG_PERSON_ID IN(" & Session("EditRestrictIDs" & dbkey) & ")"
					end if
				end if
			end if
		end if
		
		
	end if
	
	on error resume next
	Dim  RS
	Set RegConn = getRegConn(dbkey, formgroup)
	Set RS = RegConn.Execute(approved_sql_string)
	RS.MoveFirst
	theCount = RS("theRSCount")
	CloseRS(RS)
	getApprovalCount = theCount
	
end function
'Select count(reg_id) from reg_numbers minus select reg_internal_id from reg_approved

Function getApprovedCmpds(dbkey,formgroup,total_compounds)
		basetable = GetBaseTable(dbkey, formgroup, "basetable")
		if UCase(basetable) = "BATCHES" then 'provide giv compatablity
				approved_sql_string = "SELECT DISTINCT count(BATCHES.BATCH_INTERNAL_ID) as theRSCount FROM BATCHES, REG_APPROVED WHERE BATCHES.BATCH_INTERNAL_ID=REG_APPROVED.BATCH_INTERNAL_ID(+) AND REG_APPROVED.APPROVED IS NULL "
		else 'basetable is standard reg_numbers
				if APPLICATION("APPROVED_SCOPE") = "COMPOUND" then
					'APPROVED_SQL_STRING = "Select count(reg_id) as theRSCount from reg_numbers minus select reg_internal_id from reg_approved"
					APPROVED_SQL_STRING = "SELECT  COUNT(REG_NUMBERS.REG_ID) AS THERSCOUNT FROM REG_NUMBERS ,REG_APPROVED WHERE  REG_NUMBERS.REG_ID=REG_APPROVED.REG_INTERNAL_ID(+) AND REG_APPROVED.APPROVED IS NULL "
				ELSE
					APPROVED_SQL_STRING = "SELECT  COUNT(REG_NUMBERS.REG_ID) AS THERSCOUNT FROM BATCHES, REG_NUMBERS ,REG_APPROVED WHERE BATCHES.REG_INTERNAL_ID=REG_NUMBERS.REG_ID(+)AND BATCHES.BATCH_INTERNAL_ID=REG_APPROVED.BATCH_INTERNAL_ID(+) AND REG_APPROVED.APPROVED IS NULL"
				end if
		end if

	
	on error resume next
	Dim  RS
	Set RegConn = getRegConn(dbkey, formgroup)
	Set RS = RegConn.Execute(approved_sql_string)
	
	RS.MoveFirst
	theCount = RS("theRSCount")
	
	CloseRS(RS)
	getApprovedCmpds = CInt(total_compounds) - CInt(theCount)
	
end function

'get the count of the compounds that need to be quality checked for the logged in supervisor
Function getQualityCheckCount(dbkey,formgroup)

	basetable = GetBaseTable(dbkey, formgroup, "basetable")
	If (CBool(Session("EDIT_SCOPE_ALL" & dbkey))=True and CBool(Session("SET_QUALITY_CHECK_FLAG" & dbkey))= true) then
		if UCase(basetable) = "BATCHES" then 'provide giv compatablity
				qc_sql_string = "SELECT  count(BATCHES.BATCH_INTERNAL_ID) as theRSCount FROM BATCHES, REG_QUALITY_CHECKED R, PEOPLE WHERE BATCHES.BATCH_INTERNAL_ID=R.BATCH_INTERNAL_ID(+) AND R.QUALITY_CHECKED IS NULL"
		else 'basetable is standard reg_numbers
				if APPLICATION("QUALITY_CHECK_SCOPE") = "COMPOUND" then
					QC_SQL_STRING = "SELECT COUNT(REG_NUMBERS.REG_ID) AS THERSCOUNT FROM REG_NUMBERS ,REG_QUALITY_CHECKED R WHERE  REG_NUMBERS.REG_ID=R.REG_INTERNAL_ID(+) AND R.QUALITY_CHECKED IS NULL" 
				ELSE
					QC_SQL_STRING = "SELECT COUNT(REG_NUMBERS.REG_ID) AS THERSCOUNT FROM BATCHES, REG_NUMBERS ,REG_QUALITY_CHECKED R WHERE BATCHES.REG_INTERNAL_ID=REG_NUMBERS.REG_ID(+)AND BATCHES.BATCH_INTERNAL_ID=R.BATCH_INTERNAL_ID(+) AND R.QUALITY_CHECKED IS NULL"
				end if
		end if
	else
		If (CBool(Session("EDIT_SCOPE_SUPERVISOR" & dbkey))=True and CBool(Session("SET_QUALITY_CHECK_FLAG" & dbkey))= true)then
			if UCase(basetable) = "BATCHES" then 'provide giv compatablity
				qc_sql_string = "SELECT count(BATCHES.BATCH_INTERNAL_ID) FROM BATCHES, REG_QUALITY_CHECKED R, PEOPLE WHERE BATCHES.BATCH_INTERNAL_ID=R.BATCH_INTERNAL_ID(+) AND R.QUALITY_CHECKED IS NULL  AND BATCHES.BATCH_REG_PERSON_ID IN(" & Session("EditRestrictIDs" & dbkey) & ")"
			else 'basetable is standard reg_numbers
				if APPLICATION("QUALITY_CHECK_SCOPE") = "COMPOUND" then
					QC_SQL_STRING = "SELECT COUNT(REG_NUMBERS.REG_ID) AS THERSCOUNT FROM REG_NUMBERS ,REG_QUALITY_CHECKED R WHERE  REG_NUMBERS.REG_ID=R.REG_INTERNAL_ID(+) AND R.QUALITY_CHECKED IS NULL  AND REG_NUMBERS.REGISTRAR_PERSON_ID IN(" & SESSION("EDITRESTRICTIDS" & DBKEY) & ")"
				else
					QC_SQL_STRING = "SELECT COUNT(REG_NUMBERS.REG_ID) AS THERSCOUNT FROM BATCHES, REG_NUMBERS ,REG_QUALITY_CHECKED R WHERE BATCHES.REG_INTERNAL_ID=REG_NUMBERS.REG_ID(+)AND BATCHES.BATCH_INTERNAL_ID=R.BATCH_INTERNAL_ID(+) AND R.QUALITY_CHECKED IS NULL  AND BATCHES.BATCH_REG_PERSON_ID IN(" & SESSION("EDITRESTRICTIDS" & DBKEY) & ")"
				end if
			end if
		end if
	end if
	on error resume next
	Dim  RS
	Set RegConn = getRegConn(dbkey, formgroup)
	Set RS = RegConn.Execute(QC_SQL_STRING)
	
	RS.MoveFirst
	theCount = RS("theRSCount")
	CloseRS(RS)
	
	
	
	getQualityCheckCount = theCount
end function


'get the count of the items that need to be registered 
Function getTempTableCountALL(dbkey,formgroup,commit_type)
	'Add a count of the number of compounds remaining to be registered
		on error resume next
		Dim  RS
		Set RegConn = getRegConn(dbkey, formgroup)
		Set cmd = server.CreateObject("adodb.command")
		
		cmd.commandtype = adCmdText
		cmd.ActiveConnection = RegConn
		
		if Ucase(commit_type) = "ALL" then
			SQL = "SELECT COUNT(TEMP_COMPOUND_ID) AS NMOLS FROM TEMPORARY_STRUCTURES"
			cmd.CommandText = sql
			
		else
			SQL = "SELECT COUNT(TEMP_COMPOUND_ID) AS NMOLS FROM TEMPORARY_STRUCTURES WHERE COMMIT_TYPE =?"
			cmd.CommandText = sql
			cmd.Parameters.Append cmd.CreateParameter("pCommitType", 200, 1, Len(Commit_type)+1, UCase(Commit_Type)) 

		end if
		Set TempRS = Server.CreateObject("ADODB.Recordset")
		tempRS.Open cmd
		theCount = tempRS("NMols")
		set cmd = nothing
		CloseRS(tempRS)
		
		on error goto 0
	getTempTableCountAll = theCount
end function

'get the count of the items that need to be registered 
Function getTempTableCount(dbkey,formgroup)
	'Add a count of the number of compounds remaining to be registered
		on error resume next
		Dim  tempRS
		Set RegConn = getRegConn(dbkey, formgroup)
		UserName = Session("username" & dbkey)
		if Not Session("SITE_ACCESS_ALL" & dbkey) = True and Application("SITES_USED") = 1  then
			bSiteRestrict= true
		else
			bSiteRestrict= false
		end if
		Set cmd = Server.CreateObject("ADODB.Command")
		cmd.ActiveConnection = RegConn
		cmd.commandtype = adCmdText
		
		
	if Not Session("SITE_ACCESS_ALL" & dbkey) = True and Application("SITES_USED") = 1  then
		site_sql = " AND ENTRY_PERSON_ID IN (SELECT PERSON_ID FROM PEOPLE WHERE SITE_ID=(SELECT site_id from people where user_id =?))"
		
	end if


	if (CBool(Session("Edit_scope_All" & dbkey)) = true and CBool(Session("Register_Temp" & dbkey)) = true) then
		if bSiteRestrict = false then
			cmd.CommandText= "SELECT COUNT(temp_compound_id) AS NMOLS FROM temporary_structures"
		else
			cmd.CommandText= "SELECT Count(TEMPORARY_STRUCTURES.TEMP_COMPOUND_ID) as NMols  FROM TEMPORARY_STRUCTURES  WHERE TEMP_COMPOUND_ID>0" & site_sql

			cmd.ActiveConnection = DataConn 
			Cmd.Parameters.Append Cmd.CreateParameter("UserName", 200, 1, len(UCase(UserName))+1, UCase(UserName)) 
		end if
	else 
		if Session("Edit_Scope_Supervisor" & dbkey) = True then
	
			if bSiteRestrict = true then
				
				Set cmd = Server.CreateObject("ADODB.Command")
				cmd.CommandText= "SELECT Count(TEMPORARY_STRUCTURES.TEMP_COMPOUND_ID) as NMols FROM TEMPORARY_STRUCTURES WHERE ENTRY_PERSON_ID IN(" & SESSION("EDITRESTRICTIDS" & DBKEY) & ")"  & site_sql
				cmd.ActiveConnection = DataConn 
				Cmd.Parameters.Append Cmd.CreateParameter("UserName2", 200, 1, len(UCase(UserName))+1, UCase(UserName)) 
				
			else
				Set cmd = Server.CreateObject("ADODB.Command")
				cmd.CommandText= "SELECT Count(TEMPORARY_STRUCTURES.TEMP_COMPOUND_ID)as NMols  FROM TEMPORARY_STRUCTURES WHERE ENTRY_PERSON_ID IN(" & SESSION("EDITRESTRICTIDS" & DBKEY) & ")" 
				cmd.ActiveConnection = DataConn 
				Cmd.Parameters.Append Cmd.CreateParameter("UserName", 200, 1, len(UCase(UserName))+1, UCase(UserName)) 
			
			end if
		else
				
			if Session("Edit_Scope_Self" & dbkey) = True then
				
				Set cmd = Server.CreateObject("ADODB.Command")
				cmd.CommandText= "Select count(temp_compound_id) as NMols from temporary_structures,people where temporary_structures.entry_person_id=people.person_id  AND Upper(user_id)= ? "
				cmd.ActiveConnection = DataConn 
				Cmd.Parameters.Append Cmd.CreateParameter("UserName", 200, 1, len(UCase(UserName))+1, UCase(UserName)) 
			end if 
		end if
	end if
		Set TempRS = server.CreateObject("adodb.recordset")
		tempRS.Open cmd
		theCount = tempRS("NMols")
		CloseRS(tempRS)
		CloseConnection(DataConn)
		on error goto 0
	getTempTableCount = theCount

end function

Function getRegCount(dbkey,formgroup)
	basetable = GetBaseTable(dbkey, formgroup, "basetable")
	
	'Add a count of the number of compounds remaining to be registered
		on error resume next
		Dim RS
		Set RegConn = getRegConn(dbkey, formgroup)
		
		if UCase(basetable) = "BATCHES" then 'giv compatibility
			SQL = "SELECT COUNT(BATCH_INTERNAL_ID) AS NMOLS FROM BATCHES"
		else
			SQL = "SELECT COUNT(REG_ID) AS NMOLS FROM REG_NUMBERS"
		end if
		
	
		Set RS = RegConn.Execute(sql)
		theCount = RS("NMols")
		CloseRS(RS)
		
		on error goto 0
		
	getRegCount = theCount

end function

Function getSystemDuplicateCount(dbkey,formgroup)

		on error resume next
		Dim DataConn, RS
		Set DataConn = GetNewConnection(dbkey, formgroup, "base_connection")
		
		SQL = "SELECT COUNT(distinct compound_id) AS NMOLS FROM duplicates"
	
		Set RS = DataConn.Execute(sql)
		theCount = RS("NMols")
		CloseRS(RS)
		CloseConnection(DataConn)
	
		on error goto 0
	getSystemDuplicateCount = theCount

end function

Function get_duplicates_sql(dbkey, formgroup)
	duplicate_sql_string = "SELECT REG_NUMBERS.REG_ID,REG_NUMBERS.REG_NUMBER FROM REG_NUMBERS,DUPLICATES WHERE  REG_NUMBERS.cpd_internal_id=Duplicates.Compound_id ORDER By REG_NUMBERS.REG_NUMBER" 
	get_duplicates_sql = duplicate_sql_string
	
end function




%>