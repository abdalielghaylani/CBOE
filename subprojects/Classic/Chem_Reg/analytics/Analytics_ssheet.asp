<%@ LANGUAGE=VBScript  %>
<%'Copyright 1999-2003 CambridgeSoft Corporation. All rights reserved

'DO NOT EDIT THIS FILE%>

<%
' Option explicit
Response.Expires=0
dbkey = Request("dbname")
formgroup = request("formgroup")
if Not Session("UserValidated" & dbkey)=1 then Response.Redirect "/" & Application("appkey") & "/logged_out.asp"
Dim GF_debug
GF_debug=false
%>
<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
<html>

<head>
<!--#INCLUDE VIRTUAL = "/cfserverasp/source/cows_func_js.asp"-->
<script language="javascript">
</script>

<title>sample Results - Form View</title>
</head>

<body <%=Application("BODY_BACKGROUND") & """ bgProperties=fixed"%>>
<!--#INCLUDE FILE = "../source/app_vbs.asp"-->
<!--#INCLUDE VIRTUAL = "/cfserverasp/source/header_vbs.asp"-->
<%
	' Variables declared here for the whole of the form
	Dim sSQL
	Dim i, lsColNum, liRow, j
	Dim sCmd, oRS, oCmd, rRS, MolRS
	Dim aDisplay()
	Dim resMap()
	Dim parMap()

	Set oCmd = Server.CreateObject("ADODB.Command")
	Set oRS = Server.CreateObject("ADODB.Recordset")
	Set rRS = Server.CreateObject("ADODB.Recordset")
	Set MolRS = Server.CreateObject("ADODB.Recordset")
	
	' Use the COWS functions to retrieve the active connection to the database...
	Set RegConn=getRegConn(dbkey, formgroup)
	if RegConn.State=0 then ' assume user has been logged out
		DoLoggedOutMsg()
	end if
	' Use the COWS connection for our command object
	oCmd.ActiveConnection = RegConn
	oCmd.CommandType = adCmdText

	' There are two phases to this page - Phase 1 displays just the ExperimentType selector
	' Phase 2 displays a spreadsheet of results for that type of experiment...

	if Request.Form("ExperimentType") = "" then
		' This is the start of Phase 1 - just display the request form
%>
<p><font face="Arial" size="2" color="Navy"><strong>Select Experiment Type</strong></font></p>
<p><form METHOD="Post" ACTION="<%=Session("CurrentLocation" & dbkey & formgroup)%>" ID="frmExptType" NAME="frmExptType">
<font face="Arial" size="2" color="Navy">Select Experiment Type : </font><select NAME="ExperimentType" SIZE="1">
<%
		'oCmd.CommandText = "SELECT experiment_type_id, experiment_type_name from ExperimentType ; "
		oCmd.CommandText = "SELECT experiment_type_id, experiment_type_name from ExperimentType where experiment_type_id >?"
		oCmd.Parameters.Append oCmd.CreateParameter("pExperID", 5, 1, 0, 0) 
		Set oRS = oCmd.Execute
		oCmd.Parameters.Delete "pExperID"
		if oRS.EOF=True and oRS.BOF=True then
			Response.Write "<FONT FACE=""Arial"" COLOR=""Red"" SIZE=""3"">No experiment types found</FONT><BR>"
		else
			' Set up the SELECT choices...
			i=0
			do while not oRS.EOF
				if i=0 then
					Response.Write "<OPTION SELECTED VALUE=" & oRS("experiment_type_id").Value & ">" & oRS("experiment_type_name").Value & "</OPTION>"
				else
					Response.Write "<OPTION VALUE=" & oRS("experiment_type_id").Value & ">" & oRS("experiment_type_name").Value & "</OPTION>"
				end if
				i=i+1
				oRS.MoveNext
			loop
		end if
		oRS.Close
		Set oRS = Nothing
		Set oCmd = Nothing
%>
</select>
<input TYPE="Checkbox" ID="ShowStruct" NAME="ShowStruct" CHECKED="ON" Value="True"><font face="Arial" size="2" color="Navy">Show Structures?</font>
</p>
<p>
<input TYPE="Image" BORDER="0" ID="Submit" NAME="Submit" VALUE="Show Spreadsheet" SRC="/<%=Application("AppKey")%>/graphics/show_ssheet_btn.gif">
</form></p>
<%
	else
		Response.Write "<A HREF=""" & Session("CurrentLocation" & dbkey & formgroup) & """>Show Another Set of Results</A><BR>"
		' This is Phase 2 - display the spreadhseet for the selected experiment type
		
		lbShowStruct = Request.Form("ShowStruct")
		lbShowStruct = CBool(lbShowStruct)
		
		sExptType = Request.Form("ExperimentType")
		' sExptType = 1
		'oCmd.CommandText = "SELECT experiment_type_name from ExperimentType WHERE experiment_type_id = " & sExptType & " ; "
		'changed for oracle compat
		oCmd.CommandText = "SELECT experiment_type_name from ExperimentType WHERE experiment_type_id = ?"
		oCmd.Parameters.Append oCmd.CreateParameter("sExptType", 5, 1, 0, sExptType) 
		Set oRS = oCmd.Execute
		oCmd.Parameters.Delete "sExptType"
		
		if oRS.EOF=True and oRS.BOF=True then
			Response.Write "<FONT FACE=""Arial"" COLOR=""Red"" SIZE=""3"">Error retrieving Experiment Type Name</FONT><BR>"
		else
			lsExptName = oRS("experiment_type_name").Value
			Response.Write "<FONT FACE=""Arial"" COLOR=""Navy"" SIZE=""3"">Results for " & lsExptName & " Experiments</FONT><BR>"
		end if
		if oRS.State = adStateOpen then oRS.Close
		Set oRS = Nothing
		
		' Get the number of experiments of this type - only need to carry on if this is > 0!
		sCmd = "SELECT COUNT(Experiments.experiment_id) AS nExpts"
		sCmd = sCmd & " FROM Experiments"
		'sCmd = sCmd & " WHERE Experiments.experiment_type_id = " & sExptType & " ;"
		'LJB: change code for oracle compat
		sCmd = sCmd & " WHERE Experiments.experiment_type_id = ?"

		oCmd.Parameters.Append oCmd.CreateParameter("sExptType", 5, 1, 0, sExptType) 
		oCmd.CommandText = sCmd
		Set oRS = oCmd.Execute
		oCmd.Parameters.Delete "sExptType"
		
		if oRS.BOF = True and oRS.EOF = True Then
			Response.Write "<FONT FACE=""Arial"" COLOR=""Navy"" SIZE=""2"">Error counting Experiments for ExperimentType: " & sExptType & "</FONT><BR>"
			nExpts=0
		else
			nExpts = oRS("nExpts").Value
			nExpts = CInt(nExpts)
		end if
		if oRS.State = adStateOpen then oRS.Close
		Set oRS = Nothing

		' Only carry on if we have Experiments to show data for...
		if nExpts > 0 then
		
			' Get the number of Parameters for this experiment
			sCmd = "SELECT Count(*) AS nPars"
			'sCmd = sCmd & " FROM ParameterType INNER JOIN (ExperimentType INNER JOIN ExperimentTypeParameters ON ExperimentType.experiment_type_id = ExperimentTypeParameters.experiment_type_id) ON ParameterType.parameter_type_id = ExperimentTypeParameters.parameter_type_id"
			'sCmd = sCmd & " WHERE (((ExperimentType.experiment_type_id)= " & sExptType & ")) ;"
			'oracle compat
			sCmd = sCmd & " FROM ParameterType,ExperimentType,ExperimentTypeParameters WHERE ExperimentType.experiment_type_id = ExperimentTypeParameters.experiment_type_id AND ParameterType.parameter_type_id = ExperimentTypeParameters.parameter_type_id"
			sCmd = sCmd & " AND ExperimentType.experiment_type_id=?"
			
			oCmd.Parameters.Append oCmd.CreateParameter("sExptType", 5, 1, 0, sExptType) 
			oCmd.CommandText = sCmd
			Set oRS = oCmd.Execute
			oCmd.Parameters.Delete "sExptType"
		
			
			if oRS.BOF = True and oRS.EOF = True Then
				Response.Write "<FONT FACE=""Arial"" COLOR=""Navy"" SIZE=""2"">Error counting Parameters for ExperimentType: " & sExptType & "</FONT><BR>"
			else
				nPars = oRS("nPars").Value
				nPars = CInt(nPars)
			end if
			if oRS.State = adStateOpen then oRS.Close
			Set oRS = Nothing
		
			' Get the number of results for this experiment
			sCmd = "SELECT Count(*) AS nRes"
			'LJB: change code for oracle compat
			'sCmd = sCmd & " FROM ResultType INNER JOIN (ExperimentType INNER JOIN ExperimentTypeResults ON ExperimentType.experiment_type_id = ExperimentTypeResults.experiment_type_id) ON ResultType.result_type_id = ExperimentTypeResults.result_type_id"
			'sCmd = sCmd & " WHERE (((ExperimentType.experiment_type_id)= " & sExptType & ")) ;"
			sCmd = sCmd & " FROM ResultType,ExperimentType,ExperimentTypeResults WHERE ExperimentType.experiment_type_id = ExperimentTypeResults.experiment_type_id AND ResultType.result_type_id = ExperimentTypeResults.result_type_id"
			sCmd = sCmd & " AND ExperimentType.experiment_type_id= ?"
			oCmd.Parameters.Append oCmd.CreateParameter("sExptType", 5, 1, 0, sExptType) 
			oCmd.CommandText = sCmd
			Set oRS = oCmd.Execute
			oCmd.Parameters.Delete "sExptType"
	
		
			if oRS.BOF = True and oRS.EOF = True Then
				Response.Write "<FONT FACE=""Arial"" COLOR=""Navy"" SIZE=""2"">Error counting Results for ExperimentType: " & sExptType & "</FONT><BR>"
			else
				nRes = oRS("nRes").Value
				nRes = CInt(nRes)
			end if
			if oRS.State = adStateOpen then oRS.Close
			Set oRS = Nothing
		
			lsColNum=3 ' Start at the correct column offset in the aDisplay array...
			
			' Set up the Parameter and Result mapping from this information
	
			if nPars>0 then
				Redim parMap(nPars-1,2)
				
				' Fill in the information for the Parameter map
				sCmd = "SELECT ParameterType.parameter_type_name, ParameterType.parameter_type_id"
				'LJB: change code for oracle compat
				'sCmd = sCmd & " FROM ParameterType INNER JOIN (ExperimentType INNER JOIN ExperimentTypeParameters ON ExperimentType.experiment_type_id = ExperimentTypeParameters.experiment_type_id) ON ParameterType.parameter_type_id = ExperimentTypeParameters.parameter_type_id"
				'sCmd = sCmd & " WHERE (((ExperimentType.experiment_type_id)= " & sExptType & ")) ;"
				sCmd = sCmd & " FROM ParameterType,ExperimentType,ExperimentTypeParameters WHERE ExperimentType.experiment_type_id = ExperimentTypeParameters.experiment_type_id AND ParameterType.parameter_type_id = ExperimentTypeParameters.parameter_type_id"
				sCmd = sCmd & " AND ExperimentType.experiment_type_id= ?"
		
				oCmd.Parameters.Append oCmd.CreateParameter("sExptType", 5, 1, 0, sExptType) 
				oCmd.CommandText = sCmd
				Set oRS = oCmd.Execute
				oCmd.Parameters.Delete "sExptType"
				if oRS.BOF = True and oRS.EOF = True Then
					Response.Write "<FONT FACE=""Arial"" COLOR=""Navy"" SIZE=""2"">Error retrieving Parameter information for ExperimentType: " & sExptType & "</FONT><BR>"
				else
					i=0
					do while not oRS.EOF = true
						' Fill in the parMap array...
						
						parMap(i, 0) = lsColNum
						pNum1 = oRS("parameter_type_id").Value
						parMap(i, 1) = CInt(pNum1)
						parMap(i, 2) = oRS("parameter_type_name").value
					
						i = i+1
						lsColNum=lsColNum+1
						oRS.MoveNext
					loop
				end if
				if oRS.State = adStateOpen then oRS.Close
				Set oRS = Nothing
			end if
	
			if nRes>0 then
				Redim resMap(nRes-1, 2)

				' Fill in the information for the Result map
				sCmd = "SELECT ResultType.result_type_name, ResultType.result_type_id,ResultType.result_type_units"
				'LJB: change code for oracle compat
				'sCmd = sCmd & " FROM ResultType INNER JOIN (ExperimentType INNER JOIN ExperimentTypeResults ON ExperimentType.experiment_type_id = ExperimentTypeResults.experiment_type_id) ON ResultType.result_type_id = ExperimentTypeResults.result_type_id"
				'sCmd = sCmd & " WHERE (((ExperimentType.experiment_type_id)= " & sExptType & ")) ;"
				sCmd = sCmd & " FROM ResultType,ExperimentType,ExperimentTypeResults WHERE ExperimentType.experiment_type_id = ExperimentTypeResults.experiment_type_id AND ResultType.result_type_id = ExperimentTypeResults.result_type_id"
				sCmd = sCmd & " AND ExperimentType.experiment_type_id= ?"
				oCmd.Parameters.Append oCmd.CreateParameter("sExptType", 5, 1, 0, sExptType) 
				oCmd.CommandText = sCmd
				Set oRS = oCmd.Execute
				oCmd.Parameters.Delete "sExptType"
				if oRS.BOF = True and oRS.EOF = True Then
					Response.Write "<FONT FACE=""Arial"" COLOR=""Navy"" SIZE=""2"">Error retrieving Result information for ExperimentType: " & sExptType & "</FONT><BR>"
				else
					i=0
					do while not oRS.EOF = true
						' Fill in the resMap array...
						
						resMap(i, 0) = lsColNum
						rNum1 = oRS("result_type_id").Value
						resMap(i, 1) =CInt(rNum1)
						
						resMap(i, 2) =oRS("result_type_name").value
					
						i = i+1
						lsColNum=lsColNum+1
						oRS.MoveNext
					loop
				end if
				if oRS.State = adStateOpen then oRS.Close
				Set oRS = Nothing
			end if

			Response.Write "<FONT FACE=""Arial"" COLOR=""Navy"" SIZE=""2"">Number of Experiments: " & nExpts & "</FONT><BR>"
		
			' Now we can form the Arrays ready to take the results from the
			' Experiments, Parameters and Results Tables
			' The columns are 0=GR_Number, 1=batch_id, 2=experiment_id, 3... parameters/results
			redim aDisplay(nExpts,nRes+nPars+2)
		
			' Fill in ROW 0 as the headers...
			aDisplay(0,0) = "Registration #"
			aDisplay(0,1) = "Batch ID"
			aDisplay(0,2) = "Experiment ID"
		
			' Row 0 Parameter headers
			if nPars>0 then
				for j=0 to nPars-1
					aDisplay(0, parMap(j,0)) = parMap(j, 2)
				next
			end if
		
			' Row 0 Result Headers
			if nRes>0 then
				for j=0 to nRes-1
					aDisplay(0, resMap(j,0)) = resMap(j, 2)
				next
			end if
		
			' Get the data for the Experiments
			'sCmd = "SELECT Experiments.experiment_batch_id, Experiments.experiment_id"
			'sCmd = sCmd & " FROM Experiments"
			'sCmd = sCmd & " WHERE Experiments.experiment_type_id = " & sExptType
			'sCmd = sCmd & " ORDER BY Experiments.experiment_batch_id, Experiments.experiment_id"
			
			' Get the Registration number and the batch number...
			sCmd = "select experiments.experiment_batch_id, Experiments.experiment_id, batches.batch_number, reg_numbers.reg_number"
			sCmd = sCmd & " FROM experiments, batches, reg_numbers"
			sCmd = sCmd & " WHERE experiments.experiment_type_id=? AND"
			sCmd = sCmd & " experiments.experiment_batch_id=batches.batch_internal_id AND"
			sCmd = sCmd & " batches.reg_internal_id=reg_numbers.reg_id"
			
			oCmd.Parameters.Append oCmd.CreateParameter("sExptType", 5, 1, 0, sExptType) 
			oCmd.CommandText = sCmd
			Set oRS = oCmd.Execute
			oCmd.Parameters.Delete "sExptType"
			
			'Start at the FIRST row of real data as ROW 0 is the headers...
			liRow=1
						
			if oRS.BOF = True and oRS.EOF = True Then
				Response.Write "<FONT FACE=""Arial"" COLOR=""Navy"" SIZE=""2"">Error retrieving Experiment data for ExperimentType: " & sExptType & "</FONT><BR>"
			else
				liRow=1 
				do while not oRS.EOF = true
					' Fill in this batch/experiment
					aDisplay(liRow, 1) = oRS("experiment_batch_id").Value
					lsExptID = oRS("experiment_id").Value
					aDisplay(liRow, 2) = lsExptID
					fullregNumber = oRS("reg_number").Value & "/" & padNumber("3", oRS("batch_number").Value)
					aDisplay(liRow, 0) = fullregnumber
					if nPars>0 then
						' Get the parameters
						'sCmd = "SELECT Experiments.experiment_id, Experiments.experiment_batch_id, ParameterType.parameter_type_name, Parameters.parameter_value, ParameterType.parameter_type_units, Parameters.parameter_type_id"
						'sCmd = sCmd & " FROM ParameterType INNER JOIN (Experiments INNER JOIN [Parameters] ON Experiments.experiment_id = Parameters.parameter_experiment_id) ON ParameterType.parameter_type_id = Parameters.parameter_type_id"
						'sCmd = sCmd & " WHERE Experiments.experiment_id = " & oRS("experiment_id").value & " ;"
						'LJB: change code for oracle compat
						sCmd = "SELECT Experiments.experiment_id, Experiments.experiment_batch_id, ParameterType.parameter_type_name, Parameters.parameter_value, ParameterType.parameter_type_units, Parameters.parameter_type_id"
						sCmd = sCmd & " FROM ParameterType,Experiments,Parameters WHERE Experiments.experiment_id = Parameters.parameter_experiment_id AND ParameterType.parameter_type_id = Parameters.parameter_type_id"
						sCmd = sCmd & " AND Experiments.experiment_id = ?"

						oCmd.Parameters.Append oCmd.CreateParameter("pExptID", 5, 1, 0, lsExptID) 
						oCmd.CommandText = sCmd
						Set rRS = oCmd.Execute
						oCmd.Parameters.Delete "pExptID"
							
						do while not rRS.EOF = True
							' Run through records assigning parameters to the correct columns
							' Find this parameter and fill in the data
							
							for j = 0 to nPars-1
							rNum1 = CInt(rRS("parameter_type_id").value)
								if parMap(j, 1) = rNum1 then
									aDisplay(liRow, parMap(j, 0)) = rRS("parameter_value").Value
									exit for
								end if
							next
							rRS.MoveNext
						loop
						if rRS.State = adStateOpen then rRS.Close
						Set rRS = Nothing
					end if
					
					if nRes>0 then
						'Get the results
						'sCmd = "SELECT Experiments.experiment_id, Experiments.experiment_batch_id, ResultType.result_type_name, Results.result_value, ResultType.result_type_units, Results.result_type_id"
						'sCmd = sCmd & " FROM ResultType INNER JOIN (Experiments INNER JOIN Results ON Experiments.experiment_id = Results.result_experiment_id) ON ResultType.result_type_id = Results.result_type_id"
						'sCmd = sCmd & " WHERE Experiments.experiment_id = " & oRS("experiment_id").value & " ;"
						'LJB: change code for oracle compat
						sCmd = "SELECT Experiments.experiment_id, Experiments.experiment_batch_id, ResultType.result_type_name, Results.result_value, ResultType.result_type_units, Results.result_type_id"
						sCmd = sCmd & " FROM ResultType,Experiments,Results WHERE Experiments.experiment_id = Results.result_experiment_id AND ResultType.result_type_id = Results.result_type_id"
						sCmd = sCmd & " AND Experiments.experiment_id = ?"
					
						oCmd.Parameters.Append oCmd.CreateParameter("pExptID", 5, 1, 0, lsExptID) 
						oCmd.CommandText = sCmd
						Set rRS = oCmd.Execute
						oCmd.Parameters.Delete "pExptID"
							
						do while not rRS.EOF = True
							' Run through records assigning parameters to the correct columns
							' Find this parameter and fill in the data
							for j = 0 to nRes-1
							rNum1 =rRS("result_type_id").value
								if resMap(j, 1) = CInt(rNum1) then
									aDisplay(liRow, resMap(j, 0)) = rRS("result_value").Value & " " & rRS("result_type_units").Value
									exit for
								end if
							next
							rRS.MoveNext
						loop
						if rRS.State = adStateOpen then rRS.Close
						Set rRS = Nothing
					end if
					
					liRow=liRow+1 ' Fill in the next ROW
					oRS.MoveNext ' Get the next experiment
				loop
			end if
		
			' Now we can write the table from the display array
			Response.Write "<BR><TABLE WIDTH=""600"" BORDER=""1"" CELLPADDING=""2"" CELLSPACING=""1"" BGCOLOR=""NAVY"">"
			nExpts = CInt(nExpts)
			Dim therows
			for therows=0 to nExpts
				Response.Write "<TR>"
				Dim thecols
				for thecols=0 to nPars+nRes+2 ' this is 3 columns + nRes + nPars
				
					if therows=0 then ' Write the headers
						if thecols=0 and lbShowStruct=True then ' Showing Structures and in first column...
							Response.Write "<TD nowrap BGCOLOR=""Silver""><FONT FACE=""Arial"" COLOR=""Black"" SIZE=""2""><STRONG>Structure</STRONG></FONT></TD>"
							Response.Write "<TD nowrap BGCOLOR=""Silver""><FONT FACE=""Arial"" COLOR=""Black"" SIZE=""2""><STRONG>" & aDisplay(therows,thecols) & "&nbsp;</STRONG></FONT></TD>"
						else
							Response.Write "<TD nowrap BGCOLOR=""Silver""><FONT FACE=""Arial"" COLOR=""Black"" SIZE=""2""><STRONG>" & aDisplay(therows,thecols) & "&nbsp;</STRONG></FONT></TD>"
						end if
					else ' Write the data
						
						if thecols=0 and lbShowStruct=True then ' Showing Structures and in first column...
							on error resume next
							lsIntID = aDisplay(therows, 1)
							sCmd = "SELECT Structures.* FROM Structures, Batches, Reg_Numbers"
							sCmd = sCmd & " WHERE Batches.batch_internal_id=?"
							sCmd = sCmd & " AND Batches.reg_internal_id=Reg_Numbers.reg_id"
							sCmd = sCmd & " AND Reg_Numbers.cpd_internal_id=Structures.cpd_internal_id"
							oCmd.Parameters.Append oCmd.CreateParameter("plsIntID", 5, 1, 0, lsIntID) 
							oCmd.CommandText = sCmd
							Set MolRS = oCmd.Execute
							oCmd.Parameters.Delete "plsIntID"
							Response.Write "<TD VALIGN=""center"" ALIGN=""center"" BGCOLOR=""White"">"
							ShowResult dbkey, formgroup, MolRS, "Structures.BASE64_CDX", "Base64CDX", 100, 100
							Response.Write "</TD>"
							
							Response.Write "<TD nowrap BGCOLOR=""#FFFFFF""><FONT FACE=""Arial"" COLOR=""Black"" SIZE=""2"">" & aDisplay(therows,thecols) & "&nbsp;</FONT></TD>"
							if MolRS.State = adStateOpen then MolRS.Close
							Set MolRS=Nothing
						else
							on error resume next
							
							Response.Write "<TD nowrap BGCOLOR=""#FFFFFF""><FONT FACE=""Arial"" COLOR=""Black"" SIZE=""2"">" & aDisplay(therows,thecols) & "&nbsp;</FONT></TD>"
						end if
					end if
				next
				Response.Write "</TR>"
			next
			Response.Write "</TABLE>"
		else
			Response.Write "<FONT FACE=""Arial"" COLOR=""Navy"" SIZE=""2"">No " & lsExptName & " experiments found</FONT><BR>"
		end if ' end of if nExpts>0...
		' End of Phase 2...
		'Response.Write "<BR><A HREF=""" & Session("CurrentLocation" & dbkey & formgroup) & """>Show Another Set of Results</A><BR>"
	end if ' End of if Request.Form()...

%>
</body>
<%
	Set oRS=Nothing
	Set rRS=Nothing
	Set oCmd = Nothing
	CloseConn(RegConn)
%>
<!--#INCLUDE VIRTUAL = "/cfserverasp/source/input_form_footer_vbs.asp"-->
</html>
