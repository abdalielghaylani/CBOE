//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
// 
#pragma warning disable 1591

namespace RegistrationWebserviceTest.COERegistrationServices {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="COERegistrationServicesSoap", Namespace="CambridgeSoft.COE.Registration.Services.Web")]
    public partial class COERegistrationServices : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private COECredentials cOECredentialsValueField;
        
        private System.Threading.SendOrPostCallback GetTempIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback SaveRegistryRecordOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreateTemporaryRegistryRecordOperationCompleted;
        
        private System.Threading.SendOrPostCallback RetrieveTemporaryRegistryRecordOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateTemporaryRegistryRecordOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteTemporaryRegistryRecordOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreateRegistryRecordOperationCompleted;
        
        private System.Threading.SendOrPostCallback RetrieveRegistryRecordOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateRegistryRecordOperationCompleted;
        
        private System.Threading.SendOrPostCallback CheckUniqueRegistryRecordOperationCompleted;
        
        private System.Threading.SendOrPostCallback RetrieveRegistryInfoFromTempBatchIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback RetrievePicklistOperationCompleted;
        
        private System.Threading.SendOrPostCallback RetrieveMatchingFragmentListOperationCompleted;
        
        private System.Threading.SendOrPostCallback RetrieveNewRegistryRecordOperationCompleted;
        
        private System.Threading.SendOrPostCallback UserIsInRolesOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public COERegistrationServices() {
            this.Url = global::RegistrationWebserviceTest.Properties.Settings.Default.RegistrationWebserviceTest_COERegistrationServices_COERegistrationServices;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public COECredentials COECredentialsValue {
            get {
                return this.cOECredentialsValueField;
            }
            set {
                this.cOECredentialsValueField = value;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event GetTempIDCompletedEventHandler GetTempIDCompleted;
        
        /// <remarks/>
        public event SaveRegistryRecordCompletedEventHandler SaveRegistryRecordCompleted;
        
        /// <remarks/>
        public event CreateTemporaryRegistryRecordCompletedEventHandler CreateTemporaryRegistryRecordCompleted;
        
        /// <remarks/>
        public event RetrieveTemporaryRegistryRecordCompletedEventHandler RetrieveTemporaryRegistryRecordCompleted;
        
        /// <remarks/>
        public event UpdateTemporaryRegistryRecordCompletedEventHandler UpdateTemporaryRegistryRecordCompleted;
        
        /// <remarks/>
        public event DeleteTemporaryRegistryRecordCompletedEventHandler DeleteTemporaryRegistryRecordCompleted;
        
        /// <remarks/>
        public event CreateRegistryRecordCompletedEventHandler CreateRegistryRecordCompleted;
        
        /// <remarks/>
        public event RetrieveRegistryRecordCompletedEventHandler RetrieveRegistryRecordCompleted;
        
        /// <remarks/>
        public event UpdateRegistryRecordCompletedEventHandler UpdateRegistryRecordCompleted;
        
        /// <remarks/>
        public event CheckUniqueRegistryRecordCompletedEventHandler CheckUniqueRegistryRecordCompleted;
        
        /// <remarks/>
        public event RetrieveRegistryInfoFromTempBatchIDCompletedEventHandler RetrieveRegistryInfoFromTempBatchIDCompleted;
        
        /// <remarks/>
        public event RetrievePicklistCompletedEventHandler RetrievePicklistCompleted;
        
        /// <remarks/>
        public event RetrieveMatchingFragmentListCompletedEventHandler RetrieveMatchingFragmentListCompleted;
        
        /// <remarks/>
        public event RetrieveNewRegistryRecordCompletedEventHandler RetrieveNewRegistryRecordCompleted;
        
        /// <remarks/>
        public event UserIsInRolesCompletedEventHandler UserIsInRolesCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("COECredentialsValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("CambridgeSoft.COE.Registration.Services.Web/GetTempID", RequestNamespace="CambridgeSoft.COE.Registration.Services.Web", ResponseNamespace="CambridgeSoft.COE.Registration.Services.Web", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetTempID() {
            object[] results = this.Invoke("GetTempID", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetTempIDAsync() {
            this.GetTempIDAsync(null);
        }
        
        /// <remarks/>
        public void GetTempIDAsync(object userState) {
            if ((this.GetTempIDOperationCompleted == null)) {
                this.GetTempIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetTempIDOperationCompleted);
            }
            this.InvokeAsync("GetTempID", new object[0], this.GetTempIDOperationCompleted, userState);
        }
        
        private void OnGetTempIDOperationCompleted(object arg) {
            if ((this.GetTempIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetTempIDCompleted(this, new GetTempIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("COECredentialsValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("CambridgeSoft.COE.Registration.Services.Web/SaveRegistryRecord", RequestNamespace="CambridgeSoft.COE.Registration.Services.Web", ResponseNamespace="CambridgeSoft.COE.Registration.Services.Web", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string SaveRegistryRecord(string registryRecordXml) {
            object[] results = this.Invoke("SaveRegistryRecord", new object[] {
                        registryRecordXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void SaveRegistryRecordAsync(string registryRecordXml) {
            this.SaveRegistryRecordAsync(registryRecordXml, null);
        }
        
        /// <remarks/>
        public void SaveRegistryRecordAsync(string registryRecordXml, object userState) {
            if ((this.SaveRegistryRecordOperationCompleted == null)) {
                this.SaveRegistryRecordOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSaveRegistryRecordOperationCompleted);
            }
            this.InvokeAsync("SaveRegistryRecord", new object[] {
                        registryRecordXml}, this.SaveRegistryRecordOperationCompleted, userState);
        }
        
        private void OnSaveRegistryRecordOperationCompleted(object arg) {
            if ((this.SaveRegistryRecordCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SaveRegistryRecordCompleted(this, new SaveRegistryRecordCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("COECredentialsValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("CambridgeSoft.COE.Registration.Services.Web/CreateTemporaryRegistryRecord", RequestNamespace="CambridgeSoft.COE.Registration.Services.Web", ResponseNamespace="CambridgeSoft.COE.Registration.Services.Web", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string CreateTemporaryRegistryRecord(string xml) {
            object[] results = this.Invoke("CreateTemporaryRegistryRecord", new object[] {
                        xml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void CreateTemporaryRegistryRecordAsync(string xml) {
            this.CreateTemporaryRegistryRecordAsync(xml, null);
        }
        
        /// <remarks/>
        public void CreateTemporaryRegistryRecordAsync(string xml, object userState) {
            if ((this.CreateTemporaryRegistryRecordOperationCompleted == null)) {
                this.CreateTemporaryRegistryRecordOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateTemporaryRegistryRecordOperationCompleted);
            }
            this.InvokeAsync("CreateTemporaryRegistryRecord", new object[] {
                        xml}, this.CreateTemporaryRegistryRecordOperationCompleted, userState);
        }
        
        private void OnCreateTemporaryRegistryRecordOperationCompleted(object arg) {
            if ((this.CreateTemporaryRegistryRecordCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateTemporaryRegistryRecordCompleted(this, new CreateTemporaryRegistryRecordCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("COECredentialsValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("CambridgeSoft.COE.Registration.Services.Web/RetrieveTemporaryRegistryRecord", RequestNamespace="CambridgeSoft.COE.Registration.Services.Web", ResponseNamespace="CambridgeSoft.COE.Registration.Services.Web", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string RetrieveTemporaryRegistryRecord(int id) {
            object[] results = this.Invoke("RetrieveTemporaryRegistryRecord", new object[] {
                        id});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void RetrieveTemporaryRegistryRecordAsync(int id) {
            this.RetrieveTemporaryRegistryRecordAsync(id, null);
        }
        
        /// <remarks/>
        public void RetrieveTemporaryRegistryRecordAsync(int id, object userState) {
            if ((this.RetrieveTemporaryRegistryRecordOperationCompleted == null)) {
                this.RetrieveTemporaryRegistryRecordOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRetrieveTemporaryRegistryRecordOperationCompleted);
            }
            this.InvokeAsync("RetrieveTemporaryRegistryRecord", new object[] {
                        id}, this.RetrieveTemporaryRegistryRecordOperationCompleted, userState);
        }
        
        private void OnRetrieveTemporaryRegistryRecordOperationCompleted(object arg) {
            if ((this.RetrieveTemporaryRegistryRecordCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RetrieveTemporaryRegistryRecordCompleted(this, new RetrieveTemporaryRegistryRecordCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("COECredentialsValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("CambridgeSoft.COE.Registration.Services.Web/UpdateTemporaryRegistryRecord", RequestNamespace="CambridgeSoft.COE.Registration.Services.Web", ResponseNamespace="CambridgeSoft.COE.Registration.Services.Web", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string UpdateTemporaryRegistryRecord(string xml) {
            object[] results = this.Invoke("UpdateTemporaryRegistryRecord", new object[] {
                        xml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateTemporaryRegistryRecordAsync(string xml) {
            this.UpdateTemporaryRegistryRecordAsync(xml, null);
        }
        
        /// <remarks/>
        public void UpdateTemporaryRegistryRecordAsync(string xml, object userState) {
            if ((this.UpdateTemporaryRegistryRecordOperationCompleted == null)) {
                this.UpdateTemporaryRegistryRecordOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateTemporaryRegistryRecordOperationCompleted);
            }
            this.InvokeAsync("UpdateTemporaryRegistryRecord", new object[] {
                        xml}, this.UpdateTemporaryRegistryRecordOperationCompleted, userState);
        }
        
        private void OnUpdateTemporaryRegistryRecordOperationCompleted(object arg) {
            if ((this.UpdateTemporaryRegistryRecordCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateTemporaryRegistryRecordCompleted(this, new UpdateTemporaryRegistryRecordCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("COECredentialsValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("CambridgeSoft.COE.Registration.Services.Web/DeleteTemporaryRegistryRecord", RequestNamespace="CambridgeSoft.COE.Registration.Services.Web", ResponseNamespace="CambridgeSoft.COE.Registration.Services.Web", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string DeleteTemporaryRegistryRecord(int id) {
            object[] results = this.Invoke("DeleteTemporaryRegistryRecord", new object[] {
                        id});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteTemporaryRegistryRecordAsync(int id) {
            this.DeleteTemporaryRegistryRecordAsync(id, null);
        }
        
        /// <remarks/>
        public void DeleteTemporaryRegistryRecordAsync(int id, object userState) {
            if ((this.DeleteTemporaryRegistryRecordOperationCompleted == null)) {
                this.DeleteTemporaryRegistryRecordOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteTemporaryRegistryRecordOperationCompleted);
            }
            this.InvokeAsync("DeleteTemporaryRegistryRecord", new object[] {
                        id}, this.DeleteTemporaryRegistryRecordOperationCompleted, userState);
        }
        
        private void OnDeleteTemporaryRegistryRecordOperationCompleted(object arg) {
            if ((this.DeleteTemporaryRegistryRecordCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteTemporaryRegistryRecordCompleted(this, new DeleteTemporaryRegistryRecordCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("COECredentialsValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("CambridgeSoft.COE.Registration.Services.Web/CreateRegistryRecord", RequestNamespace="CambridgeSoft.COE.Registration.Services.Web", ResponseNamespace="CambridgeSoft.COE.Registration.Services.Web", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string CreateRegistryRecord(string xml, string duplicateAction) {
            object[] results = this.Invoke("CreateRegistryRecord", new object[] {
                        xml,
                        duplicateAction});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void CreateRegistryRecordAsync(string xml, string duplicateAction) {
            this.CreateRegistryRecordAsync(xml, duplicateAction, null);
        }
        
        /// <remarks/>
        public void CreateRegistryRecordAsync(string xml, string duplicateAction, object userState) {
            if ((this.CreateRegistryRecordOperationCompleted == null)) {
                this.CreateRegistryRecordOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateRegistryRecordOperationCompleted);
            }
            this.InvokeAsync("CreateRegistryRecord", new object[] {
                        xml,
                        duplicateAction}, this.CreateRegistryRecordOperationCompleted, userState);
        }
        
        private void OnCreateRegistryRecordOperationCompleted(object arg) {
            if ((this.CreateRegistryRecordCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateRegistryRecordCompleted(this, new CreateRegistryRecordCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("COECredentialsValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("CambridgeSoft.COE.Registration.Services.Web/RetrieveRegistryRecord", RequestNamespace="CambridgeSoft.COE.Registration.Services.Web", ResponseNamespace="CambridgeSoft.COE.Registration.Services.Web", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string RetrieveRegistryRecord(string regNum) {
            object[] results = this.Invoke("RetrieveRegistryRecord", new object[] {
                        regNum});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void RetrieveRegistryRecordAsync(string regNum) {
            this.RetrieveRegistryRecordAsync(regNum, null);
        }
        
        /// <remarks/>
        public void RetrieveRegistryRecordAsync(string regNum, object userState) {
            if ((this.RetrieveRegistryRecordOperationCompleted == null)) {
                this.RetrieveRegistryRecordOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRetrieveRegistryRecordOperationCompleted);
            }
            this.InvokeAsync("RetrieveRegistryRecord", new object[] {
                        regNum}, this.RetrieveRegistryRecordOperationCompleted, userState);
        }
        
        private void OnRetrieveRegistryRecordOperationCompleted(object arg) {
            if ((this.RetrieveRegistryRecordCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RetrieveRegistryRecordCompleted(this, new RetrieveRegistryRecordCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("COECredentialsValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("CambridgeSoft.COE.Registration.Services.Web/UpdateRegistryRecord", RequestNamespace="CambridgeSoft.COE.Registration.Services.Web", ResponseNamespace="CambridgeSoft.COE.Registration.Services.Web", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string UpdateRegistryRecord(string xml) {
            object[] results = this.Invoke("UpdateRegistryRecord", new object[] {
                        xml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateRegistryRecordAsync(string xml) {
            this.UpdateRegistryRecordAsync(xml, null);
        }
        
        /// <remarks/>
        public void UpdateRegistryRecordAsync(string xml, object userState) {
            if ((this.UpdateRegistryRecordOperationCompleted == null)) {
                this.UpdateRegistryRecordOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateRegistryRecordOperationCompleted);
            }
            this.InvokeAsync("UpdateRegistryRecord", new object[] {
                        xml}, this.UpdateRegistryRecordOperationCompleted, userState);
        }
        
        private void OnUpdateRegistryRecordOperationCompleted(object arg) {
            if ((this.UpdateRegistryRecordCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateRegistryRecordCompleted(this, new UpdateRegistryRecordCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("COECredentialsValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("CambridgeSoft.COE.Registration.Services.Web/CheckUniqueRegistryRecord", RequestNamespace="CambridgeSoft.COE.Registration.Services.Web", ResponseNamespace="CambridgeSoft.COE.Registration.Services.Web", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string CheckUniqueRegistryRecord(string xml, string duplicateCheck) {
            object[] results = this.Invoke("CheckUniqueRegistryRecord", new object[] {
                        xml,
                        duplicateCheck});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void CheckUniqueRegistryRecordAsync(string xml, string duplicateCheck) {
            this.CheckUniqueRegistryRecordAsync(xml, duplicateCheck, null);
        }
        
        /// <remarks/>
        public void CheckUniqueRegistryRecordAsync(string xml, string duplicateCheck, object userState) {
            if ((this.CheckUniqueRegistryRecordOperationCompleted == null)) {
                this.CheckUniqueRegistryRecordOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCheckUniqueRegistryRecordOperationCompleted);
            }
            this.InvokeAsync("CheckUniqueRegistryRecord", new object[] {
                        xml,
                        duplicateCheck}, this.CheckUniqueRegistryRecordOperationCompleted, userState);
        }
        
        private void OnCheckUniqueRegistryRecordOperationCompleted(object arg) {
            if ((this.CheckUniqueRegistryRecordCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CheckUniqueRegistryRecordCompleted(this, new CheckUniqueRegistryRecordCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("COECredentialsValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("CambridgeSoft.COE.Registration.Services.Web/RetrieveRegistryInfoFromTempBatchID", RequestNamespace="CambridgeSoft.COE.Registration.Services.Web", ResponseNamespace="CambridgeSoft.COE.Registration.Services.Web", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string RetrieveRegistryInfoFromTempBatchID(int tempBatchID) {
            object[] results = this.Invoke("RetrieveRegistryInfoFromTempBatchID", new object[] {
                        tempBatchID});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void RetrieveRegistryInfoFromTempBatchIDAsync(int tempBatchID) {
            this.RetrieveRegistryInfoFromTempBatchIDAsync(tempBatchID, null);
        }
        
        /// <remarks/>
        public void RetrieveRegistryInfoFromTempBatchIDAsync(int tempBatchID, object userState) {
            if ((this.RetrieveRegistryInfoFromTempBatchIDOperationCompleted == null)) {
                this.RetrieveRegistryInfoFromTempBatchIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRetrieveRegistryInfoFromTempBatchIDOperationCompleted);
            }
            this.InvokeAsync("RetrieveRegistryInfoFromTempBatchID", new object[] {
                        tempBatchID}, this.RetrieveRegistryInfoFromTempBatchIDOperationCompleted, userState);
        }
        
        private void OnRetrieveRegistryInfoFromTempBatchIDOperationCompleted(object arg) {
            if ((this.RetrieveRegistryInfoFromTempBatchIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RetrieveRegistryInfoFromTempBatchIDCompleted(this, new RetrieveRegistryInfoFromTempBatchIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("COECredentialsValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("CambridgeSoft.COE.Registration.Services.Web/RetrievePicklist", RequestNamespace="CambridgeSoft.COE.Registration.Services.Web", ResponseNamespace="CambridgeSoft.COE.Registration.Services.Web", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string RetrievePicklist(string strCriteria) {
            object[] results = this.Invoke("RetrievePicklist", new object[] {
                        strCriteria});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void RetrievePicklistAsync(string strCriteria) {
            this.RetrievePicklistAsync(strCriteria, null);
        }
        
        /// <remarks/>
        public void RetrievePicklistAsync(string strCriteria, object userState) {
            if ((this.RetrievePicklistOperationCompleted == null)) {
                this.RetrievePicklistOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRetrievePicklistOperationCompleted);
            }
            this.InvokeAsync("RetrievePicklist", new object[] {
                        strCriteria}, this.RetrievePicklistOperationCompleted, userState);
        }
        
        private void OnRetrievePicklistOperationCompleted(object arg) {
            if ((this.RetrievePicklistCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RetrievePicklistCompleted(this, new RetrievePicklistCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("COECredentialsValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("CambridgeSoft.COE.Registration.Services.Web/RetrieveMatchingFragmentList", RequestNamespace="CambridgeSoft.COE.Registration.Services.Web", ResponseNamespace="CambridgeSoft.COE.Registration.Services.Web", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string RetrieveMatchingFragmentList(string searchExpression) {
            object[] results = this.Invoke("RetrieveMatchingFragmentList", new object[] {
                        searchExpression});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void RetrieveMatchingFragmentListAsync(string searchExpression) {
            this.RetrieveMatchingFragmentListAsync(searchExpression, null);
        }
        
        /// <remarks/>
        public void RetrieveMatchingFragmentListAsync(string searchExpression, object userState) {
            if ((this.RetrieveMatchingFragmentListOperationCompleted == null)) {
                this.RetrieveMatchingFragmentListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRetrieveMatchingFragmentListOperationCompleted);
            }
            this.InvokeAsync("RetrieveMatchingFragmentList", new object[] {
                        searchExpression}, this.RetrieveMatchingFragmentListOperationCompleted, userState);
        }
        
        private void OnRetrieveMatchingFragmentListOperationCompleted(object arg) {
            if ((this.RetrieveMatchingFragmentListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RetrieveMatchingFragmentListCompleted(this, new RetrieveMatchingFragmentListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("COECredentialsValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("CambridgeSoft.COE.Registration.Services.Web/RetrieveNewRegistryRecord", RequestNamespace="CambridgeSoft.COE.Registration.Services.Web", ResponseNamespace="CambridgeSoft.COE.Registration.Services.Web", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string RetrieveNewRegistryRecord() {
            object[] results = this.Invoke("RetrieveNewRegistryRecord", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void RetrieveNewRegistryRecordAsync() {
            this.RetrieveNewRegistryRecordAsync(null);
        }
        
        /// <remarks/>
        public void RetrieveNewRegistryRecordAsync(object userState) {
            if ((this.RetrieveNewRegistryRecordOperationCompleted == null)) {
                this.RetrieveNewRegistryRecordOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRetrieveNewRegistryRecordOperationCompleted);
            }
            this.InvokeAsync("RetrieveNewRegistryRecord", new object[0], this.RetrieveNewRegistryRecordOperationCompleted, userState);
        }
        
        private void OnRetrieveNewRegistryRecordOperationCompleted(object arg) {
            if ((this.RetrieveNewRegistryRecordCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RetrieveNewRegistryRecordCompleted(this, new RetrieveNewRegistryRecordCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("COECredentialsValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("CambridgeSoft.COE.Registration.Services.Web/UserIsInRoles", RequestNamespace="CambridgeSoft.COE.Registration.Services.Web", ResponseNamespace="CambridgeSoft.COE.Registration.Services.Web", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string UserIsInRoles(string vstrRoles) {
            object[] results = this.Invoke("UserIsInRoles", new object[] {
                        vstrRoles});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void UserIsInRolesAsync(string vstrRoles) {
            this.UserIsInRolesAsync(vstrRoles, null);
        }
        
        /// <remarks/>
        public void UserIsInRolesAsync(string vstrRoles, object userState) {
            if ((this.UserIsInRolesOperationCompleted == null)) {
                this.UserIsInRolesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUserIsInRolesOperationCompleted);
            }
            this.InvokeAsync("UserIsInRoles", new object[] {
                        vstrRoles}, this.UserIsInRolesOperationCompleted, userState);
        }
        
        private void OnUserIsInRolesOperationCompleted(object arg) {
            if ((this.UserIsInRolesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UserIsInRolesCompleted(this, new UserIsInRolesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.3062.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="CambridgeSoft.COE.Registration.Services.Web")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="CambridgeSoft.COE.Registration.Services.Web", IsNullable=false)]
    public partial class COECredentials : System.Web.Services.Protocols.SoapHeader {
        
        private string authenticationTicketField;
        
        private string userNameField;
        
        private string passwordField;
        
        private System.Xml.XmlAttribute[] anyAttrField;
        
        /// <remarks/>
        public string AuthenticationTicket {
            get {
                return this.authenticationTicketField;
            }
            set {
                this.authenticationTicketField = value;
            }
        }
        
        /// <remarks/>
        public string UserName {
            get {
                return this.userNameField;
            }
            set {
                this.userNameField = value;
            }
        }
        
        /// <remarks/>
        public string Password {
            get {
                return this.passwordField;
            }
            set {
                this.passwordField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyAttributeAttribute()]
        public System.Xml.XmlAttribute[] AnyAttr {
            get {
                return this.anyAttrField;
            }
            set {
                this.anyAttrField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void GetTempIDCompletedEventHandler(object sender, GetTempIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetTempIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetTempIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void SaveRegistryRecordCompletedEventHandler(object sender, SaveRegistryRecordCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SaveRegistryRecordCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SaveRegistryRecordCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void CreateTemporaryRegistryRecordCompletedEventHandler(object sender, CreateTemporaryRegistryRecordCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreateTemporaryRegistryRecordCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreateTemporaryRegistryRecordCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void RetrieveTemporaryRegistryRecordCompletedEventHandler(object sender, RetrieveTemporaryRegistryRecordCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RetrieveTemporaryRegistryRecordCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RetrieveTemporaryRegistryRecordCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void UpdateTemporaryRegistryRecordCompletedEventHandler(object sender, UpdateTemporaryRegistryRecordCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateTemporaryRegistryRecordCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateTemporaryRegistryRecordCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void DeleteTemporaryRegistryRecordCompletedEventHandler(object sender, DeleteTemporaryRegistryRecordCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteTemporaryRegistryRecordCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteTemporaryRegistryRecordCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void CreateRegistryRecordCompletedEventHandler(object sender, CreateRegistryRecordCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreateRegistryRecordCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreateRegistryRecordCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void RetrieveRegistryRecordCompletedEventHandler(object sender, RetrieveRegistryRecordCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RetrieveRegistryRecordCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RetrieveRegistryRecordCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void UpdateRegistryRecordCompletedEventHandler(object sender, UpdateRegistryRecordCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateRegistryRecordCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateRegistryRecordCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void CheckUniqueRegistryRecordCompletedEventHandler(object sender, CheckUniqueRegistryRecordCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CheckUniqueRegistryRecordCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CheckUniqueRegistryRecordCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void RetrieveRegistryInfoFromTempBatchIDCompletedEventHandler(object sender, RetrieveRegistryInfoFromTempBatchIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RetrieveRegistryInfoFromTempBatchIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RetrieveRegistryInfoFromTempBatchIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void RetrievePicklistCompletedEventHandler(object sender, RetrievePicklistCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RetrievePicklistCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RetrievePicklistCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void RetrieveMatchingFragmentListCompletedEventHandler(object sender, RetrieveMatchingFragmentListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RetrieveMatchingFragmentListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RetrieveMatchingFragmentListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void RetrieveNewRegistryRecordCompletedEventHandler(object sender, RetrieveNewRegistryRecordCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RetrieveNewRegistryRecordCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RetrieveNewRegistryRecordCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    public delegate void UserIsInRolesCompletedEventHandler(object sender, UserIsInRolesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3062.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UserIsInRolesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UserIsInRolesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591