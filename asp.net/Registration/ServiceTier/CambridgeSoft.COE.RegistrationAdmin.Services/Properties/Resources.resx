<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="CreateConfigurationProperty" xml:space="preserve">
    <value>creating a configuration property</value>
  </data>
  <data name="CreateConfigurationRegistryRecord" xml:space="preserve">
    <value>creating a configuration registry record</value>
  </data>
  <data name="CreateEventList" xml:space="preserve">
    <value>creating a event list</value>
  </data>
  <data name="ExistEventCheck" xml:space="preserve">
    <value>checking the existence of an event in a list</value>
  </data>
  <data name="ExportComponentDuplicatesForm" xml:space="preserve">
    <value>exporting component duplicates form</value>
  </data>
  <data name="ExportDataLoaderForm" xml:space="preserve">
    <value>exporting data loader form</value>
  </data>
  <data name="ExportDeleteLogForm" xml:space="preserve">
    <value>exporting delete log form</value>
  </data>
  <data name="ExportELNSearchPermForm" xml:space="preserve">
    <value>exporting ELN search permanent form</value>
  </data>
  <data name="ExportELNSearchTempForm" xml:space="preserve">
    <value>exporting ELN search temperal form</value>
  </data>
  <data name="ExportRegistryDuplicatesForm" xml:space="preserve">
    <value>exporting registry duplicates form</value>
  </data>
  <data name="ExportReviewMixtureForm" xml:space="preserve">
    <value>exporting review mixture form</value>
  </data>
  <data name="ExportSearchComponentsToAddForm" xml:space="preserve">
    <value>exporting search components to add form</value>
  </data>
  <data name="ExportSearchComponentsToAddRRForm" xml:space="preserve">
    <value>exporting search components to add registry record form</value>
  </data>
  <data name="ExportSearchPermForm" xml:space="preserve">
    <value>exporting search permanent form</value>
  </data>
  <data name="ExportSearchTempForm" xml:space="preserve">
    <value>exporting search temperal form</value>
  </data>
  <data name="ExportSendToRegistrationForm" xml:space="preserve">
    <value>exporting send to registrytion form</value>
  </data>
  <data name="ExportSubmitMixtureForm" xml:space="preserve">
    <value>exporting submit mixture form</value>
  </data>
  <data name="ExportViewMixtureForm" xml:space="preserve">
    <value>exporting view mixture form</value>
  </data>
  <data name="GetConfigurationPropertyXml" xml:space="preserve">
    <value>trying to get the xml representation of a configuration property</value>
  </data>
  <data name="GetConfigurationRegistryRecordXml" xml:space="preserve">
    <value>trying to get the xml representation of a configuration registry record</value>
  </data>
  <data name="GetConfigurationSettingsXml" xml:space="preserve">
    <value>trying to get an App config setting xml</value>
  </data>
  <data name="GetCustomPropertyStyles" xml:space="preserve">
    <value>trying to get configuration settings of registration custom property styles</value>
  </data>
  <data name="GetEventXml" xml:space="preserve">
    <value>trying to get the xml representation of an event</value>
  </data>
  <data name="GetRegCustomFormGroupsIds" xml:space="preserve">
    <value>trying to get configuration settings of registration custom FormgroupsIds</value>
  </data>
  <data name="GetTable" xml:space="preserve">
    <value>trying to get the specified table</value>
  </data>
  <data name="ImportConfigurationSettings" xml:space="preserve">
    <value>importing configuration settings</value>
  </data>
  <data name="ImportCustomizedProperties" xml:space="preserve">
    <value>importing customized properties to configuration registry record</value>
  </data>
  <data name="ImportDataView" xml:space="preserve">
    <value>importing data view</value>
  </data>
  <data name="ImportForm" xml:space="preserve">
    <value>importing form</value>
  </data>
  <data name="ImportIniFiles" xml:space="preserve">
    <value>importing ini files</value>
  </data>
  <data name="ImportIniFormField" xml:space="preserve">
    <value>importing COE form fields from ini</value>
  </data>
  <data name="ImportTableList" xml:space="preserve">
    <value>importing a table list</value>
  </data>
  <data name="LogFormFieldImport" xml:space="preserve">
    <value>logging the result of form filesd importing</value>
  </data>
  <data name="LogIniImport" xml:space="preserve">
    <value>logging messages about ini importing</value>
  </data>
  <data name="RemoveListenerFromTrace" xml:space="preserve">
    <value>removing the listener for the current import process to prevent other code from logging irrelevant content into the log file</value>
  </data>
  <data name="UpdatePeopleProjectTableVisibilty" xml:space="preserve">
    <value>updating the visibility of Table Editor's People Project child table</value>
  </data>
  <data name="CreateCOEFormHelper" xml:space="preserve">
    <value>creating a COEFormHelper</value>
  </data>
  <data name="LoadCOEFormGroups" xml:space="preserve">
    <value>loading COE Form Groups</value>
  </data>
  <data name="SaveFormGroup" xml:space="preserve">
    <value>saving FormGroup</value>
  </data>
  <data name="UpdateFormGroupFromIniFormFields" xml:space="preserve">
    <value>updating FormGroup from ini form fields</value>
  </data>
  <data name="CreateAddInList" xml:space="preserve">
    <value>creating a new AddIn list</value>
  </data>
  <data name="GetAddInListXml" xml:space="preserve">
    <value>trying to get the xml representation of an AddIn</value>
  </data>
  <data name="CreateNewAddInClass" xml:space="preserve">
    <value>creating a new AddIn class</value>
  </data>
  <data name="CreateAddInAssembly" xml:space="preserve">
    <value>creating a new AddIn assembly</value>
  </data>
  <data name="CreateAddIn" xml:space="preserve">
    <value>creating a new AddIn</value>
  </data>
  <data name="GetAddInXml" xml:space="preserve">
    <value>trying to get the xml representation of an AddIn</value>
  </data>
  <data name="ApplicationName" xml:space="preserve">
    <value>REGISTRATION</value>
  </data>
  <data name="BatchLevelProjectsSettingName" xml:space="preserve">
    <value>BatchProjectsUsed</value>
  </data>
  <data name="BatchLevelProjectsValue" xml:space="preserve">
    <value>Batch Level Projects</value>
  </data>
  <data name="ProjectsAndBatchSettingsSection" xml:space="preserve">
    <value>MISC</value>
  </data>
  <data name="ProjectsUsedSettingName" xml:space="preserve">
    <value>ProjectsUsed</value>
  </data>
  <data name="RegistryLevelProjectsValue" xml:space="preserve">
    <value>Registry Level Projects</value>
  </data>
  <data name="DisableRLS" xml:space="preserve">
    <value>Off</value>
  </data>
</root>
