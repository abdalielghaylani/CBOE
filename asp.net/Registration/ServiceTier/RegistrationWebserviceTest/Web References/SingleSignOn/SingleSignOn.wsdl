<?xml version="1.0" encoding="utf-8"?>
<wsdl:definitions xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:tm="http://microsoft.com/wsdl/mime/textMatching/" xmlns:soapenc="http://schemas.xmlsoap.org/soap/encoding/" xmlns:mime="http://schemas.xmlsoap.org/wsdl/mime/" xmlns:tns="http://cambridgesoft.com/" xmlns:s="http://www.w3.org/2001/XMLSchema" xmlns:soap12="http://schemas.xmlsoap.org/wsdl/soap12/" xmlns:http="http://schemas.xmlsoap.org/wsdl/http/" targetNamespace="http://cambridgesoft.com/" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">
  <wsdl:types>
    <s:schema elementFormDefault="qualified" targetNamespace="http://cambridgesoft.com/">
      <s:element name="GetAuthenticationTicket">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="userName" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="password" type="s:string" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="GetAuthenticationTicketResponse">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="GetAuthenticationTicketResult" type="s:string" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="Authenticate">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="userName" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="password" type="s:string" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="AuthenticateResponse">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="1" maxOccurs="1" name="AuthenticateResult" type="s:boolean" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="GetCSSecurityPwd">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="encryptedTicket" type="s:string" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="GetCSSecurityPwdResponse">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="GetCSSecurityPwdResult" type="s:string" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="ValidateTicket">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="encryptedTicket" type="s:string" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="ValidateTicketResponse">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="1" maxOccurs="1" name="ValidateTicketResult" type="s:boolean" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="RenewTicketIfOld">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="encryptedTicket" type="s:string" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="RenewTicketIfOldResponse">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="RenewTicketIfOldResult" type="s:string" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="RenewTicket">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="encryptedTicket" type="s:string" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="RenewTicketResponse">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="RenewTicketResult" type="s:string" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="GetUserFromTicket">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="encryptedTicket" type="s:string" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="GetUserFromTicketResponse">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="GetUserFromTicketResult" type="s:string" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="GetUserDataFromTicket">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="encryptedTicket" type="s:string" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="GetUserDataFromTicketResponse">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="GetUserDataFromTicketResult" type="s:string" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="GetTicketExpirationDate">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="encryptedTicket" type="s:string" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="GetTicketExpirationDateResponse">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="1" maxOccurs="1" name="GetTicketExpirationDateResult" type="s:dateTime" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="GetTicketIssueDate">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="encryptedTicket" type="s:string" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="GetTicketIssueDateResponse">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="1" maxOccurs="1" name="GetTicketIssueDateResult" type="s:dateTime" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="EchoString">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="s" type="s:string" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="EchoStringResponse">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="EchoStringResult" type="s:string" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="GetCookieName">
        <s:complexType />
      </s:element>
      <s:element name="GetCookieNameResponse">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="GetCookieNameResult" type="s:string" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="UserExists">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="userName" type="s:string" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="UserExistsResponse">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="1" maxOccurs="1" name="UserExistsResult" type="s:boolean" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="GetUserInfo">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="userName" type="s:string" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="GetUserInfoResponse">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="GetUserInfoResult">
              <s:complexType mixed="true">
                <s:sequence>
                  <s:any />
                </s:sequence>
              </s:complexType>
            </s:element>
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="GetUserInfoAsString">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="userName" type="s:string" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="GetUserInfoAsStringResponse">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="GetUserInfoAsStringResult" type="s:string" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="IsExemptUser">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="userName" type="s:string" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="IsExemptUserResponse">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="1" maxOccurs="1" name="IsExemptUserResult" type="s:boolean" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="GetDefaultAuthenticationProvider">
        <s:complexType />
      </s:element>
      <s:element name="GetDefaultAuthenticationProviderResponse">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="GetDefaultAuthenticationProviderResult" type="s:string" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="AddExemptUser">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="userName" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="password" type="s:string" />
            <s:element minOccurs="0" maxOccurs="1" name="provider" type="s:string" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="AddExemptUserResponse">
        <s:complexType>
          <s:sequence>
            <s:element minOccurs="0" maxOccurs="1" name="AddExemptUserResult" type="s:string" />
          </s:sequence>
        </s:complexType>
      </s:element>
      <s:element name="string" nillable="true" type="s:string" />
      <s:element name="boolean" type="s:boolean" />
      <s:element name="dateTime" type="s:dateTime" />
    </s:schema>
  </wsdl:types>
  <wsdl:message name="GetAuthenticationTicketSoapIn">
    <wsdl:part name="parameters" element="tns:GetAuthenticationTicket" />
  </wsdl:message>
  <wsdl:message name="GetAuthenticationTicketSoapOut">
    <wsdl:part name="parameters" element="tns:GetAuthenticationTicketResponse" />
  </wsdl:message>
  <wsdl:message name="AuthenticateSoapIn">
    <wsdl:part name="parameters" element="tns:Authenticate" />
  </wsdl:message>
  <wsdl:message name="AuthenticateSoapOut">
    <wsdl:part name="parameters" element="tns:AuthenticateResponse" />
  </wsdl:message>
  <wsdl:message name="GetCSSecurityPwdSoapIn">
    <wsdl:part name="parameters" element="tns:GetCSSecurityPwd" />
  </wsdl:message>
  <wsdl:message name="GetCSSecurityPwdSoapOut">
    <wsdl:part name="parameters" element="tns:GetCSSecurityPwdResponse" />
  </wsdl:message>
  <wsdl:message name="ValidateTicketSoapIn">
    <wsdl:part name="parameters" element="tns:ValidateTicket" />
  </wsdl:message>
  <wsdl:message name="ValidateTicketSoapOut">
    <wsdl:part name="parameters" element="tns:ValidateTicketResponse" />
  </wsdl:message>
  <wsdl:message name="RenewTicketIfOldSoapIn">
    <wsdl:part name="parameters" element="tns:RenewTicketIfOld" />
  </wsdl:message>
  <wsdl:message name="RenewTicketIfOldSoapOut">
    <wsdl:part name="parameters" element="tns:RenewTicketIfOldResponse" />
  </wsdl:message>
  <wsdl:message name="RenewTicketSoapIn">
    <wsdl:part name="parameters" element="tns:RenewTicket" />
  </wsdl:message>
  <wsdl:message name="RenewTicketSoapOut">
    <wsdl:part name="parameters" element="tns:RenewTicketResponse" />
  </wsdl:message>
  <wsdl:message name="GetUserFromTicketSoapIn">
    <wsdl:part name="parameters" element="tns:GetUserFromTicket" />
  </wsdl:message>
  <wsdl:message name="GetUserFromTicketSoapOut">
    <wsdl:part name="parameters" element="tns:GetUserFromTicketResponse" />
  </wsdl:message>
  <wsdl:message name="GetUserDataFromTicketSoapIn">
    <wsdl:part name="parameters" element="tns:GetUserDataFromTicket" />
  </wsdl:message>
  <wsdl:message name="GetUserDataFromTicketSoapOut">
    <wsdl:part name="parameters" element="tns:GetUserDataFromTicketResponse" />
  </wsdl:message>
  <wsdl:message name="GetTicketExpirationDateSoapIn">
    <wsdl:part name="parameters" element="tns:GetTicketExpirationDate" />
  </wsdl:message>
  <wsdl:message name="GetTicketExpirationDateSoapOut">
    <wsdl:part name="parameters" element="tns:GetTicketExpirationDateResponse" />
  </wsdl:message>
  <wsdl:message name="GetTicketIssueDateSoapIn">
    <wsdl:part name="parameters" element="tns:GetTicketIssueDate" />
  </wsdl:message>
  <wsdl:message name="GetTicketIssueDateSoapOut">
    <wsdl:part name="parameters" element="tns:GetTicketIssueDateResponse" />
  </wsdl:message>
  <wsdl:message name="EchoStringSoapIn">
    <wsdl:part name="parameters" element="tns:EchoString" />
  </wsdl:message>
  <wsdl:message name="EchoStringSoapOut">
    <wsdl:part name="parameters" element="tns:EchoStringResponse" />
  </wsdl:message>
  <wsdl:message name="GetCookieNameSoapIn">
    <wsdl:part name="parameters" element="tns:GetCookieName" />
  </wsdl:message>
  <wsdl:message name="GetCookieNameSoapOut">
    <wsdl:part name="parameters" element="tns:GetCookieNameResponse" />
  </wsdl:message>
  <wsdl:message name="UserExistsSoapIn">
    <wsdl:part name="parameters" element="tns:UserExists" />
  </wsdl:message>
  <wsdl:message name="UserExistsSoapOut">
    <wsdl:part name="parameters" element="tns:UserExistsResponse" />
  </wsdl:message>
  <wsdl:message name="GetUserInfoSoapIn">
    <wsdl:part name="parameters" element="tns:GetUserInfo" />
  </wsdl:message>
  <wsdl:message name="GetUserInfoSoapOut">
    <wsdl:part name="parameters" element="tns:GetUserInfoResponse" />
  </wsdl:message>
  <wsdl:message name="GetUserInfoAsStringSoapIn">
    <wsdl:part name="parameters" element="tns:GetUserInfoAsString" />
  </wsdl:message>
  <wsdl:message name="GetUserInfoAsStringSoapOut">
    <wsdl:part name="parameters" element="tns:GetUserInfoAsStringResponse" />
  </wsdl:message>
  <wsdl:message name="IsExemptUserSoapIn">
    <wsdl:part name="parameters" element="tns:IsExemptUser" />
  </wsdl:message>
  <wsdl:message name="IsExemptUserSoapOut">
    <wsdl:part name="parameters" element="tns:IsExemptUserResponse" />
  </wsdl:message>
  <wsdl:message name="GetDefaultAuthenticationProviderSoapIn">
    <wsdl:part name="parameters" element="tns:GetDefaultAuthenticationProvider" />
  </wsdl:message>
  <wsdl:message name="GetDefaultAuthenticationProviderSoapOut">
    <wsdl:part name="parameters" element="tns:GetDefaultAuthenticationProviderResponse" />
  </wsdl:message>
  <wsdl:message name="AddExemptUserSoapIn">
    <wsdl:part name="parameters" element="tns:AddExemptUser" />
  </wsdl:message>
  <wsdl:message name="AddExemptUserSoapOut">
    <wsdl:part name="parameters" element="tns:AddExemptUserResponse" />
  </wsdl:message>
  <wsdl:message name="GetAuthenticationTicketHttpGetIn">
    <wsdl:part name="userName" type="s:string" />
    <wsdl:part name="password" type="s:string" />
  </wsdl:message>
  <wsdl:message name="GetAuthenticationTicketHttpGetOut">
    <wsdl:part name="Body" element="tns:string" />
  </wsdl:message>
  <wsdl:message name="AuthenticateHttpGetIn">
    <wsdl:part name="userName" type="s:string" />
    <wsdl:part name="password" type="s:string" />
  </wsdl:message>
  <wsdl:message name="AuthenticateHttpGetOut">
    <wsdl:part name="Body" element="tns:boolean" />
  </wsdl:message>
  <wsdl:message name="GetCSSecurityPwdHttpGetIn">
    <wsdl:part name="encryptedTicket" type="s:string" />
  </wsdl:message>
  <wsdl:message name="GetCSSecurityPwdHttpGetOut">
    <wsdl:part name="Body" element="tns:string" />
  </wsdl:message>
  <wsdl:message name="ValidateTicketHttpGetIn">
    <wsdl:part name="encryptedTicket" type="s:string" />
  </wsdl:message>
  <wsdl:message name="ValidateTicketHttpGetOut">
    <wsdl:part name="Body" element="tns:boolean" />
  </wsdl:message>
  <wsdl:message name="RenewTicketIfOldHttpGetIn">
    <wsdl:part name="encryptedTicket" type="s:string" />
  </wsdl:message>
  <wsdl:message name="RenewTicketIfOldHttpGetOut">
    <wsdl:part name="Body" element="tns:string" />
  </wsdl:message>
  <wsdl:message name="RenewTicketHttpGetIn">
    <wsdl:part name="encryptedTicket" type="s:string" />
  </wsdl:message>
  <wsdl:message name="RenewTicketHttpGetOut">
    <wsdl:part name="Body" element="tns:string" />
  </wsdl:message>
  <wsdl:message name="GetUserFromTicketHttpGetIn">
    <wsdl:part name="encryptedTicket" type="s:string" />
  </wsdl:message>
  <wsdl:message name="GetUserFromTicketHttpGetOut">
    <wsdl:part name="Body" element="tns:string" />
  </wsdl:message>
  <wsdl:message name="GetUserDataFromTicketHttpGetIn">
    <wsdl:part name="encryptedTicket" type="s:string" />
  </wsdl:message>
  <wsdl:message name="GetUserDataFromTicketHttpGetOut">
    <wsdl:part name="Body" element="tns:string" />
  </wsdl:message>
  <wsdl:message name="GetTicketExpirationDateHttpGetIn">
    <wsdl:part name="encryptedTicket" type="s:string" />
  </wsdl:message>
  <wsdl:message name="GetTicketExpirationDateHttpGetOut">
    <wsdl:part name="Body" element="tns:dateTime" />
  </wsdl:message>
  <wsdl:message name="GetTicketIssueDateHttpGetIn">
    <wsdl:part name="encryptedTicket" type="s:string" />
  </wsdl:message>
  <wsdl:message name="GetTicketIssueDateHttpGetOut">
    <wsdl:part name="Body" element="tns:dateTime" />
  </wsdl:message>
  <wsdl:message name="EchoStringHttpGetIn">
    <wsdl:part name="s" type="s:string" />
  </wsdl:message>
  <wsdl:message name="EchoStringHttpGetOut">
    <wsdl:part name="Body" element="tns:string" />
  </wsdl:message>
  <wsdl:message name="GetCookieNameHttpGetIn" />
  <wsdl:message name="GetCookieNameHttpGetOut">
    <wsdl:part name="Body" element="tns:string" />
  </wsdl:message>
  <wsdl:message name="UserExistsHttpGetIn">
    <wsdl:part name="userName" type="s:string" />
  </wsdl:message>
  <wsdl:message name="UserExistsHttpGetOut">
    <wsdl:part name="Body" element="tns:boolean" />
  </wsdl:message>
  <wsdl:message name="GetUserInfoHttpGetIn">
    <wsdl:part name="userName" type="s:string" />
  </wsdl:message>
  <wsdl:message name="GetUserInfoHttpGetOut">
    <wsdl:part name="Body" />
  </wsdl:message>
  <wsdl:message name="GetUserInfoAsStringHttpGetIn">
    <wsdl:part name="userName" type="s:string" />
  </wsdl:message>
  <wsdl:message name="GetUserInfoAsStringHttpGetOut">
    <wsdl:part name="Body" element="tns:string" />
  </wsdl:message>
  <wsdl:message name="IsExemptUserHttpGetIn">
    <wsdl:part name="userName" type="s:string" />
  </wsdl:message>
  <wsdl:message name="IsExemptUserHttpGetOut">
    <wsdl:part name="Body" element="tns:boolean" />
  </wsdl:message>
  <wsdl:message name="GetDefaultAuthenticationProviderHttpGetIn" />
  <wsdl:message name="GetDefaultAuthenticationProviderHttpGetOut">
    <wsdl:part name="Body" element="tns:string" />
  </wsdl:message>
  <wsdl:message name="AddExemptUserHttpGetIn">
    <wsdl:part name="userName" type="s:string" />
    <wsdl:part name="password" type="s:string" />
    <wsdl:part name="provider" type="s:string" />
  </wsdl:message>
  <wsdl:message name="AddExemptUserHttpGetOut">
    <wsdl:part name="Body" element="tns:string" />
  </wsdl:message>
  <wsdl:message name="GetAuthenticationTicketHttpPostIn">
    <wsdl:part name="userName" type="s:string" />
    <wsdl:part name="password" type="s:string" />
  </wsdl:message>
  <wsdl:message name="GetAuthenticationTicketHttpPostOut">
    <wsdl:part name="Body" element="tns:string" />
  </wsdl:message>
  <wsdl:message name="AuthenticateHttpPostIn">
    <wsdl:part name="userName" type="s:string" />
    <wsdl:part name="password" type="s:string" />
  </wsdl:message>
  <wsdl:message name="AuthenticateHttpPostOut">
    <wsdl:part name="Body" element="tns:boolean" />
  </wsdl:message>
  <wsdl:message name="GetCSSecurityPwdHttpPostIn">
    <wsdl:part name="encryptedTicket" type="s:string" />
  </wsdl:message>
  <wsdl:message name="GetCSSecurityPwdHttpPostOut">
    <wsdl:part name="Body" element="tns:string" />
  </wsdl:message>
  <wsdl:message name="ValidateTicketHttpPostIn">
    <wsdl:part name="encryptedTicket" type="s:string" />
  </wsdl:message>
  <wsdl:message name="ValidateTicketHttpPostOut">
    <wsdl:part name="Body" element="tns:boolean" />
  </wsdl:message>
  <wsdl:message name="RenewTicketIfOldHttpPostIn">
    <wsdl:part name="encryptedTicket" type="s:string" />
  </wsdl:message>
  <wsdl:message name="RenewTicketIfOldHttpPostOut">
    <wsdl:part name="Body" element="tns:string" />
  </wsdl:message>
  <wsdl:message name="RenewTicketHttpPostIn">
    <wsdl:part name="encryptedTicket" type="s:string" />
  </wsdl:message>
  <wsdl:message name="RenewTicketHttpPostOut">
    <wsdl:part name="Body" element="tns:string" />
  </wsdl:message>
  <wsdl:message name="GetUserFromTicketHttpPostIn">
    <wsdl:part name="encryptedTicket" type="s:string" />
  </wsdl:message>
  <wsdl:message name="GetUserFromTicketHttpPostOut">
    <wsdl:part name="Body" element="tns:string" />
  </wsdl:message>
  <wsdl:message name="GetUserDataFromTicketHttpPostIn">
    <wsdl:part name="encryptedTicket" type="s:string" />
  </wsdl:message>
  <wsdl:message name="GetUserDataFromTicketHttpPostOut">
    <wsdl:part name="Body" element="tns:string" />
  </wsdl:message>
  <wsdl:message name="GetTicketExpirationDateHttpPostIn">
    <wsdl:part name="encryptedTicket" type="s:string" />
  </wsdl:message>
  <wsdl:message name="GetTicketExpirationDateHttpPostOut">
    <wsdl:part name="Body" element="tns:dateTime" />
  </wsdl:message>
  <wsdl:message name="GetTicketIssueDateHttpPostIn">
    <wsdl:part name="encryptedTicket" type="s:string" />
  </wsdl:message>
  <wsdl:message name="GetTicketIssueDateHttpPostOut">
    <wsdl:part name="Body" element="tns:dateTime" />
  </wsdl:message>
  <wsdl:message name="EchoStringHttpPostIn">
    <wsdl:part name="s" type="s:string" />
  </wsdl:message>
  <wsdl:message name="EchoStringHttpPostOut">
    <wsdl:part name="Body" element="tns:string" />
  </wsdl:message>
  <wsdl:message name="GetCookieNameHttpPostIn" />
  <wsdl:message name="GetCookieNameHttpPostOut">
    <wsdl:part name="Body" element="tns:string" />
  </wsdl:message>
  <wsdl:message name="UserExistsHttpPostIn">
    <wsdl:part name="userName" type="s:string" />
  </wsdl:message>
  <wsdl:message name="UserExistsHttpPostOut">
    <wsdl:part name="Body" element="tns:boolean" />
  </wsdl:message>
  <wsdl:message name="GetUserInfoHttpPostIn">
    <wsdl:part name="userName" type="s:string" />
  </wsdl:message>
  <wsdl:message name="GetUserInfoHttpPostOut">
    <wsdl:part name="Body" />
  </wsdl:message>
  <wsdl:message name="GetUserInfoAsStringHttpPostIn">
    <wsdl:part name="userName" type="s:string" />
  </wsdl:message>
  <wsdl:message name="GetUserInfoAsStringHttpPostOut">
    <wsdl:part name="Body" element="tns:string" />
  </wsdl:message>
  <wsdl:message name="IsExemptUserHttpPostIn">
    <wsdl:part name="userName" type="s:string" />
  </wsdl:message>
  <wsdl:message name="IsExemptUserHttpPostOut">
    <wsdl:part name="Body" element="tns:boolean" />
  </wsdl:message>
  <wsdl:message name="GetDefaultAuthenticationProviderHttpPostIn" />
  <wsdl:message name="GetDefaultAuthenticationProviderHttpPostOut">
    <wsdl:part name="Body" element="tns:string" />
  </wsdl:message>
  <wsdl:message name="AddExemptUserHttpPostIn">
    <wsdl:part name="userName" type="s:string" />
    <wsdl:part name="password" type="s:string" />
    <wsdl:part name="provider" type="s:string" />
  </wsdl:message>
  <wsdl:message name="AddExemptUserHttpPostOut">
    <wsdl:part name="Body" element="tns:string" />
  </wsdl:message>
  <wsdl:portType name="SingleSignOnSoap">
    <wsdl:operation name="GetAuthenticationTicket">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Takes a userName and generates and encrypted ticket.</wsdl:documentation>
      <wsdl:input message="tns:GetAuthenticationTicketSoapIn" />
      <wsdl:output message="tns:GetAuthenticationTicketSoapOut" />
    </wsdl:operation>
    <wsdl:operation name="Authenticate">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Tells you whether a user is authenticated or not.</wsdl:documentation>
      <wsdl:input message="tns:AuthenticateSoapIn" />
      <wsdl:output message="tns:AuthenticateSoapOut" />
    </wsdl:operation>
    <wsdl:operation name="GetCSSecurityPwd">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Verifies an encrypted ticket and returns cs secrutiy password (unencrypted) )</wsdl:documentation>
      <wsdl:input message="tns:GetCSSecurityPwdSoapIn" />
      <wsdl:output message="tns:GetCSSecurityPwdSoapOut" />
    </wsdl:operation>
    <wsdl:operation name="ValidateTicket">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Can be used to confrim Authentication.  Will return false if the ticket is not valid or if it is expired.</wsdl:documentation>
      <wsdl:input message="tns:ValidateTicketSoapIn" />
      <wsdl:output message="tns:ValidateTicketSoapOut" />
    </wsdl:operation>
    <wsdl:operation name="RenewTicketIfOld">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Used to renew an authentication ticket to keep it alive. Returns a new ticket.</wsdl:documentation>
      <wsdl:input message="tns:RenewTicketIfOldSoapIn" />
      <wsdl:output message="tns:RenewTicketIfOldSoapOut" />
    </wsdl:operation>
    <wsdl:operation name="RenewTicket">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Used to renew an authentication ticket to keep it alive. Returns a new ticket.</wsdl:documentation>
      <wsdl:input message="tns:RenewTicketSoapIn" />
      <wsdl:output message="tns:RenewTicketSoapOut" />
    </wsdl:operation>
    <wsdl:operation name="GetUserFromTicket">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Get a userName from an encrypted ticket.</wsdl:documentation>
      <wsdl:input message="tns:GetUserFromTicketSoapIn" />
      <wsdl:output message="tns:GetUserFromTicketSoapOut" />
    </wsdl:operation>
    <wsdl:operation name="GetUserDataFromTicket">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Get the userData from an encrypted ticket.</wsdl:documentation>
      <wsdl:input message="tns:GetUserDataFromTicketSoapIn" />
      <wsdl:output message="tns:GetUserDataFromTicketSoapOut" />
    </wsdl:operation>
    <wsdl:operation name="GetTicketExpirationDate">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Get a userName from an encrypted ticket.</wsdl:documentation>
      <wsdl:input message="tns:GetTicketExpirationDateSoapIn" />
      <wsdl:output message="tns:GetTicketExpirationDateSoapOut" />
    </wsdl:operation>
    <wsdl:operation name="GetTicketIssueDate">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Get a userName from an encrypted ticket.</wsdl:documentation>
      <wsdl:input message="tns:GetTicketIssueDateSoapIn" />
      <wsdl:output message="tns:GetTicketIssueDateSoapOut" />
    </wsdl:operation>
    <wsdl:operation name="EchoString">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">I am here to make sure you can connect to me.</wsdl:documentation>
      <wsdl:input message="tns:EchoStringSoapIn" />
      <wsdl:output message="tns:EchoStringSoapOut" />
    </wsdl:operation>
    <wsdl:operation name="GetCookieName">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">This will be used by web based applications for storing the authentication info.</wsdl:documentation>
      <wsdl:input message="tns:GetCookieNameSoapIn" />
      <wsdl:output message="tns:GetCookieNameSoapOut" />
    </wsdl:operation>
    <wsdl:operation name="UserExists">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">This will be used to make sure a username exists without authentication</wsdl:documentation>
      <wsdl:input message="tns:UserExistsSoapIn" />
      <wsdl:output message="tns:UserExistsSoapOut" />
    </wsdl:operation>
    <wsdl:operation name="GetUserInfo">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Get User Information so you can manipulate locally</wsdl:documentation>
      <wsdl:input message="tns:GetUserInfoSoapIn" />
      <wsdl:output message="tns:GetUserInfoSoapOut" />
    </wsdl:operation>
    <wsdl:operation name="GetUserInfoAsString">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Get User Information so you can manipulate locally</wsdl:documentation>
      <wsdl:input message="tns:GetUserInfoAsStringSoapIn" />
      <wsdl:output message="tns:GetUserInfoAsStringSoapOut" />
    </wsdl:operation>
    <wsdl:operation name="IsExemptUser">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Checks whether a user is exempt</wsdl:documentation>
      <wsdl:input message="tns:IsExemptUserSoapIn" />
      <wsdl:output message="tns:IsExemptUserSoapOut" />
    </wsdl:operation>
    <wsdl:operation name="GetDefaultAuthenticationProvider">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Gets the default authentication provider</wsdl:documentation>
      <wsdl:input message="tns:GetDefaultAuthenticationProviderSoapIn" />
      <wsdl:output message="tns:GetDefaultAuthenticationProviderSoapOut" />
    </wsdl:operation>
    <wsdl:operation name="AddExemptUser">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Adds an exempt user to the list</wsdl:documentation>
      <wsdl:input message="tns:AddExemptUserSoapIn" />
      <wsdl:output message="tns:AddExemptUserSoapOut" />
    </wsdl:operation>
  </wsdl:portType>
  <wsdl:portType name="SingleSignOnHttpGet">
    <wsdl:operation name="GetAuthenticationTicket">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Takes a userName and generates and encrypted ticket.</wsdl:documentation>
      <wsdl:input message="tns:GetAuthenticationTicketHttpGetIn" />
      <wsdl:output message="tns:GetAuthenticationTicketHttpGetOut" />
    </wsdl:operation>
    <wsdl:operation name="Authenticate">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Tells you whether a user is authenticated or not.</wsdl:documentation>
      <wsdl:input message="tns:AuthenticateHttpGetIn" />
      <wsdl:output message="tns:AuthenticateHttpGetOut" />
    </wsdl:operation>
    <wsdl:operation name="GetCSSecurityPwd">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Verifies an encrypted ticket and returns cs secrutiy password (unencrypted) )</wsdl:documentation>
      <wsdl:input message="tns:GetCSSecurityPwdHttpGetIn" />
      <wsdl:output message="tns:GetCSSecurityPwdHttpGetOut" />
    </wsdl:operation>
    <wsdl:operation name="ValidateTicket">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Can be used to confrim Authentication.  Will return false if the ticket is not valid or if it is expired.</wsdl:documentation>
      <wsdl:input message="tns:ValidateTicketHttpGetIn" />
      <wsdl:output message="tns:ValidateTicketHttpGetOut" />
    </wsdl:operation>
    <wsdl:operation name="RenewTicketIfOld">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Used to renew an authentication ticket to keep it alive. Returns a new ticket.</wsdl:documentation>
      <wsdl:input message="tns:RenewTicketIfOldHttpGetIn" />
      <wsdl:output message="tns:RenewTicketIfOldHttpGetOut" />
    </wsdl:operation>
    <wsdl:operation name="RenewTicket">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Used to renew an authentication ticket to keep it alive. Returns a new ticket.</wsdl:documentation>
      <wsdl:input message="tns:RenewTicketHttpGetIn" />
      <wsdl:output message="tns:RenewTicketHttpGetOut" />
    </wsdl:operation>
    <wsdl:operation name="GetUserFromTicket">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Get a userName from an encrypted ticket.</wsdl:documentation>
      <wsdl:input message="tns:GetUserFromTicketHttpGetIn" />
      <wsdl:output message="tns:GetUserFromTicketHttpGetOut" />
    </wsdl:operation>
    <wsdl:operation name="GetUserDataFromTicket">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Get the userData from an encrypted ticket.</wsdl:documentation>
      <wsdl:input message="tns:GetUserDataFromTicketHttpGetIn" />
      <wsdl:output message="tns:GetUserDataFromTicketHttpGetOut" />
    </wsdl:operation>
    <wsdl:operation name="GetTicketExpirationDate">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Get a userName from an encrypted ticket.</wsdl:documentation>
      <wsdl:input message="tns:GetTicketExpirationDateHttpGetIn" />
      <wsdl:output message="tns:GetTicketExpirationDateHttpGetOut" />
    </wsdl:operation>
    <wsdl:operation name="GetTicketIssueDate">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Get a userName from an encrypted ticket.</wsdl:documentation>
      <wsdl:input message="tns:GetTicketIssueDateHttpGetIn" />
      <wsdl:output message="tns:GetTicketIssueDateHttpGetOut" />
    </wsdl:operation>
    <wsdl:operation name="EchoString">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">I am here to make sure you can connect to me.</wsdl:documentation>
      <wsdl:input message="tns:EchoStringHttpGetIn" />
      <wsdl:output message="tns:EchoStringHttpGetOut" />
    </wsdl:operation>
    <wsdl:operation name="GetCookieName">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">This will be used by web based applications for storing the authentication info.</wsdl:documentation>
      <wsdl:input message="tns:GetCookieNameHttpGetIn" />
      <wsdl:output message="tns:GetCookieNameHttpGetOut" />
    </wsdl:operation>
    <wsdl:operation name="UserExists">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">This will be used to make sure a username exists without authentication</wsdl:documentation>
      <wsdl:input message="tns:UserExistsHttpGetIn" />
      <wsdl:output message="tns:UserExistsHttpGetOut" />
    </wsdl:operation>
    <wsdl:operation name="GetUserInfo">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Get User Information so you can manipulate locally</wsdl:documentation>
      <wsdl:input message="tns:GetUserInfoHttpGetIn" />
      <wsdl:output message="tns:GetUserInfoHttpGetOut" />
    </wsdl:operation>
    <wsdl:operation name="GetUserInfoAsString">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Get User Information so you can manipulate locally</wsdl:documentation>
      <wsdl:input message="tns:GetUserInfoAsStringHttpGetIn" />
      <wsdl:output message="tns:GetUserInfoAsStringHttpGetOut" />
    </wsdl:operation>
    <wsdl:operation name="IsExemptUser">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Checks whether a user is exempt</wsdl:documentation>
      <wsdl:input message="tns:IsExemptUserHttpGetIn" />
      <wsdl:output message="tns:IsExemptUserHttpGetOut" />
    </wsdl:operation>
    <wsdl:operation name="GetDefaultAuthenticationProvider">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Gets the default authentication provider</wsdl:documentation>
      <wsdl:input message="tns:GetDefaultAuthenticationProviderHttpGetIn" />
      <wsdl:output message="tns:GetDefaultAuthenticationProviderHttpGetOut" />
    </wsdl:operation>
    <wsdl:operation name="AddExemptUser">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Adds an exempt user to the list</wsdl:documentation>
      <wsdl:input message="tns:AddExemptUserHttpGetIn" />
      <wsdl:output message="tns:AddExemptUserHttpGetOut" />
    </wsdl:operation>
  </wsdl:portType>
  <wsdl:portType name="SingleSignOnHttpPost">
    <wsdl:operation name="GetAuthenticationTicket">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Takes a userName and generates and encrypted ticket.</wsdl:documentation>
      <wsdl:input message="tns:GetAuthenticationTicketHttpPostIn" />
      <wsdl:output message="tns:GetAuthenticationTicketHttpPostOut" />
    </wsdl:operation>
    <wsdl:operation name="Authenticate">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Tells you whether a user is authenticated or not.</wsdl:documentation>
      <wsdl:input message="tns:AuthenticateHttpPostIn" />
      <wsdl:output message="tns:AuthenticateHttpPostOut" />
    </wsdl:operation>
    <wsdl:operation name="GetCSSecurityPwd">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Verifies an encrypted ticket and returns cs secrutiy password (unencrypted) )</wsdl:documentation>
      <wsdl:input message="tns:GetCSSecurityPwdHttpPostIn" />
      <wsdl:output message="tns:GetCSSecurityPwdHttpPostOut" />
    </wsdl:operation>
    <wsdl:operation name="ValidateTicket">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Can be used to confrim Authentication.  Will return false if the ticket is not valid or if it is expired.</wsdl:documentation>
      <wsdl:input message="tns:ValidateTicketHttpPostIn" />
      <wsdl:output message="tns:ValidateTicketHttpPostOut" />
    </wsdl:operation>
    <wsdl:operation name="RenewTicketIfOld">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Used to renew an authentication ticket to keep it alive. Returns a new ticket.</wsdl:documentation>
      <wsdl:input message="tns:RenewTicketIfOldHttpPostIn" />
      <wsdl:output message="tns:RenewTicketIfOldHttpPostOut" />
    </wsdl:operation>
    <wsdl:operation name="RenewTicket">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Used to renew an authentication ticket to keep it alive. Returns a new ticket.</wsdl:documentation>
      <wsdl:input message="tns:RenewTicketHttpPostIn" />
      <wsdl:output message="tns:RenewTicketHttpPostOut" />
    </wsdl:operation>
    <wsdl:operation name="GetUserFromTicket">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Get a userName from an encrypted ticket.</wsdl:documentation>
      <wsdl:input message="tns:GetUserFromTicketHttpPostIn" />
      <wsdl:output message="tns:GetUserFromTicketHttpPostOut" />
    </wsdl:operation>
    <wsdl:operation name="GetUserDataFromTicket">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Get the userData from an encrypted ticket.</wsdl:documentation>
      <wsdl:input message="tns:GetUserDataFromTicketHttpPostIn" />
      <wsdl:output message="tns:GetUserDataFromTicketHttpPostOut" />
    </wsdl:operation>
    <wsdl:operation name="GetTicketExpirationDate">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Get a userName from an encrypted ticket.</wsdl:documentation>
      <wsdl:input message="tns:GetTicketExpirationDateHttpPostIn" />
      <wsdl:output message="tns:GetTicketExpirationDateHttpPostOut" />
    </wsdl:operation>
    <wsdl:operation name="GetTicketIssueDate">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Get a userName from an encrypted ticket.</wsdl:documentation>
      <wsdl:input message="tns:GetTicketIssueDateHttpPostIn" />
      <wsdl:output message="tns:GetTicketIssueDateHttpPostOut" />
    </wsdl:operation>
    <wsdl:operation name="EchoString">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">I am here to make sure you can connect to me.</wsdl:documentation>
      <wsdl:input message="tns:EchoStringHttpPostIn" />
      <wsdl:output message="tns:EchoStringHttpPostOut" />
    </wsdl:operation>
    <wsdl:operation name="GetCookieName">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">This will be used by web based applications for storing the authentication info.</wsdl:documentation>
      <wsdl:input message="tns:GetCookieNameHttpPostIn" />
      <wsdl:output message="tns:GetCookieNameHttpPostOut" />
    </wsdl:operation>
    <wsdl:operation name="UserExists">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">This will be used to make sure a username exists without authentication</wsdl:documentation>
      <wsdl:input message="tns:UserExistsHttpPostIn" />
      <wsdl:output message="tns:UserExistsHttpPostOut" />
    </wsdl:operation>
    <wsdl:operation name="GetUserInfo">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Get User Information so you can manipulate locally</wsdl:documentation>
      <wsdl:input message="tns:GetUserInfoHttpPostIn" />
      <wsdl:output message="tns:GetUserInfoHttpPostOut" />
    </wsdl:operation>
    <wsdl:operation name="GetUserInfoAsString">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Get User Information so you can manipulate locally</wsdl:documentation>
      <wsdl:input message="tns:GetUserInfoAsStringHttpPostIn" />
      <wsdl:output message="tns:GetUserInfoAsStringHttpPostOut" />
    </wsdl:operation>
    <wsdl:operation name="IsExemptUser">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Checks whether a user is exempt</wsdl:documentation>
      <wsdl:input message="tns:IsExemptUserHttpPostIn" />
      <wsdl:output message="tns:IsExemptUserHttpPostOut" />
    </wsdl:operation>
    <wsdl:operation name="GetDefaultAuthenticationProvider">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Gets the default authentication provider</wsdl:documentation>
      <wsdl:input message="tns:GetDefaultAuthenticationProviderHttpPostIn" />
      <wsdl:output message="tns:GetDefaultAuthenticationProviderHttpPostOut" />
    </wsdl:operation>
    <wsdl:operation name="AddExemptUser">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">Adds an exempt user to the list</wsdl:documentation>
      <wsdl:input message="tns:AddExemptUserHttpPostIn" />
      <wsdl:output message="tns:AddExemptUserHttpPostOut" />
    </wsdl:operation>
  </wsdl:portType>
  <wsdl:binding name="SingleSignOnSoap" type="tns:SingleSignOnSoap">
    <soap:binding transport="http://schemas.xmlsoap.org/soap/http" />
    <wsdl:operation name="GetAuthenticationTicket">
      <soap:operation soapAction="http://cambridgesoft.com/GetAuthenticationTicket" style="document" />
      <wsdl:input>
        <soap:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="Authenticate">
      <soap:operation soapAction="http://cambridgesoft.com/Authenticate" style="document" />
      <wsdl:input>
        <soap:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetCSSecurityPwd">
      <soap:operation soapAction="http://cambridgesoft.com/GetCSSecurityPwd" style="document" />
      <wsdl:input>
        <soap:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="ValidateTicket">
      <soap:operation soapAction="http://cambridgesoft.com/ValidateTicket" style="document" />
      <wsdl:input>
        <soap:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="RenewTicketIfOld">
      <soap:operation soapAction="http://cambridgesoft.com/RenewTicketIfOld" style="document" />
      <wsdl:input>
        <soap:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="RenewTicket">
      <soap:operation soapAction="http://cambridgesoft.com/RenewTicket" style="document" />
      <wsdl:input>
        <soap:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetUserFromTicket">
      <soap:operation soapAction="http://cambridgesoft.com/GetUserFromTicket" style="document" />
      <wsdl:input>
        <soap:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetUserDataFromTicket">
      <soap:operation soapAction="http://cambridgesoft.com/GetUserDataFromTicket" style="document" />
      <wsdl:input>
        <soap:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetTicketExpirationDate">
      <soap:operation soapAction="http://cambridgesoft.com/GetTicketExpirationDate" style="document" />
      <wsdl:input>
        <soap:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetTicketIssueDate">
      <soap:operation soapAction="http://cambridgesoft.com/GetTicketIssueDate" style="document" />
      <wsdl:input>
        <soap:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="EchoString">
      <soap:operation soapAction="http://cambridgesoft.com/EchoString" style="document" />
      <wsdl:input>
        <soap:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetCookieName">
      <soap:operation soapAction="http://cambridgesoft.com/GetCookieName" style="document" />
      <wsdl:input>
        <soap:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="UserExists">
      <soap:operation soapAction="http://cambridgesoft.com/UserExists" style="document" />
      <wsdl:input>
        <soap:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetUserInfo">
      <soap:operation soapAction="http://cambridgesoft.com/GetUserInfo" style="document" />
      <wsdl:input>
        <soap:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetUserInfoAsString">
      <soap:operation soapAction="http://cambridgesoft.com/GetUserInfoAsString" style="document" />
      <wsdl:input>
        <soap:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="IsExemptUser">
      <soap:operation soapAction="http://cambridgesoft.com/IsExemptUser" style="document" />
      <wsdl:input>
        <soap:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetDefaultAuthenticationProvider">
      <soap:operation soapAction="http://cambridgesoft.com/GetDefaultAuthenticationProvider" style="document" />
      <wsdl:input>
        <soap:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="AddExemptUser">
      <soap:operation soapAction="http://cambridgesoft.com/AddExemptUser" style="document" />
      <wsdl:input>
        <soap:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:binding name="SingleSignOnSoap12" type="tns:SingleSignOnSoap">
    <soap12:binding transport="http://schemas.xmlsoap.org/soap/http" />
    <wsdl:operation name="GetAuthenticationTicket">
      <soap12:operation soapAction="http://cambridgesoft.com/GetAuthenticationTicket" style="document" />
      <wsdl:input>
        <soap12:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="Authenticate">
      <soap12:operation soapAction="http://cambridgesoft.com/Authenticate" style="document" />
      <wsdl:input>
        <soap12:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetCSSecurityPwd">
      <soap12:operation soapAction="http://cambridgesoft.com/GetCSSecurityPwd" style="document" />
      <wsdl:input>
        <soap12:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="ValidateTicket">
      <soap12:operation soapAction="http://cambridgesoft.com/ValidateTicket" style="document" />
      <wsdl:input>
        <soap12:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="RenewTicketIfOld">
      <soap12:operation soapAction="http://cambridgesoft.com/RenewTicketIfOld" style="document" />
      <wsdl:input>
        <soap12:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="RenewTicket">
      <soap12:operation soapAction="http://cambridgesoft.com/RenewTicket" style="document" />
      <wsdl:input>
        <soap12:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetUserFromTicket">
      <soap12:operation soapAction="http://cambridgesoft.com/GetUserFromTicket" style="document" />
      <wsdl:input>
        <soap12:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetUserDataFromTicket">
      <soap12:operation soapAction="http://cambridgesoft.com/GetUserDataFromTicket" style="document" />
      <wsdl:input>
        <soap12:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetTicketExpirationDate">
      <soap12:operation soapAction="http://cambridgesoft.com/GetTicketExpirationDate" style="document" />
      <wsdl:input>
        <soap12:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetTicketIssueDate">
      <soap12:operation soapAction="http://cambridgesoft.com/GetTicketIssueDate" style="document" />
      <wsdl:input>
        <soap12:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="EchoString">
      <soap12:operation soapAction="http://cambridgesoft.com/EchoString" style="document" />
      <wsdl:input>
        <soap12:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetCookieName">
      <soap12:operation soapAction="http://cambridgesoft.com/GetCookieName" style="document" />
      <wsdl:input>
        <soap12:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="UserExists">
      <soap12:operation soapAction="http://cambridgesoft.com/UserExists" style="document" />
      <wsdl:input>
        <soap12:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetUserInfo">
      <soap12:operation soapAction="http://cambridgesoft.com/GetUserInfo" style="document" />
      <wsdl:input>
        <soap12:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetUserInfoAsString">
      <soap12:operation soapAction="http://cambridgesoft.com/GetUserInfoAsString" style="document" />
      <wsdl:input>
        <soap12:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="IsExemptUser">
      <soap12:operation soapAction="http://cambridgesoft.com/IsExemptUser" style="document" />
      <wsdl:input>
        <soap12:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetDefaultAuthenticationProvider">
      <soap12:operation soapAction="http://cambridgesoft.com/GetDefaultAuthenticationProvider" style="document" />
      <wsdl:input>
        <soap12:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="AddExemptUser">
      <soap12:operation soapAction="http://cambridgesoft.com/AddExemptUser" style="document" />
      <wsdl:input>
        <soap12:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap12:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:binding name="SingleSignOnHttpGet" type="tns:SingleSignOnHttpGet">
    <http:binding verb="GET" />
    <wsdl:operation name="GetAuthenticationTicket">
      <http:operation location="/GetAuthenticationTicket" />
      <wsdl:input>
        <http:urlEncoded />
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="Authenticate">
      <http:operation location="/Authenticate" />
      <wsdl:input>
        <http:urlEncoded />
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetCSSecurityPwd">
      <http:operation location="/GetCSSecurityPwd" />
      <wsdl:input>
        <http:urlEncoded />
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="ValidateTicket">
      <http:operation location="/ValidateTicket" />
      <wsdl:input>
        <http:urlEncoded />
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="RenewTicketIfOld">
      <http:operation location="/RenewTicketIfOld" />
      <wsdl:input>
        <http:urlEncoded />
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="RenewTicket">
      <http:operation location="/RenewTicket" />
      <wsdl:input>
        <http:urlEncoded />
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetUserFromTicket">
      <http:operation location="/GetUserFromTicket" />
      <wsdl:input>
        <http:urlEncoded />
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetUserDataFromTicket">
      <http:operation location="/GetUserDataFromTicket" />
      <wsdl:input>
        <http:urlEncoded />
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetTicketExpirationDate">
      <http:operation location="/GetTicketExpirationDate" />
      <wsdl:input>
        <http:urlEncoded />
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetTicketIssueDate">
      <http:operation location="/GetTicketIssueDate" />
      <wsdl:input>
        <http:urlEncoded />
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="EchoString">
      <http:operation location="/EchoString" />
      <wsdl:input>
        <http:urlEncoded />
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetCookieName">
      <http:operation location="/GetCookieName" />
      <wsdl:input>
        <http:urlEncoded />
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="UserExists">
      <http:operation location="/UserExists" />
      <wsdl:input>
        <http:urlEncoded />
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetUserInfo">
      <http:operation location="/GetUserInfo" />
      <wsdl:input>
        <http:urlEncoded />
      </wsdl:input>
      <wsdl:output>
        <mime:content part="Body" type="text/xml" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetUserInfoAsString">
      <http:operation location="/GetUserInfoAsString" />
      <wsdl:input>
        <http:urlEncoded />
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="IsExemptUser">
      <http:operation location="/IsExemptUser" />
      <wsdl:input>
        <http:urlEncoded />
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetDefaultAuthenticationProvider">
      <http:operation location="/GetDefaultAuthenticationProvider" />
      <wsdl:input>
        <http:urlEncoded />
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="AddExemptUser">
      <http:operation location="/AddExemptUser" />
      <wsdl:input>
        <http:urlEncoded />
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body" />
      </wsdl:output>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:binding name="SingleSignOnHttpPost" type="tns:SingleSignOnHttpPost">
    <http:binding verb="POST" />
    <wsdl:operation name="GetAuthenticationTicket">
      <http:operation location="/GetAuthenticationTicket" />
      <wsdl:input>
        <mime:content type="application/x-www-form-urlencoded" />
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="Authenticate">
      <http:operation location="/Authenticate" />
      <wsdl:input>
        <mime:content type="application/x-www-form-urlencoded" />
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetCSSecurityPwd">
      <http:operation location="/GetCSSecurityPwd" />
      <wsdl:input>
        <mime:content type="application/x-www-form-urlencoded" />
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="ValidateTicket">
      <http:operation location="/ValidateTicket" />
      <wsdl:input>
        <mime:content type="application/x-www-form-urlencoded" />
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="RenewTicketIfOld">
      <http:operation location="/RenewTicketIfOld" />
      <wsdl:input>
        <mime:content type="application/x-www-form-urlencoded" />
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="RenewTicket">
      <http:operation location="/RenewTicket" />
      <wsdl:input>
        <mime:content type="application/x-www-form-urlencoded" />
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetUserFromTicket">
      <http:operation location="/GetUserFromTicket" />
      <wsdl:input>
        <mime:content type="application/x-www-form-urlencoded" />
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetUserDataFromTicket">
      <http:operation location="/GetUserDataFromTicket" />
      <wsdl:input>
        <mime:content type="application/x-www-form-urlencoded" />
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetTicketExpirationDate">
      <http:operation location="/GetTicketExpirationDate" />
      <wsdl:input>
        <mime:content type="application/x-www-form-urlencoded" />
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetTicketIssueDate">
      <http:operation location="/GetTicketIssueDate" />
      <wsdl:input>
        <mime:content type="application/x-www-form-urlencoded" />
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="EchoString">
      <http:operation location="/EchoString" />
      <wsdl:input>
        <mime:content type="application/x-www-form-urlencoded" />
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetCookieName">
      <http:operation location="/GetCookieName" />
      <wsdl:input>
        <mime:content type="application/x-www-form-urlencoded" />
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="UserExists">
      <http:operation location="/UserExists" />
      <wsdl:input>
        <mime:content type="application/x-www-form-urlencoded" />
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetUserInfo">
      <http:operation location="/GetUserInfo" />
      <wsdl:input>
        <mime:content type="application/x-www-form-urlencoded" />
      </wsdl:input>
      <wsdl:output>
        <mime:content part="Body" type="text/xml" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetUserInfoAsString">
      <http:operation location="/GetUserInfoAsString" />
      <wsdl:input>
        <mime:content type="application/x-www-form-urlencoded" />
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="IsExemptUser">
      <http:operation location="/IsExemptUser" />
      <wsdl:input>
        <mime:content type="application/x-www-form-urlencoded" />
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetDefaultAuthenticationProvider">
      <http:operation location="/GetDefaultAuthenticationProvider" />
      <wsdl:input>
        <mime:content type="application/x-www-form-urlencoded" />
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="AddExemptUser">
      <http:operation location="/AddExemptUser" />
      <wsdl:input>
        <mime:content type="application/x-www-form-urlencoded" />
      </wsdl:input>
      <wsdl:output>
        <mime:mimeXml part="Body" />
      </wsdl:output>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:service name="SingleSignOn">
    <wsdl:port name="SingleSignOnSoap" binding="tns:SingleSignOnSoap">
      <soap:address location="http://localhost/COESingleSignOn/SingleSignOn.asmx" />
    </wsdl:port>
    <wsdl:port name="SingleSignOnSoap12" binding="tns:SingleSignOnSoap12">
      <soap12:address location="http://localhost/COESingleSignOn/SingleSignOn.asmx" />
    </wsdl:port>
    <wsdl:port name="SingleSignOnHttpGet" binding="tns:SingleSignOnHttpGet">
      <http:address location="http://localhost/COESingleSignOn/SingleSignOn.asmx" />
    </wsdl:port>
    <wsdl:port name="SingleSignOnHttpPost" binding="tns:SingleSignOnHttpPost">
      <http:address location="http://localhost/COESingleSignOn/SingleSignOn.asmx" />
    </wsdl:port>
  </wsdl:service>
</wsdl:definitions>