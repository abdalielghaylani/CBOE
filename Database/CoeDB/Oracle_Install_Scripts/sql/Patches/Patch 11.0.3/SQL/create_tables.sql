----------------------------------------------------------------
PROMPT >> CREATE TABLE COEGROUPORG
----------------------------------------------------------------
-- Defines differing organizations of groups

CREATE TABLE COEGROUPORG (
  GROUPORG_ID       NUMBER (8)   NOT NULL,
  GROUPORG_NAME     VARCHAR2(50) NOT NULL,
  DEFAULT_APP_ID    NUMBER (8),
  "RID"             NUMBER(10)   NOT NULL, 
  "CREATOR"         VARCHAR2(30) DEFAULT RTRIM(user) NOT NULL, 
  "TIMESTAMP"       DATE         DEFAULT sysdate NOT NULL,   
  CONSTRAINT COEGROUPORG_PK 
    PRIMARY KEY (GROUPORG_ID)
    USING INDEX TABLESPACE &&indexTableSpaceName,
  CONSTRAINT COEGROUPORG_NAME_UK 
    UNIQUE (GROUPORG_NAME)
    USING INDEX TABLESPACE &&indexTableSpaceName,
  CONSTRAINT COEGROUPORG_APP_UK 
    UNIQUE (DEFAULT_APP_ID)
    USING INDEX TABLESPACE &&indexTableSpaceName
);

ALTER TABLE COEGROUPORG ADD CONSTRAINT COEGROUPORG_APP_FK
  FOREIGN KEY (DEFAULT_APP_ID)
  REFERENCES "COEDB"."PRIVILEGE_TABLES" ("PRIVILEGE_TABLE_ID")
  ON DELETE SET NULL;


CREATE SEQUENCE COEGROUPORG_ID_SEQ;

CREATE TRIGGER COEGROUPORG_BI
   BEFORE INSERT
   ON COEGROUPORG
   FOR EACH ROW
   WHEN (NEW.GROUPORG_ID IS NULL)
BEGIN
   SELECT COEGROUPORG_ID_SEQ.NEXTVAL
     INTO :NEW.GROUPORG_ID
     FROM DUAL;
END;
/
CREATE SEQUENCE  "COEDB"."SEQ_RID_COEGROUPORG"   INCREMENT BY 1 START WITH 1;

CREATE TRIGGER COEGROUPORG_RID
   BEFORE INSERT
   ON COEGROUPORG
   FOR EACH ROW
   WHEN (NEW.RID IS NULL)
BEGIN
   SELECT SEQ_RID_COEGROUPORG.NEXTVAL
     INTO :NEW.RID
     FROM DUAL;
END;
/
----------------------------------------------------------------
PROMPT >> CREATE TABLE COEGROUP
----------------------------------------------------------------
-- Defines groups of users

CREATE TABLE COEGROUP (
  GROUP_ID          NUMBER (8)   NOT NULL,
  GROUPORG_ID       NUMBER (8)   NOT NULL,
  GROUP_NAME        VARCHAR2(50) NOT NULL,
  PARENT_GROUP_ID   NUMBER (8),
  LEADER_PERSON_ID  NUMBER(8),
  "RID"             NUMBER(10)   NOT NULL, 
  "CREATOR"         VARCHAR2(30) DEFAULT RTRIM(user) NOT NULL, 
  "TIMESTAMP"       DATE         DEFAULT sysdate NOT NULL,   
  CONSTRAINT COEGROUP_PK
    PRIMARY KEY (GROUP_ID)
    USING INDEX TABLESPACE &&indexTableSpaceName,
  CONSTRAINT COEGROUP_AK
    UNIQUE (GROUP_NAME)
    USING INDEX TABLESPACE &&indexTableSpaceName
);

ALTER TABLE COEGROUP ADD CONSTRAINT COEGROUP_GROUPORG_FK
  FOREIGN KEY (GROUPORG_ID)
  REFERENCES COEGROUPORG (GROUPORG_ID)
  ON DELETE CASCADE;

ALTER TABLE COEGROUP ADD CONSTRAINT COEGROUP_PARENT_FK
  FOREIGN KEY (PARENT_GROUP_ID)
  REFERENCES COEGROUP (GROUP_ID);

ALTER TABLE COEGROUP ADD CONSTRAINT COEGROUP_LEADER_FK
  FOREIGN KEY (LEADER_PERSON_ID)
  REFERENCES PEOPLE (PERSON_ID)
  ON DELETE SET NULL;

CREATE SEQUENCE COEGROUP_ID_SEQ  INCREMENT BY 1 START WITH 1;

CREATE TRIGGER COEGROUP_BI
   BEFORE INSERT
   ON COEGROUP
   FOR EACH ROW
   WHEN (NEW.GROUP_ID IS NULL)
BEGIN
   SELECT COEGROUP_ID_SEQ.NEXTVAL
     INTO :NEW.GROUP_ID
     FROM DUAL;
END;
/
   CREATE SEQUENCE  "COEDB"."SEQ_RID_COEGROUP"   INCREMENT BY 1 START WITH 1;
CREATE TRIGGER COEGROUP_RID
   BEFORE INSERT
   ON COEGROUP
   FOR EACH ROW
   WHEN (NEW.RID IS NULL)
BEGIN
   SELECT SEQ_RID_COEGROUP.NEXTVAL
     INTO :NEW.RID
     FROM DUAL;
END;
/
----------------------------------------------------------------
PROMPT >> CREATE TABLE COEGROUPPEOPLE
----------------------------------------------------------------
-- Defines the people belonging to groups

CREATE TABLE COEGROUPPEOPLE (
  GROUP_ID    NUMBER (8)   NOT NULL,
  PERSON_ID   NUMBER(8)    NOT NULL,
  "RID"       NUMBER(10)   NOT NULL, 
  "CREATOR"   VARCHAR2(30) DEFAULT RTRIM(user) NOT NULL, 
  "TIMESTAMP" DATE         DEFAULT sysdate NOT NULL,   
  CONSTRAINT COEGROUPPEOPLE_PK
    PRIMARY KEY (GROUP_ID,PERSON_ID)
    USING INDEX TABLESPACE &&indexTableSpaceName
);

ALTER TABLE COEGROUPPEOPLE ADD CONSTRAINT COEGROUPPEOPLE_GROUP_FK
  FOREIGN KEY (GROUP_ID)
  REFERENCES COEGROUP (GROUP_ID)
  ON DELETE CASCADE;

ALTER TABLE COEGROUPPEOPLE ADD CONSTRAINT COEGROUPPEOPLE_PEOPLE_FK
  FOREIGN KEY (PERSON_ID)
  REFERENCES PEOPLE (PERSON_ID)
  ON DELETE CASCADE;
  
   CREATE SEQUENCE  "COEDB"."SEQ_RID_COEGROUP_PEOPLE"  INCREMENT BY 1 START WITH 1;

CREATE TRIGGER COEGROUPPEOPLE_RID
   BEFORE INSERT
   ON COEGROUPPEOPLE
   FOR EACH ROW
   WHEN (NEW.RID IS NULL)
BEGIN
   SELECT SEQ_RID_COEGROUP_PEOPLE.NEXTVAL
     INTO :NEW.RID
     FROM DUAL;
END;
/

  ----------------------------------------------------------------
PROMPT >> CREATE TABLE COEGROUPROLET
----------------------------------------------------------------
-- Maps security principals to their privileges

CREATE TABLE COEGROUPROLE (
  GROUP_ID  NUMBER(8)    NOT NULL,
  ROLE_ID    NUMBER(8)    NOT NULL,
  "RID"         NUMBER(10)   NOT NULL, 
  "CREATOR"     VARCHAR2(30) DEFAULT RTRIM(user) NOT NULL, 
  "TIMESTAMP"   DATE DEFAULT sysdate NOT NULL,   
  CONSTRAINT COEGROUPROLE_PK
    PRIMARY KEY (GROUP_ID,ROLE_ID)
    USING INDEX TABLESPACE &&indexTableSpaceName
);

ALTER TABLE COEGROUPROLE ADD CONSTRAINT COEGROUPROLE_COEGROUP_FK
  FOREIGN KEY (GROUP_ID)
  REFERENCES COEGROUP (GROUP_ID)
  ON DELETE CASCADE;

ALTER TABLE COEGROUPROLE ADD CONSTRAINT COEGROUPROLE_SECURITY_ROLES_FK
  FOREIGN KEY (ROLE_ID)
  REFERENCES SECURITY_ROLES (ROLE_ID)
  ON DELETE CASCADE;
 
 CREATE SEQUENCE  "COEDB"."SEQ_RID_COEGROUP_ROLE"  INCREMENT BY 1 START WITH 1;
CREATE TRIGGER COEGROUPROLE_RID
   BEFORE INSERT
   ON COEGROUPROLE
   FOR EACH ROW
   WHEN (NEW.RID IS NULL)
BEGIN
   SELECT SEQ_RID_COEGROUP_ROLE.NEXTVAL
     INTO :NEW.RID
     FROM DUAL;
END;
/ 
----------------------------------------------------------------
PROMPT >> CREATE TABLE COEPRINCIPAL
----------------------------------------------------------------
-- Defines security principals (entities holding privileges)

CREATE TABLE COEPRINCIPAL (
  PRINCIPAL_ID  NUMBER(8)    NOT NULL,
  PERSON_ID     NUMBER(8),
  GROUP_ID      NUMBER(8),
  ACTIVE       NUMBER(1),
  CONSTRAINT COEPRINCIPAL_PK
    PRIMARY KEY (PRINCIPAL_ID)
    USING INDEX TABLESPACE &&indexTableSpaceName
);

ALTER TABLE COEPRINCIPAL ADD CONSTRAINT COEPRINCIPAL_PERSON_FK
  FOREIGN KEY (PERSON_ID)
  REFERENCES PEOPLE (PERSON_ID)
  ON DELETE CASCADE;

ALTER TABLE COEPRINCIPAL ADD CONSTRAINT COEPRINCIPAL_GROUP_FK
  FOREIGN KEY (GROUP_ID)
  REFERENCES COEGROUP (GROUP_ID)
  ON DELETE CASCADE;

ALTER TABLE COEPRINCIPAL ADD CONSTRAINT COEPRINCIPAL_1_CHK
  CHECK ((PERSON_ID IS NULL OR GROUP_ID IS NULL) AND
  NOT (PERSON_ID IS NOT NULL AND GROUP_ID IS NOT NULL));

CREATE SEQUENCE COEPRINCIPAL_ID_SEQ;

CREATE TRIGGER COEPRINCIPAL_BI
   BEFORE INSERT
   ON COEPRINCIPAL
   FOR EACH ROW
   WHEN (NEW.PRINCIPAL_ID IS NULL)
BEGIN
   SELECT COEPRINCIPAL_ID_SEQ.NEXTVAL
     INTO :NEW.PRINCIPAL_ID
     FROM DUAL;
END;
/
