// The following code was generated by Microsoft Visual Studio 2005.
// The test owner should check each test for validity.
using Microsoft.VisualStudio.TestTools.UnitTesting;
using System;
using System.Text;
using System.Collections.Generic;
namespace CambridgeSoft.COE.Registration.Services.UnitTests {
    /// <summary>
    ///This is a test class for StoringServices and is intended
    ///to contain all StoringServices Unit Tests
    ///</summary>
    [TestClass()]
    public class StoringServicesTest {


        private TestContext testContextInstance;
        private COERegistrationServices.COECredentials _credentials = new COERegistrationServices.COECredentials();
        private COERegistrationServices.COERegistrationServices _webService = new COERegistrationServices.COERegistrationServices();

        /// <summary>
        ///Gets or sets the test context which provides
        ///information about and functionality for the current test run.
        ///</summary>
        public TestContext TestContext {
            get {
                return testContextInstance;
            }
            set {
                testContextInstance = value;
            }
        }
        #region Additional test attributes
        // 
        //You can use the following additional attributes as you write your tests:
        //
        //Use ClassInitialize to run code before running the first test in the class
        //
        //[ClassInitialize()]
        //public static void MyClassInitialize(TestContext testContext)
        //{
        //}
        //
        //Use ClassCleanup to run code after all tests in a class have run
        //
        //[ClassCleanup()]
        //public static void MyClassCleanup()
        //{
        //}
        //
        //Use TestInitialize to run code before running each test
        //
        [TestInitialize()]
        public void MyTestInitialize()
        {
            _credentials.AuthenticationTicket = "3245po3 aejopr233r 8p fpj4235 o231 32";
            _webService.COECredentialsValue = _credentials;
        }
        //
        //Use TestCleanup to run code after each test has run
        //
        //[TestCleanup()]
        //public void MyTestCleanup()
        //{
        //}
        //
        #endregion


        /// <summary>
        ///A test for GetTemporalId ()
        ///</summary>
        [TestMethod()]
        public void GetTemporalIdTest() {
            // Unit Test Generation Error: Web reference for StoringServices.GetTemporalId cannot be found or created.
            int tempId;
            string tempidString = _webService.GetTempID();
            Assert.IsTrue(int.TryParse(tempidString, out tempId), "The test failed");
        }

        /// <summary>
        ///A test for SaveRegistryRecord (string)
        ///</summary>
        [TestMethod()]
        public void SaveRegistryRecordTest() {
            // Unit Test Generation Error: Web reference for StoringServices.SaveRegistryRecord cannot be found or created.
            string sampleXmlForSingleCompound = @"<SingleCompoundRegistryRecord>
  <ID>3</ID>
  <Compound>
    <CompoundID>3</CompoundID>
    <IdentifierList>
      <Identifier>
        <ID>0</ID>
        <Description>
        </Description>
        <Type>0</Type>
        <Value>
        </Value>
      </Identifier>
      <Identifier>
        <ID>0</ID>
        <Description>
        </Description>
        <Type>0</Type>
        <Value>
        </Value>
      </Identifier>
      <Identifier>
        <ID>0</ID>
        <Description>
        </Description>
        <Type>0</Type>
        <Value>
        </Value>
      </Identifier>
      <Identifier>
        <ID>0</ID>
        <Description>
        </Description>
        <Type>0</Type>
        <Value>
        </Value>
      </Identifier>
    </IdentifierList>
    <RegNumber>
      <ID>0</ID>
      <RootNumber>
      </RootNumber>
      <SequenceNumber>1</SequenceNumber>
      <Value>
      </Value>
      <Sequence>
        <ID>0</ID>
        <Prefix>
        </Prefix>
        <Suffix>
        </Suffix>
        <PrefixDelimeter>
        </PrefixDelimeter>
        <SuffixDelimeter>
        </SuffixDelimeter>
        <RootNumberLength>6</RootNumberLength>
        <Active>True</Active>
      </Sequence>
    </RegNumber>
    <BaseFragment>
      <ID>0</ID>
      <Structure>
        <StructureID>0</StructureID>
        <StructureFormat>
        </StructureFormat>
        <Structure>VmpDRDAxMDAEAwIBAAAAAAAAAAAAAACAAAAAAAMADwAAAENoZW1EcmF3IDEwLjAIABMAAABVbnRpdGxlZCBEb2N1bWVudAQCEAAyrCgA7IROAM3TZQA5cbcAAQkIAAAAAAAAAAAAAgkIAABAsAAAwNgADQgBAAEIBwEAAToEAQABOwQBAABFBAEAATwEAQAADAYBAAEPBgEAAQ0GAQAAQgQBAABDBAEAAEQEAQAACggIAAMAYADIAAMACwgIAAQAAADwAAMACQgEADOzAgAICAQAAAACAAcIBAAAAAEABggEAAAABAAFCAQAAAAeAAQIAgB4AAMIBAAAAHgAIwgBAAUMCAEAAAIIEAAAACQAAAAkAAAAJAAAACQAAAMyAAgA////////AAAAAAAA//8AAAAA/////wAAAAD//wAAAAD/////AAAAAP////8AAP//AAEkAAAAAgADAOQEBQBBcmlhbAQA5AQPAFRpbWVzIE5ldyBSb21hbgGAYgAAAAQCEAAAAAAAAAAAAAAA6AMAAOgDFggEAAAAJAAYCAQAAAAkABkIAAAQCAIAAQAPCAIAAQADgEUAAAAEAhAAMqwoAOyETgDN02UAOXG3AASAQgAAAAACCAAAQDgA7ARPAAoAAgABADcEAQABAAAEgEQAAAAAAggAAEBWAOwETwAKAAIAAwA3BAEAAQAABIBGAAAAAAIIAABAZQAAAGkACgACAAUANwQBAAEAAASASAAAAAACCAAAQFYAE/uCAAoAAgAHAAAABIBKAAAAAAIIAABAOAAT+4IACgACAAkAAAAEgEwAAAAAAggAAEApAAAAaQAKAAIACwA3BAEAAQAABIBUAAAAAAIIAABAZQAm9pwACgACABMANwQBAAEAAASAVgAAAAACCAAAQFYAOfG2AAoAAgAVADcEAQABAAAEgFgAAAAAAggAAEA4ADnxtgAKAAIAFwA3BAEAAQAABIBaAAAAAAIIAABAKQAm9pwACgACABkANwQBAAEAAAWATgAAAAoAAgANAAQGBABCAAAABQYEAEQAAAAABgIAAgADBgIAAQALBhAAUwAAAAAAAAAAAAAATwAAAAAABYBPAAAACgACAA4ABAYEAEQAAAAFBgQARgAAAAoGAQABAAAFgFAAAAAKAAIADwAEBgQARgAAAAUGBABIAAAAAAYCAAIAAwYCAAEACwYQAE8AAAAAAAAAXAAAAFEAAAAAAAWAUQAAAAoAAgAQAAQGBABIAAAABQYEAEoAAAAKBgEAAQAABYBSAAAACgACABEABAYEAEoAAAAFBgQATAAAAAAGAgACAAMGAgABAAsGEABRAAAAYAAAAAAAAABTAAAAAAAFgFMAAAAKAAIAEgAEBgQATAAAAAUGBABCAAAACgYBAAEAAAWAXAAAAAoAAgAbAAQGBABIAAAABQYEAFQAAAAKBgEAAQAABYBdAAAACgACABwABAYEAFQAAAAFBgQAVgAAAAAGAgACAAMGAgABAAsGEABcAAAAAAAAAAAAAABeAAAAAAAFgF4AAAAKAAIAHQAEBgQAVgAAAAUGBABYAAAACgYBAAEAAAWAXwAAAAoAAgAeAAQGBABYAAAABQYEAFoAAAAABgIAAgADBgIAAQALBhAAXgAAAAAAAAAAAAAAYAAAAAAABYBgAAAACgACAB8ABAYEAFoAAAAFBgQASgAAAAoGAQABAAAAAAAAAAAAAA==</Structure>
      </Structure>
    </BaseFragment>
    <FragmentList>
      <Fragment>
        <ID>0</ID>
        <Code>0</Code>
        <Description>
        </Description>
        <DateCreated>1/1/0001 12:00:00 AM</DateCreated>
        <DateLastModified>1/1/0001 12:00:00 AM</DateLastModified>
        <Structure>
          <StructureID>0</StructureID>
          <StructureFormat>
          </StructureFormat>
          <Structure>
          </Structure>
        </Structure>
      </Fragment>
    </FragmentList>
    <PropertyList>
      <Property>
        <ID>0</ID>
        <Name>CN</Name>
        <Type>
        </Type>
        <Value>00101</Value>
      </Property>
      <Property>
        <ID>0</ID>
        <Name>Patent</Name>
        <Type>
        </Type>
        <Value>1101</Value>
      </Property>
      <Property>
        <ID>0</ID>
        <Name>History</Name>
        <Type>
        </Type>
        <Value>Unknown</Value>
      </Property>
      <Property>
        <ID>0</ID>
        <Name>OCURR</Name>
        <Type>
        </Type>
        <Value>Once a while</Value>
      </Property>
      <Property>
        <ID>0</ID>
        <Name>Comment</Name>
        <Type>
        </Type>
        <Value>Nothing to say</Value>
      </Property>
    </PropertyList>
    <ProjectList>
      <Project>
        <ID>0</ID>
        <Name>0</Name>
        <Description>CN312Patent360History3120OCURR3120Comment32400495COItemNumberNotebookRef3120Purity2240OpticalRotation360RefractionIndex360NumMSNumAnalChemistWorkNumberRemarks360Comments360DateEnteredDeliveryDateMeltingPoint360BoilingPoint360Density360Polarity360Solubility360RetentionIndex360MonomericComposition360DegreeOfSubstitution360Ramification360</Description>
        <PersonList>
          <Person>
            <ID>0</ID>
            <FirstName>CN312Patent360History3120OCURR3120Comment32400495COItemNumberNotebookRef3120Purity2240OpticalRotation360RefractionIndex360NumMSNumAnalChemistWorkNumberRemarks360Comments360DateEnteredDeliveryDateMeltingPoint360BoilingPoint360Density360Polarity360Solubility360RetentionIndex360MonomericComposition360DegreeOfSubstitution360Ramification360</FirstName>
            <MiddleName>
            </MiddleName>
            <LastName>
            </LastName>
            <Supervisor>0</Supervisor>
            <Code>
            </Code>
            <Title>
            </Title>
            <Department>
            </Department>
            <Site>0</Site>
            <Address>
            </Address>
            <Phone>
            </Phone>
            <Email>
            </Email>
            <Active>False</Active>
            <PrivilegeList>
            </PrivilegeList>
          </Person>
        </PersonList>
      </Project>
    </ProjectList>
    <BatchList>
      <Batch>
        <BatchID>0</BatchID>
        <Description>
        </Description>
        <DateCreated>1/1/0001 12:00:00 AM</DateCreated>
        <PersonCreated>
        </PersonCreated>
        <DateLastModified>1/1/0001 12:00:00 AM</DateLastModified>
        <ParentID>0</ParentID>
        <ProjectList>
          <Project>
            <ID>0</ID>
            <Name>0</Name>
            <PersonList>
              <Person>
                <ID>0</ID>
                <FirstName>
                </FirstName>
                <MiddleName>
                </MiddleName>
                <LastName>
                </LastName>
                <Supervisor>0</Supervisor>
                <Code>
                </Code>
                <Title>
                </Title>
                <Department>
                </Department>
                <Site>0</Site>
                <Address>
                </Address>
                <Phone>
                </Phone>
                <Email>
                </Email>
                <Active>False</Active>
                <PrivilegeList>
                </PrivilegeList>
              </Person>
            </PersonList>
          </Project>
        </ProjectList>
        <PropertyList>
          <Property>
            <ID>0</ID>
            <Name>CO</Name>
            <Type>
            </Type>
            <Value>121</Value>
          </Property>
          <Property>
            <ID>0</ID>
            <Name>ItemNumber</Name>
            <Type>
            </Type>
            <Value>121</Value>
          </Property>
          <Property>
            <ID>0</ID>
            <Name>NotebookRef</Name>
            <Type>
            </Type>
            <Value>234</Value>
          </Property>
          <Property>
            <ID>0</ID>
            <Name>Purity</Name>
            <Type>
            </Type>
            <Value>212</Value>
          </Property>
          <Property>
            <ID>0</ID>
            <Name>OpticalRotation</Name>
            <Type>
            </Type>
            <Value>121</Value>
          </Property>
          <Property>
            <ID>0</ID>
            <Name>RefractionIndex</Name>
            <Type>
            </Type>
            <Value>341</Value>
          </Property>
          <Property>
            <ID>0</ID>
            <Name>NumMS</Name>
            <Type>
            </Type>
            <Value>124</Value>
          </Property>
          <Property>
            <ID>0</ID>
            <Name>NumAnal</Name>
            <Type>
            </Type>
            <Value>341</Value>
          </Property>
          <Property>
            <ID>0</ID>
            <Name>Chemist</Name>
            <Type>
            </Type>
            <Value>Csla.NameValueListBase`2+NameValuePair[System.Int32,System.String]</Value>
          </Property>
          <Property>
            <ID>0</ID>
            <Name>WorkNumber</Name>
            <Type>
            </Type>
            <Value>314</Value>
          </Property>
          <Property>
            <ID>0</ID>
            <Name>Remarks</Name>
            <Type>
            </Type>
            <Value>12341231234</Value>
          </Property>
          <Property>
            <ID>0</ID>
            <Name>Comments</Name>
            <Type>
            </Type>
            <Value>1234124231</Value>
          </Property>
          <Property>
            <ID>0</ID>
            <Name>DateEntered</Name>
            <Type>
            </Type>
            <Value>
            </Value>
          </Property>
          <Property>
            <ID>0</ID>
            <Name>DeliveryDate</Name>
            <Type>
            </Type>
            <Value>
            </Value>
          </Property>
          <Property>
            <ID>0</ID>
            <Name>MeltingPoint</Name>
            <Type>
            </Type>
            <Value>
            </Value>
          </Property>
          <Property>
            <ID>0</ID>
            <Name>BoilingPoint</Name>
            <Type>
            </Type>
            <Value>
            </Value>
          </Property>
          <Property>
            <ID>0</ID>
            <Name>Density</Name>
            <Type>
            </Type>
            <Value>1234</Value>
          </Property>
          <Property>
            <ID>0</ID>
            <Name>Polarity</Name>
            <Type>
            </Type>
            <Value>1234</Value>
          </Property>
          <Property>
            <ID>0</ID>
            <Name>Solubility</Name>
            <Type>
            </Type>
            <Value>1234</Value>
          </Property>
          <Property>
            <ID>0</ID>
            <Name>RetentionIndex</Name>
            <Type>
            </Type>
            <Value>1234</Value>
          </Property>
          <Property>
            <ID>0</ID>
            <Name>MonomericComposition</Name>
            <Type>
            </Type>
            <Value>1234</Value>
          </Property>
          <Property>
            <ID>0</ID>
            <Name>DegreeOfSubstitution</Name>
            <Type>
            </Type>
            <Value>1234</Value>
          </Property>
          <Property>
            <ID>0</ID>
            <Name>Ramification</Name>
            <Type>
            </Type>
            <Value>1234</Value>
          </Property>
        </PropertyList>
      </Batch>
    </BatchList>
  </Compound>
</SingleCompoundRegistryRecord>";
            int savedId;
            string savedIdAsString = _webService.SaveRegistryRecord(sampleXmlForSingleCompound);
            Assert.IsTrue(int.TryParse(savedIdAsString, out savedId), "Could not save the compound");
        }

    }


}
